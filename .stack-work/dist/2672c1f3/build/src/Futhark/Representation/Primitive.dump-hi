
==================== FINAL INTERFACE ====================
2016-08-04 10:11:14.7953156 UTC

interface futha_GJqcXjzuDAgKwUW9oTf4td:Futhark.Representation.Primitive 7103
  interface hash: cb2e1356482ad873a71efb4290eb57e1
  ABI hash: ad708969d75463632f432066d13a8ed9
  export-list hash: 47297e81fec7a346ffe94b187eb5d0ed
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: bb9f950cbd97454a048cc0b04ddd4727
  sig of: Nothing
  used TH splices: False
  where
exports:
  Futhark.Representation.Primitive.binOpType
  Futhark.Representation.Primitive.blankPrimValue
  Futhark.Representation.Primitive.convTypes
  Futhark.Representation.Primitive.doAShr
  Futhark.Representation.Primitive.doAbs
  Futhark.Representation.Primitive.doAdd
  Futhark.Representation.Primitive.doAnd
  Futhark.Representation.Primitive.doBinOp
  Futhark.Representation.Primitive.doCmpEq
  Futhark.Representation.Primitive.doCmpOp
  Futhark.Representation.Primitive.doCmpSle
  Futhark.Representation.Primitive.doCmpSlt
  Futhark.Representation.Primitive.doCmpUle
  Futhark.Representation.Primitive.doCmpUlt
  Futhark.Representation.Primitive.doComplement
  Futhark.Representation.Primitive.doConvOp
  Futhark.Representation.Primitive.doFAbs
  Futhark.Representation.Primitive.doFAdd
  Futhark.Representation.Primitive.doFCmpLe
  Futhark.Representation.Primitive.doFCmpLt
  Futhark.Representation.Primitive.doFDiv
  Futhark.Representation.Primitive.doFMul
  Futhark.Representation.Primitive.doFPConv
  Futhark.Representation.Primitive.doFPToSI
  Futhark.Representation.Primitive.doFPToUI
  Futhark.Representation.Primitive.doFPow
  Futhark.Representation.Primitive.doFSub
  Futhark.Representation.Primitive.doLShr
  Futhark.Representation.Primitive.doMul
  Futhark.Representation.Primitive.doOr
  Futhark.Representation.Primitive.doPow
  Futhark.Representation.Primitive.doSDiv
  Futhark.Representation.Primitive.doSExt
  Futhark.Representation.Primitive.doSIToFP
  Futhark.Representation.Primitive.doSMod
  Futhark.Representation.Primitive.doSQuot
  Futhark.Representation.Primitive.doSRem
  Futhark.Representation.Primitive.doSSignum
  Futhark.Representation.Primitive.doShl
  Futhark.Representation.Primitive.doSub
  Futhark.Representation.Primitive.doUDiv
  Futhark.Representation.Primitive.doUIToFP
  Futhark.Representation.Primitive.doUMod
  Futhark.Representation.Primitive.doUSignum
  Futhark.Representation.Primitive.doUnOp
  Futhark.Representation.Primitive.doXor
  Futhark.Representation.Primitive.doZExt
  Futhark.Representation.Primitive.floatValue
  Futhark.Representation.Primitive.floatValueType
  Futhark.Representation.Primitive.intValue
  Futhark.Representation.Primitive.intValueType
  Futhark.Representation.Primitive.oneIsh
  Futhark.Representation.Primitive.primBitSize
  Futhark.Representation.Primitive.primByteSize
  Futhark.Representation.Primitive.primValueType
  Futhark.Representation.Primitive.unOpType
  Futhark.Representation.Primitive.zeroIsh
  Futhark.Representation.Primitive.BinOp{Futhark.Representation.Primitive.AShr Futhark.Representation.Primitive.Add Futhark.Representation.Primitive.And Futhark.Representation.Primitive.FAdd Futhark.Representation.Primitive.FDiv Futhark.Representation.Primitive.FMul Futhark.Representation.Primitive.FPow Futhark.Representation.Primitive.FSub Futhark.Representation.Primitive.LShr Futhark.Representation.Primitive.LogAnd Futhark.Representation.Primitive.LogOr Futhark.Representation.Primitive.Mul Futhark.Representation.Primitive.Or Futhark.Representation.Primitive.Pow Futhark.Representation.Primitive.SDiv Futhark.Representation.Primitive.SMod Futhark.Representation.Primitive.SQuot Futhark.Representation.Primitive.SRem Futhark.Representation.Primitive.Shl Futhark.Representation.Primitive.Sub Futhark.Representation.Primitive.UDiv Futhark.Representation.Primitive.UMod Futhark.Representation.Primitive.Xor}
  Futhark.Representation.Primitive.CmpOp{Futhark.Representation.Primitive.CmpEq Futhark.Representation.Primitive.CmpSle Futhark.Representation.Primitive.CmpSlt Futhark.Representation.Primitive.CmpUle Futhark.Representation.Primitive.CmpUlt Futhark.Representation.Primitive.FCmpLe Futhark.Representation.Primitive.FCmpLt}
  Futhark.Representation.Primitive.ConvOp{Futhark.Representation.Primitive.FPConv Futhark.Representation.Primitive.FPToSI Futhark.Representation.Primitive.FPToUI Futhark.Representation.Primitive.SExt Futhark.Representation.Primitive.SIToFP Futhark.Representation.Primitive.UIToFP Futhark.Representation.Primitive.ZExt}
  Futhark.Representation.Primitive.FloatType{Futhark.Representation.Primitive.Float32 Futhark.Representation.Primitive.Float64}
  Futhark.Representation.Primitive.FloatValue{Futhark.Representation.Primitive.Float32Value Futhark.Representation.Primitive.Float64Value}
  Futhark.Representation.Primitive.IntType{Futhark.Representation.Primitive.Int16 Futhark.Representation.Primitive.Int32 Futhark.Representation.Primitive.Int64 Futhark.Representation.Primitive.Int8}
  Futhark.Representation.Primitive.IntValue{Futhark.Representation.Primitive.Int16Value Futhark.Representation.Primitive.Int32Value Futhark.Representation.Primitive.Int64Value Futhark.Representation.Primitive.Int8Value}
  Futhark.Representation.Primitive.PrimType{Futhark.Representation.Primitive.Bool Futhark.Representation.Primitive.Cert Futhark.Representation.Primitive.FloatType Futhark.Representation.Primitive.IntType}
  Futhark.Representation.Primitive.PrimValue{Futhark.Representation.Primitive.BoolValue Futhark.Representation.Primitive.Checked Futhark.Representation.Primitive.FloatValue Futhark.Representation.Primitive.IntValue}
  Futhark.Representation.Primitive.UnOp{Futhark.Representation.Primitive.Abs Futhark.Representation.Primitive.Complement Futhark.Representation.Primitive.FAbs Futhark.Representation.Primitive.Not Futhark.Representation.Primitive.SSignum Futhark.Representation.Primitive.USignum}
module dependencies: Futhark.Util.Pretty
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0 binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      mainland-pretty-0.4.1.4@mainl_KnIUy4mTEecCOphhB8nGQj
                      srcloc-0.5.1.0@srclo_IrVSavrho0x78ZSJU92mrC
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Data.Bits 87f514c5f0e66e224843da33c04aa38b
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:Data.Int 1419fa899a36eeb2bd16fdb7f0a89738
import  -/  base-4.8.2.0:Data.Word ec8deb535202352cc8b509b14004bcbd
import  -/  base-4.8.2.0:GHC.Base a4939789b2cfd60b36ed163e56a623cd
import  -/  base-4.8.2.0:GHC.Enum debc6de3086023a15993ab0cecffb90b
import  -/  base-4.8.2.0:GHC.Float e532d434ec2447d809887c0fca1d78a5
import  -/  base-4.8.2.0:GHC.Int 28d8a9f7cfc272358fb4631d98c579ce
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:GHC.Word 10dc88543d98000abab9695a1019767d
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  Futhark.Util.Pretty 601f394d0fcf8c3f9022409f829de03f
  exports: 1aabf1400c3a1f20da395d5d151ff12f
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable cd89f02614e821fc8b0b3d7bd7501891
import  -/  hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Class 15f774badf396c367b54dbfebb40dc74
import  -/  mainland-pretty-0.4.1.4@mainl_KnIUy4mTEecCOphhB8nGQj:Text.PrettyPrint.Mainland 8fa8b328ca92dfe598e5a18c4976eaac
306ea34947128e48fabb2e3ff22f5fb7
  $fBoundedFloatType ::
    GHC.Enum.Bounded Futhark.Representation.Primitive.FloatType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatType
                  Futhark.Representation.Primitive.Float32
                  Futhark.Representation.Primitive.Float64 -}
41164198bc42f58dac94bb14a13a0e54
  $fBoundedIntType ::
    GHC.Enum.Bounded Futhark.Representation.Primitive.IntType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntType
                  Futhark.Representation.Primitive.Int8
                  Futhark.Representation.Primitive.Int64 -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fBoundedPrimType ::
    GHC.Enum.Bounded Futhark.Representation.Primitive.PrimType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimType
                  Futhark.Representation.Primitive.$fBoundedPrimType1
                  Futhark.Representation.Primitive.Cert -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fBoundedPrimType1 :: Futhark.Representation.Primitive.PrimType
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.IntType
                   Futhark.Representation.Primitive.Int8) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType ::
    GHC.Enum.Enum Futhark.Representation.Primitive.FloatType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatType
                  Futhark.Representation.Primitive.$fEnumFloatType_$csucc
                  Futhark.Representation.Primitive.$fEnumFloatType_$cpred
                  Futhark.Representation.Primitive.$fEnumFloatType_$ctoEnum
                  Futhark.Representation.Primitive.$fEnumFloatType_$cfromEnum
                  Futhark.Representation.Primitive.$fEnumFloatType_$cenumFrom
                  Futhark.Representation.Primitive.$fEnumFloatType_$cenumFromThen
                  Futhark.Representation.Primitive.$fEnumFloatType_$cenumFromTo
                  Futhark.Representation.Primitive.$fEnumFloatType_$cenumFromThenTo -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType1 ::
    GHC.Prim.Int# -> Futhark.Representation.Primitive.FloatType
  {- Arity: 1, Strictness: <L,U>b -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType2 :: [Futhark.Representation.Primitive.FloatType]
  {- Unfolding: (Futhark.Representation.Primitive.$fEnumFloatType_go2
                   1) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType3 :: [Futhark.Representation.Primitive.FloatType]
  {- Unfolding: (Futhark.Representation.Primitive.$fEnumFloatType_go3
                   0) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType4 :: Futhark.Representation.Primitive.FloatType
  {- Strictness: b -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType5 :: Futhark.Representation.Primitive.FloatType
  {- Strictness: b -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_$cenumFrom ::
    Futhark.Representation.Primitive.FloatType
    -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> Futhark.Representation.Primitive.$fEnumFloatType3
                   Futhark.Representation.Primitive.Float64
                   -> Futhark.Representation.Primitive.$fEnumFloatType2 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_$cenumFromThen ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
    -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.FloatType
                   b :: Futhark.Representation.Primitive.FloatType ->
                 let {
                   $j :: GHC.Prim.Int# -> [Futhark.Representation.Primitive.FloatType]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Futhark.Representation.Primitive.FloatType]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int#
                                  -> [Futhark.Representation.Primitive.FloatType]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Futhark.Representation.Primitive.FloatType]
                                    Futhark.Representation.Primitive.$fEnumFloatType_c1
                                    (GHC.Types.[] @ Futhark.Representation.Primitive.FloatType)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Futhark.Representation.Primitive.FloatType]
                                    Futhark.Representation.Primitive.$fEnumFloatType_c1
                                    (GHC.Types.[] @ Futhark.Representation.Primitive.FloatType)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       Futhark.Representation.Primitive.Float32 -> $j1 0
                       Futhark.Representation.Primitive.Float64 -> $j1 1 }
                 } in
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32 -> $j 0
                   Futhark.Representation.Primitive.Float64 -> $j 1 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_$cenumFromThenTo ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
    -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: Futhark.Representation.Primitive.FloatType
                   x2 :: Futhark.Representation.Primitive.FloatType
                   y :: Futhark.Representation.Primitive.FloatType ->
                 let {
                   $j :: GHC.Prim.Int# -> [Futhark.Representation.Primitive.FloatType]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x4 :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int#
                              -> [Futhark.Representation.Primitive.FloatType]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ x5 :: GHC.Prim.Int#[OneShot] ->
                         case y of wild {
                           Futhark.Representation.Primitive.Float32
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Futhark.Representation.Primitive.FloatType]
                                     Futhark.Representation.Primitive.$fEnumFloatType_c
                                     (GHC.Types.[] @ Futhark.Representation.Primitive.FloatType)
                                     x4
                                     x5
                                     0
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Futhark.Representation.Primitive.FloatType]
                                     Futhark.Representation.Primitive.$fEnumFloatType_c
                                     (GHC.Types.[] @ Futhark.Representation.Primitive.FloatType)
                                     x4
                                     x5
                                     0 }
                           Futhark.Representation.Primitive.Float64
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [Futhark.Representation.Primitive.FloatType]
                                     Futhark.Representation.Primitive.$fEnumFloatType_c
                                     (GHC.Types.[] @ Futhark.Representation.Primitive.FloatType)
                                     x4
                                     x5
                                     1
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [Futhark.Representation.Primitive.FloatType]
                                     Futhark.Representation.Primitive.$fEnumFloatType_c
                                     (GHC.Types.[] @ Futhark.Representation.Primitive.FloatType)
                                     x4
                                     x5
                                     1 } }
                     } in
                     case x2 of wild {
                       Futhark.Representation.Primitive.Float32 -> $j1 0
                       Futhark.Representation.Primitive.Float64 -> $j1 1 }
                 } in
                 case x1 of wild {
                   Futhark.Representation.Primitive.Float32 -> $j 0
                   Futhark.Representation.Primitive.Float64 -> $j 1 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_$cenumFromTo ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
    -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.FloatType
                   y :: Futhark.Representation.Primitive.FloatType ->
                 let {
                   $j :: GHC.Prim.Int# -> [Futhark.Representation.Primitive.FloatType]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       Futhark.Representation.Primitive.Float32
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.$fEnumFloatType_go1 x1
                            GHC.Types.True
                            -> GHC.Types.[] @ Futhark.Representation.Primitive.FloatType }
                       Futhark.Representation.Primitive.Float64
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.$fEnumFloatType_go x1
                            GHC.Types.True
                            -> GHC.Types.[] @ Futhark.Representation.Primitive.FloatType } }
                 } in
                 case x of wild {
                   Futhark.Representation.Primitive.Float32 -> $j 0
                   Futhark.Representation.Primitive.Float64 -> $j 1 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_$cfromEnum ::
    Futhark.Representation.Primitive.FloatType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32 -> GHC.Types.I# 0
                   Futhark.Representation.Primitive.Float64 -> GHC.Types.I# 1 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_$cpred ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> Futhark.Representation.Primitive.$fEnumFloatType4
                   Futhark.Representation.Primitive.Float64
                   -> Futhark.Representation.Primitive.Float32 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_$csucc ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> Futhark.Representation.Primitive.Float64
                   Futhark.Representation.Primitive.Float64
                   -> Futhark.Representation.Primitive.$fEnumFloatType5 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_$ctoEnum ::
    GHC.Types.Int -> Futhark.Representation.Primitive.FloatType
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Futhark.Representation.Primitive.$w$ctoEnum ww1 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_c ::
    GHC.Types.Int
    -> [Futhark.Representation.Primitive.FloatType]
    -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Futhark.Representation.Primitive.FloatType] ->
                 GHC.Types.:
                   @ Futhark.Representation.Primitive.FloatType
                   (Futhark.Representation.Primitive.$fEnumFloatType_$ctoEnum x)
                   ys) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_c1 ::
    GHC.Types.Int
    -> [Futhark.Representation.Primitive.FloatType]
    -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Futhark.Representation.Primitive.FloatType] ->
                 GHC.Types.:
                   @ Futhark.Representation.Primitive.FloatType
                   (case x of wild { GHC.Types.I# a2 ->
                    GHC.Prim.tagToEnum#
                      @ Futhark.Representation.Primitive.FloatType
                      a2 })
                   ys) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_go ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 1, Strictness: <L,U> -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_go1 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 1, Strictness: <L,U> -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_go2 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEnumFloatType_go3 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.FloatType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType ::
    GHC.Enum.Enum Futhark.Representation.Primitive.IntType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntType
                  Futhark.Representation.Primitive.$fEnumIntType_$csucc
                  Futhark.Representation.Primitive.$fEnumIntType_$cpred
                  Futhark.Representation.Primitive.$fEnumIntType_$ctoEnum
                  Futhark.Representation.Primitive.$fEnumIntType_$cfromEnum
                  Futhark.Representation.Primitive.$fEnumIntType_$cenumFrom
                  Futhark.Representation.Primitive.$fEnumIntType_$cenumFromThen
                  Futhark.Representation.Primitive.$fEnumIntType_$cenumFromTo
                  Futhark.Representation.Primitive.$fEnumIntType_$cenumFromThenTo -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType1 :: [Futhark.Representation.Primitive.IntType]
  {- Unfolding: (Futhark.Representation.Primitive.$fEnumIntType_go4
                   3) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType2 :: [Futhark.Representation.Primitive.IntType]
  {- Unfolding: (Futhark.Representation.Primitive.$fEnumIntType_go5
                   2) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType3 :: [Futhark.Representation.Primitive.IntType]
  {- Unfolding: (Futhark.Representation.Primitive.$fEnumIntType_go6
                   1) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType4 :: [Futhark.Representation.Primitive.IntType]
  {- Unfolding: (Futhark.Representation.Primitive.$fEnumIntType_go7
                   0) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType5 ::
    GHC.Prim.Int# -> Futhark.Representation.Primitive.IntType
  {- Arity: 1, Strictness: <L,U>b -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType6 :: Futhark.Representation.Primitive.IntType
  {- Strictness: b -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType7 :: Futhark.Representation.Primitive.IntType
  {- Strictness: b -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_$cenumFrom ::
    Futhark.Representation.Primitive.IntType
    -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> Futhark.Representation.Primitive.$fEnumIntType4
                   Futhark.Representation.Primitive.Int16
                   -> Futhark.Representation.Primitive.$fEnumIntType3
                   Futhark.Representation.Primitive.Int32
                   -> Futhark.Representation.Primitive.$fEnumIntType2
                   Futhark.Representation.Primitive.Int64
                   -> Futhark.Representation.Primitive.$fEnumIntType1 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_$cenumFromThen ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
    -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntType
                   b :: Futhark.Representation.Primitive.IntType ->
                 let {
                   $j :: GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ a# :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
                         {- Arity: 1, Strictness: <L,U> -}
                       = \ b# :: GHC.Prim.Int#[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
                             {- Arity: 1, Strictness: <L,U> -}
                           = \ y :: GHC.Prim.Int#[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [Futhark.Representation.Primitive.IntType]
                                    Futhark.Representation.Primitive.$fEnumIntType_c
                                    (GHC.Types.[] @ Futhark.Representation.Primitive.IntType)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [Futhark.Representation.Primitive.IntType]
                                    Futhark.Representation.Primitive.$fEnumIntType_c
                                    (GHC.Types.[] @ Futhark.Representation.Primitive.IntType)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 3 GHC.Types.True -> $j2 0 }
                     } in
                     case b of wild {
                       Futhark.Representation.Primitive.Int8 -> $j1 0
                       Futhark.Representation.Primitive.Int16 -> $j1 1
                       Futhark.Representation.Primitive.Int32 -> $j1 2
                       Futhark.Representation.Primitive.Int64 -> $j1 3 }
                 } in
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8 -> $j 0
                   Futhark.Representation.Primitive.Int16 -> $j 1
                   Futhark.Representation.Primitive.Int32 -> $j 2
                   Futhark.Representation.Primitive.Int64 -> $j 3 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_$cenumFromThenTo ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
    -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_$cenumFromTo ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
    -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.IntType
                   y :: Futhark.Representation.Primitive.IntType ->
                 let {
                   $j :: GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x1 :: GHC.Prim.Int#[OneShot] ->
                     case y of wild {
                       Futhark.Representation.Primitive.Int8
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.$fEnumIntType_go3 x1
                            GHC.Types.True
                            -> GHC.Types.[] @ Futhark.Representation.Primitive.IntType }
                       Futhark.Representation.Primitive.Int16
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.$fEnumIntType_go2 x1
                            GHC.Types.True
                            -> GHC.Types.[] @ Futhark.Representation.Primitive.IntType }
                       Futhark.Representation.Primitive.Int32
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.$fEnumIntType_go1 x1
                            GHC.Types.True
                            -> GHC.Types.[] @ Futhark.Representation.Primitive.IntType }
                       Futhark.Representation.Primitive.Int64
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 3) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.$fEnumIntType_go x1
                            GHC.Types.True
                            -> GHC.Types.[] @ Futhark.Representation.Primitive.IntType } }
                 } in
                 case x of wild {
                   Futhark.Representation.Primitive.Int8 -> $j 0
                   Futhark.Representation.Primitive.Int16 -> $j 1
                   Futhark.Representation.Primitive.Int32 -> $j 2
                   Futhark.Representation.Primitive.Int64 -> $j 3 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_$cfromEnum ::
    Futhark.Representation.Primitive.IntType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ a2 :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8 -> GHC.Types.I# 0
                   Futhark.Representation.Primitive.Int16 -> GHC.Types.I# 1
                   Futhark.Representation.Primitive.Int32 -> GHC.Types.I# 2
                   Futhark.Representation.Primitive.Int64 -> GHC.Types.I# 3 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_$cpred ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a2 :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> Futhark.Representation.Primitive.$fEnumIntType6
                   Futhark.Representation.Primitive.Int16
                   -> Futhark.Representation.Primitive.Int8
                   Futhark.Representation.Primitive.Int32
                   -> Futhark.Representation.Primitive.Int16
                   Futhark.Representation.Primitive.Int64
                   -> Futhark.Representation.Primitive.Int32 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_$csucc ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ a2 :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> Futhark.Representation.Primitive.Int16
                   Futhark.Representation.Primitive.Int16
                   -> Futhark.Representation.Primitive.Int32
                   Futhark.Representation.Primitive.Int32
                   -> Futhark.Representation.Primitive.Int64
                   Futhark.Representation.Primitive.Int64
                   -> Futhark.Representation.Primitive.$fEnumIntType7 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_$ctoEnum ::
    GHC.Types.Int -> Futhark.Representation.Primitive.IntType
  {- Arity: 1, Strictness: <S,1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Futhark.Representation.Primitive.$w$ctoEnum1 ww1 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_c ::
    GHC.Types.Int
    -> [Futhark.Representation.Primitive.IntType]
    -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Futhark.Representation.Primitive.IntType] ->
                 GHC.Types.:
                   @ Futhark.Representation.Primitive.IntType
                   (case x of wild { GHC.Types.I# a2 ->
                    GHC.Prim.tagToEnum#
                      @ Futhark.Representation.Primitive.IntType
                      a2 })
                   ys) -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_go ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 1, Strictness: <L,U> -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_go1 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 1, Strictness: <L,U> -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_go2 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 1, Strictness: <L,U> -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_go3 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 1, Strictness: <L,U> -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_go4 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_go5 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_go6 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
41164198bc42f58dac94bb14a13a0e54
  $fEnumIntType_go7 ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.IntType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType ::
    GHC.Enum.Enum Futhark.Representation.Primitive.PrimType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimType
                  Futhark.Representation.Primitive.$fEnumPrimType_$s$dmsucc
                  Futhark.Representation.Primitive.$fEnumPrimType_$s$dmpred
                  Futhark.Representation.Primitive.$fEnumPrimType_$ctoEnum
                  Futhark.Representation.Primitive.$fEnumPrimType_$cfromEnum
                  Futhark.Representation.Primitive.$fEnumPrimType_$cenumFrom
                  Futhark.Representation.Primitive.$fEnumPrimType_$cenumFromThen
                  Futhark.Representation.Primitive.$fEnumPrimType_$cenumFromTo
                  Futhark.Representation.Primitive.$fEnumPrimType_$cenumFromThenTo -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType1 :: Futhark.Representation.Primitive.PrimType
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Futhark.Representation.Primitive.FloatType
                   Futhark.Representation.Primitive.Float64) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType2 :: Futhark.Representation.Primitive.PrimType
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Futhark.Representation.Primitive.FloatType
                   Futhark.Representation.Primitive.Float32) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType3 :: Futhark.Representation.Primitive.PrimType
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.IntType
                   Futhark.Representation.Primitive.Int64) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType4 :: Futhark.Representation.Primitive.PrimType
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.IntType
                   Futhark.Representation.Primitive.Int32) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType5 :: Futhark.Representation.Primitive.PrimType
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.IntType
                   Futhark.Representation.Primitive.Int16) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_$cenumFrom ::
    Futhark.Representation.Primitive.PrimType
    -> [Futhark.Representation.Primitive.PrimType]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.PrimType ->
                 case Futhark.Representation.Primitive.$w$cfromEnum
                        x of ww { DEFAULT ->
                 Futhark.Representation.Primitive.$fEnumPrimType_go ww }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_$cenumFromThen ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
    -> [Futhark.Representation.Primitive.PrimType]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.PrimType
                   y :: Futhark.Representation.Primitive.PrimType ->
                 case Futhark.Representation.Primitive.$w$cfromEnum
                        x of ww { DEFAULT ->
                 case Futhark.Representation.Primitive.$w$cfromEnum
                        y of ww1 { DEFAULT ->
                 GHC.Base.map
                   @ GHC.Types.Int
                   @ Futhark.Representation.Primitive.PrimType
                   Futhark.Representation.Primitive.$fEnumPrimType_$ctoEnum
                   (GHC.Enum.efdInt ww ww1) } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_$cenumFromThenTo ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
    -> [Futhark.Representation.Primitive.PrimType]
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ x1 :: Futhark.Representation.Primitive.PrimType
                   x2 :: Futhark.Representation.Primitive.PrimType
                   y :: Futhark.Representation.Primitive.PrimType ->
                 case Futhark.Representation.Primitive.$w$cfromEnum
                        x1 of ww { DEFAULT ->
                 case Futhark.Representation.Primitive.$w$cfromEnum
                        x2 of ww1 { DEFAULT ->
                 case Futhark.Representation.Primitive.$w$cfromEnum
                        y of ww2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww1 ww) of wild {
                   GHC.Types.False
                   -> GHC.Enum.efdtIntDnFB
                        @ [Futhark.Representation.Primitive.PrimType]
                        Futhark.Representation.Primitive.$fEnumPrimType_c
                        (GHC.Types.[] @ Futhark.Representation.Primitive.PrimType)
                        ww
                        ww1
                        ww2
                   GHC.Types.True
                   -> GHC.Enum.efdtIntUpFB
                        @ [Futhark.Representation.Primitive.PrimType]
                        Futhark.Representation.Primitive.$fEnumPrimType_c
                        (GHC.Types.[] @ Futhark.Representation.Primitive.PrimType)
                        ww
                        ww1
                        ww2 } } } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_$cenumFromTo ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
    -> [Futhark.Representation.Primitive.PrimType]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.PrimType
                   y :: Futhark.Representation.Primitive.PrimType ->
                 case Futhark.Representation.Primitive.$w$cfromEnum
                        x of ww { DEFAULT ->
                 case Futhark.Representation.Primitive.$w$cfromEnum
                        y of ww1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww ww1) of wild {
                   GHC.Types.False
                   -> letrec {
                        go7 :: GHC.Prim.Int# -> [Futhark.Representation.Primitive.PrimType]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Prim.Int# ->
                          GHC.Types.:
                            @ Futhark.Representation.Primitive.PrimType
                            (case x1 of ds {
                               DEFAULT -> Futhark.Representation.Primitive.Cert
                               0 -> Futhark.Representation.Primitive.$fBoundedPrimType1
                               1 -> Futhark.Representation.Primitive.$fEnumPrimType5
                               2 -> Futhark.Representation.Primitive.$fEnumPrimType4
                               3 -> Futhark.Representation.Primitive.$fEnumPrimType3
                               4 -> Futhark.Representation.Primitive.$fEnumPrimType2
                               5 -> Futhark.Representation.Primitive.$fEnumPrimType1
                               6 -> Futhark.Representation.Primitive.Bool })
                            (case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.==# x1 ww1) of wild1 {
                               GHC.Types.False -> go7 (GHC.Prim.+# x1 1)
                               GHC.Types.True
                               -> GHC.Types.[] @ Futhark.Representation.Primitive.PrimType })
                      } in
                      go7 ww
                   GHC.Types.True
                   -> GHC.Types.[]
                        @ Futhark.Representation.Primitive.PrimType } } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_$cfromEnum ::
    Futhark.Representation.Primitive.PrimType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Futhark.Representation.Primitive.PrimType ->
                 case Futhark.Representation.Primitive.$w$cfromEnum
                        w of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_$ctoEnum ::
    GHC.Types.Int -> Futhark.Representation.Primitive.PrimType
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Types.Int ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Futhark.Representation.Primitive.$w$ctoEnum2 ww1 }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_$s$dmpred ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: Futhark.Representation.Primitive.PrimType ->
                 Futhark.Representation.Primitive.$fEnumPrimType_$ctoEnum
                   (GHC.Num.$fNumInt_$c-
                      (Futhark.Representation.Primitive.$fEnumPrimType_$cfromEnum eta)
                      (GHC.Types.I# 1))) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_$s$dmsucc ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: Futhark.Representation.Primitive.PrimType ->
                 Futhark.Representation.Primitive.$fEnumPrimType_$ctoEnum
                   (GHC.Num.$fNumInt_$c+
                      (Futhark.Representation.Primitive.$fEnumPrimType_$cfromEnum eta)
                      (GHC.Types.I# 1))) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_c ::
    GHC.Types.Int
    -> [Futhark.Representation.Primitive.PrimType]
    -> [Futhark.Representation.Primitive.PrimType]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(1*U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: GHC.Types.Int
                   ys :: [Futhark.Representation.Primitive.PrimType] ->
                 GHC.Types.:
                   @ Futhark.Representation.Primitive.PrimType
                   (Futhark.Representation.Primitive.$fEnumPrimType_$ctoEnum x)
                   ys) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEnumPrimType_go ::
    GHC.Prim.Int# -> [Futhark.Representation.Primitive.PrimType]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
a9973dd6087e3616facc22f23639aca3
  $fEqBinOp :: GHC.Classes.Eq Futhark.Representation.Primitive.BinOp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.BinOp
                  Futhark.Representation.Primitive.$fEqBinOp_$c==
                  Futhark.Representation.Primitive.$fEqBinOp_$c/= -}
a9973dd6087e3616facc22f23639aca3
  $fEqBinOp_$c/= ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.BinOp
                   b :: Futhark.Representation.Primitive.BinOp ->
                 case Futhark.Representation.Primitive.$fEqBinOp_$c== a2 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
a9973dd6087e3616facc22f23639aca3
  $fEqBinOp_$c== ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
08b5478bc0825237337ae1c63d391750
  $fEqCmpOp :: GHC.Classes.Eq Futhark.Representation.Primitive.CmpOp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.CmpOp
                  Futhark.Representation.Primitive.$fEqCmpOp_$c==
                  Futhark.Representation.Primitive.$fEqCmpOp_$c/= -}
08b5478bc0825237337ae1c63d391750
  $fEqCmpOp_$c/= ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.CmpOp
                   b :: Futhark.Representation.Primitive.CmpOp ->
                 case Futhark.Representation.Primitive.$fEqCmpOp_$c== a2 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
08b5478bc0825237337ae1c63d391750
  $fEqCmpOp_$c== ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.CmpOp
                   ds1 :: Futhark.Representation.Primitive.CmpOp ->
                 case ds of wild {
                   Futhark.Representation.Primitive.CmpEq a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.CmpEq b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==3 a2 b1 }
                   Futhark.Representation.Primitive.CmpUlt a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.CmpUlt b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==2 a2 b1 }
                   Futhark.Representation.Primitive.CmpUle a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.CmpUle b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==2 a2 b1 }
                   Futhark.Representation.Primitive.CmpSlt a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.CmpSlt b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==2 a2 b1 }
                   Futhark.Representation.Primitive.CmpSle a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.CmpSle b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==2 a2 b1 }
                   Futhark.Representation.Primitive.FCmpLt a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.FCmpLt b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==1 a2 b1 }
                   Futhark.Representation.Primitive.FCmpLe a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.FCmpLe b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==1 a2 b1 } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEqCmpOp_$c==1 ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Futhark.Representation.Primitive.FloatType
                   ds1 :: Futhark.Representation.Primitive.FloatType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.True
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Float64
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.False
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.True } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fEqCmpOp_$c==2 ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.IntType
                   ds1 :: Futhark.Representation.Primitive.IntType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int8 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int16
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int16 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int32
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int64
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.True } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEqCmpOp_$c==3 ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.PrimType
                   ds1 :: Futhark.Representation.Primitive.PrimType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.IntType a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.IntType b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==2 a2 b1 }
                   Futhark.Representation.Primitive.FloatType a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.FloatType b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==1 a2 b1 }
                   Futhark.Representation.Primitive.Bool
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Bool -> GHC.Types.True }
                   Futhark.Representation.Primitive.Cert
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Cert -> GHC.Types.True } }) -}
a041089954fcf02181365ea68516096f
  $fEqConvOp ::
    GHC.Classes.Eq Futhark.Representation.Primitive.ConvOp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.ConvOp
                  Futhark.Representation.Primitive.$fEqConvOp_$c==
                  Futhark.Representation.Primitive.$fEqConvOp_$c/= -}
a041089954fcf02181365ea68516096f
  $fEqConvOp_$c/= ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.ConvOp
                   b :: Futhark.Representation.Primitive.ConvOp ->
                 case Futhark.Representation.Primitive.$fEqConvOp_$c==
                        a2
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
a041089954fcf02181365ea68516096f
  $fEqConvOp_$c== ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEqFloatType ::
    GHC.Classes.Eq Futhark.Representation.Primitive.FloatType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatType
                  Futhark.Representation.Primitive.$fEqCmpOp_$c==1
                  Futhark.Representation.Primitive.$fEqFloatType_$c/= -}
306ea34947128e48fabb2e3ff22f5fb7
  $fEqFloatType_$c/= ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatType
                   b :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.False
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Float64
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.True
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.False } }) -}
70b046f18760096ae622b1ade242ee60
  $fEqFloatValue ::
    GHC.Classes.Eq Futhark.Representation.Primitive.FloatValue
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatValue
                  Futhark.Representation.Primitive.$fEqFloatValue_$c==
                  Futhark.Representation.Primitive.$fEqFloatValue_$c/= -}
70b046f18760096ae622b1ade242ee60
  $fEqFloatValue_$c/= ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.FloatValue
                   b :: Futhark.Representation.Primitive.FloatValue ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqFloat# dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False }
                        Futhark.Representation.Primitive.Float64Value ipv
                        -> GHC.Types.True }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value ipv -> GHC.Types.True
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
70b046f18760096ae622b1ade242ee60
  $fEqFloatValue_$c== ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Futhark.Representation.Primitive.FloatValue
                   ds1 :: Futhark.Representation.Primitive.FloatValue ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.eqFloat# dt dt1)
                        Futhark.Representation.Primitive.Float64Value ipv
                        -> GHC.Types.False }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Float32Value ipv
                        -> GHC.Types.False
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## dt dt1) } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fEqIntType ::
    GHC.Classes.Eq Futhark.Representation.Primitive.IntType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntType
                  Futhark.Representation.Primitive.$fEqCmpOp_$c==2
                  Futhark.Representation.Primitive.$fEqIntType_$c/= -}
41164198bc42f58dac94bb14a13a0e54
  $fEqIntType_$c/= ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntType
                   b :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int8 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int16
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int16 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int32
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int64
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.False } }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fEqIntValue ::
    GHC.Classes.Eq Futhark.Representation.Primitive.IntValue
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntValue
                  Futhark.Representation.Primitive.$fEqIntValue_$c==
                  Futhark.Representation.Primitive.$fEqIntValue_$c/= -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fEqIntValue_$c/= ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntValue
                   b :: Futhark.Representation.Primitive.IntValue ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fEqIntValue_$c== ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.IntValue
                   ds1 :: Futhark.Representation.Primitive.IntValue ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# dt dt1) } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEqPrimType ::
    GHC.Classes.Eq Futhark.Representation.Primitive.PrimType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimType
                  Futhark.Representation.Primitive.$fEqCmpOp_$c==3
                  Futhark.Representation.Primitive.$fEqPrimType_$c/= -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fEqPrimType_$c/= ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.PrimType
                   b :: Futhark.Representation.Primitive.PrimType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.IntType a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.IntType b1
                        -> case a3 of wild2 {
                             Futhark.Representation.Primitive.Int8
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int8 -> GHC.Types.False }
                             Futhark.Representation.Primitive.Int16
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int16 -> GHC.Types.False }
                             Futhark.Representation.Primitive.Int32
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int32 -> GHC.Types.False }
                             Futhark.Representation.Primitive.Int64
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.False } } }
                   Futhark.Representation.Primitive.FloatType a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.FloatType b1
                        -> case a3 of wild2 {
                             Futhark.Representation.Primitive.Float32
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Float64 -> GHC.Types.True }
                             Futhark.Representation.Primitive.Float64
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Float64 -> GHC.Types.False } } }
                   Futhark.Representation.Primitive.Bool
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Bool -> GHC.Types.False }
                   Futhark.Representation.Primitive.Cert
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Cert -> GHC.Types.False } }) -}
8e822e36076955e40795d9052bbfb8c1
  $fEqPrimValue ::
    GHC.Classes.Eq Futhark.Representation.Primitive.PrimValue
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimValue
                  Futhark.Representation.Primitive.$fEqPrimValue_$c==
                  Futhark.Representation.Primitive.$fEqPrimValue_$c/= -}
8e822e36076955e40795d9052bbfb8c1
  $fEqPrimValue_$c/= ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.PrimValue
                   b :: Futhark.Representation.Primitive.PrimValue ->
                 case Futhark.Representation.Primitive.doCmpEq a2 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8e822e36076955e40795d9052bbfb8c1
  $fEqPrimValue_$c== ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Futhark.Representation.Primitive.doCmpEq -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fEqUnOp :: GHC.Classes.Eq Futhark.Representation.Primitive.UnOp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.UnOp
                  Futhark.Representation.Primitive.$fEqUnOp_$c==
                  Futhark.Representation.Primitive.$fEqUnOp_$c/= -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fEqUnOp_$c/= ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.UnOp
                   b :: Futhark.Representation.Primitive.UnOp ->
                 case Futhark.Representation.Primitive.$fEqUnOp_$c== a2 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fEqUnOp_$c== ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.UnOp
                   ds1 :: Futhark.Representation.Primitive.UnOp ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Not
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Not -> GHC.Types.True }
                   Futhark.Representation.Primitive.Complement a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Complement b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==2 a2 b1 }
                   Futhark.Representation.Primitive.Abs a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Abs b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==2 a2 b1 }
                   Futhark.Representation.Primitive.FAbs a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.FAbs b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==1 a2 b1 }
                   Futhark.Representation.Primitive.SSignum a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.SSignum b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==2 a2 b1 }
                   Futhark.Representation.Primitive.USignum a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.USignum b1
                        -> Futhark.Representation.Primitive.$fEqCmpOp_$c==2 a2 b1 } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fHashableFloatType ::
    Data.Hashable.Class.Hashable
      Futhark.Representation.Primitive.FloatType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatType
                  Futhark.Representation.Primitive.$fHashableFloatType_$chashWithSalt
                  Futhark.Representation.Primitive.$fHashableFloatType_$chash -}
306ea34947128e48fabb2e3ff22f5fb7
  $fHashableFloatType_$chash ::
    Futhark.Representation.Primitive.FloatType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Futhark.Representation.Primitive.$fHashableFloatType_$chashWithSalt
                   Data.Hashable.Class.defaultSalt) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fHashableFloatType_$chashWithSalt ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.FloatType -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ salt :: GHC.Types.Int
                   eta :: Futhark.Representation.Primitive.FloatType ->
                 case salt of wild { GHC.Types.I# x1 ->
                 case eta of wild1 {
                   Futhark.Representation.Primitive.Float32
                   -> GHC.Types.I# (GHC.Prim.*# x1 16777619)
                   Futhark.Representation.Primitive.Float64
                   -> GHC.Types.I#
                        (GHC.Prim.xorI# (GHC.Prim.*# x1 16777619) 1) } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fHashableIntType ::
    Data.Hashable.Class.Hashable
      Futhark.Representation.Primitive.IntType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntType
                  Futhark.Representation.Primitive.$fHashableIntType_$chashWithSalt
                  Futhark.Representation.Primitive.$fHashableIntType_$chash -}
41164198bc42f58dac94bb14a13a0e54
  $fHashableIntType_$chash ::
    Futhark.Representation.Primitive.IntType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Futhark.Representation.Primitive.$fHashableIntType_$chashWithSalt
                   Data.Hashable.Class.defaultSalt) -}
41164198bc42f58dac94bb14a13a0e54
  $fHashableIntType_$chashWithSalt ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.IntType -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: Futhark.Representation.Primitive.IntType ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> GHC.Types.I# (GHC.Prim.*# ww1 16777619)
                   Futhark.Representation.Primitive.Int16
                   -> GHC.Types.I# (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619) 1)
                   Futhark.Representation.Primitive.Int32
                   -> GHC.Types.I# (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619) 2)
                   Futhark.Representation.Primitive.Int64
                   -> GHC.Types.I#
                        (GHC.Prim.xorI# (GHC.Prim.*# ww1 16777619) 3) } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fHashablePrimType ::
    Data.Hashable.Class.Hashable
      Futhark.Representation.Primitive.PrimType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimType
                  Futhark.Representation.Primitive.$fHashablePrimType_$chashWithSalt
                  Futhark.Representation.Primitive.$fHashablePrimType_$chash -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fHashablePrimType_$chash ::
    Futhark.Representation.Primitive.PrimType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (Futhark.Representation.Primitive.$fHashablePrimType_$chashWithSalt
                   Data.Hashable.Class.defaultSalt) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fHashablePrimType_$chashWithSalt ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.PrimType -> GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U>m,
     Unfolding: InlineRule (2, True, False)
                (\ salt :: GHC.Types.Int
                   eta :: Futhark.Representation.Primitive.PrimType ->
                 case salt of wild { GHC.Types.I# x1 ->
                 case Futhark.Representation.Primitive.$fEnumPrimType_$cfromEnum
                        eta of wild1 { GHC.Types.I# y# ->
                 GHC.Types.I# (GHC.Prim.xorI# (GHC.Prim.*# x1 16777619) y#) } }) -}
a9973dd6087e3616facc22f23639aca3
  $fOrdBinOp ::
    GHC.Classes.Ord Futhark.Representation.Primitive.BinOp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.BinOp
                  Futhark.Representation.Primitive.$fEqBinOp
                  Futhark.Representation.Primitive.$fOrdBinOp_$ccompare
                  Futhark.Representation.Primitive.$fOrdBinOp_$c<
                  Futhark.Representation.Primitive.$fOrdBinOp_$c<=
                  Futhark.Representation.Primitive.$fOrdBinOp_$c>
                  Futhark.Representation.Primitive.$fOrdBinOp_$c>=
                  Futhark.Representation.Primitive.$fOrdBinOp_$cmax
                  Futhark.Representation.Primitive.$fOrdBinOp_$cmin -}
a9973dd6087e3616facc22f23639aca3
  $fOrdBinOp_$c< ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.BinOp
                   y :: Futhark.Representation.Primitive.BinOp ->
                 case Futhark.Representation.Primitive.$fOrdBinOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
a9973dd6087e3616facc22f23639aca3
  $fOrdBinOp_$c<= ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.BinOp
                   y :: Futhark.Representation.Primitive.BinOp ->
                 case Futhark.Representation.Primitive.$fOrdBinOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
a9973dd6087e3616facc22f23639aca3
  $fOrdBinOp_$c> ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.BinOp
                   y :: Futhark.Representation.Primitive.BinOp ->
                 case Futhark.Representation.Primitive.$fOrdBinOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
a9973dd6087e3616facc22f23639aca3
  $fOrdBinOp_$c>= ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.BinOp
                   y :: Futhark.Representation.Primitive.BinOp ->
                 case Futhark.Representation.Primitive.$fOrdBinOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
a9973dd6087e3616facc22f23639aca3
  $fOrdBinOp_$ccompare ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
a9973dd6087e3616facc22f23639aca3
  $fOrdBinOp_$cmax ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.BinOp
                   y :: Futhark.Representation.Primitive.BinOp ->
                 case Futhark.Representation.Primitive.$fOrdBinOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
a9973dd6087e3616facc22f23639aca3
  $fOrdBinOp_$cmin ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.BinOp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.BinOp
                   y :: Futhark.Representation.Primitive.BinOp ->
                 case Futhark.Representation.Primitive.$fOrdBinOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
08b5478bc0825237337ae1c63d391750
  $fOrdCmpOp ::
    GHC.Classes.Ord Futhark.Representation.Primitive.CmpOp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.CmpOp
                  Futhark.Representation.Primitive.$fEqCmpOp
                  Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare
                  Futhark.Representation.Primitive.$fOrdCmpOp_$c<
                  Futhark.Representation.Primitive.$fOrdCmpOp_$c<=
                  Futhark.Representation.Primitive.$fOrdCmpOp_$c>
                  Futhark.Representation.Primitive.$fOrdCmpOp_$c>=
                  Futhark.Representation.Primitive.$fOrdCmpOp_$cmax
                  Futhark.Representation.Primitive.$fOrdCmpOp_$cmin -}
08b5478bc0825237337ae1c63d391750
  $fOrdCmpOp_$c< ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.CmpOp
                   y :: Futhark.Representation.Primitive.CmpOp ->
                 case Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
08b5478bc0825237337ae1c63d391750
  $fOrdCmpOp_$c<= ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.CmpOp
                   y :: Futhark.Representation.Primitive.CmpOp ->
                 case Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
08b5478bc0825237337ae1c63d391750
  $fOrdCmpOp_$c> ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.CmpOp
                   y :: Futhark.Representation.Primitive.CmpOp ->
                 case Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
08b5478bc0825237337ae1c63d391750
  $fOrdCmpOp_$c>= ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.CmpOp
                   y :: Futhark.Representation.Primitive.CmpOp ->
                 case Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
08b5478bc0825237337ae1c63d391750
  $fOrdCmpOp_$ccompare ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.CmpOp
                   b :: Futhark.Representation.Primitive.CmpOp ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.CmpEq a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.CmpEq b1
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare3 a3 b1 }
                   Futhark.Representation.Primitive.CmpUlt a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.CmpEq ds -> GHC.Types.GT
                        Futhark.Representation.Primitive.CmpUlt b1
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2 a3 b1 }
                   Futhark.Representation.Primitive.CmpUle a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.CmpUle ds
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2 a3 ds
                        Futhark.Representation.Primitive.CmpSlt ds -> GHC.Types.LT
                        Futhark.Representation.Primitive.CmpSle ds -> GHC.Types.LT
                        Futhark.Representation.Primitive.FCmpLt ds -> GHC.Types.LT
                        Futhark.Representation.Primitive.FCmpLe ds -> GHC.Types.LT }
                   Futhark.Representation.Primitive.CmpSlt a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.CmpSlt ds
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2 a3 ds
                        Futhark.Representation.Primitive.CmpSle ds -> GHC.Types.LT
                        Futhark.Representation.Primitive.FCmpLt ds -> GHC.Types.LT
                        Futhark.Representation.Primitive.FCmpLe ds -> GHC.Types.LT }
                   Futhark.Representation.Primitive.CmpSle a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.CmpSle ds
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2 a3 ds
                        Futhark.Representation.Primitive.FCmpLt ds -> GHC.Types.LT
                        Futhark.Representation.Primitive.FCmpLe ds -> GHC.Types.LT }
                   Futhark.Representation.Primitive.FCmpLt a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.FCmpLt b1
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare1 a3 b1
                        Futhark.Representation.Primitive.FCmpLe ds -> GHC.Types.LT }
                   Futhark.Representation.Primitive.FCmpLe a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.FCmpLe b1
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare1
                             a3
                             b1 } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fOrdCmpOp_$ccompare1 ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatType
                   b :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.EQ
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.LT }
                   Futhark.Representation.Primitive.Float64
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.GT
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.EQ } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fOrdCmpOp_$ccompare2 ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntType
                   b :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Int8 -> GHC.Types.EQ
                        Futhark.Representation.Primitive.Int16 -> GHC.Types.LT
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.LT
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.LT }
                   Futhark.Representation.Primitive.Int16
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Int8 -> GHC.Types.GT
                        Futhark.Representation.Primitive.Int16 -> GHC.Types.EQ
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.LT
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.LT }
                   Futhark.Representation.Primitive.Int32
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.EQ
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.LT }
                   Futhark.Representation.Primitive.Int64
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.EQ } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fOrdCmpOp_$ccompare3 ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.PrimType
                   b :: Futhark.Representation.Primitive.PrimType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.IntType a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.IntType b1
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2 a3 b1 }
                   Futhark.Representation.Primitive.FloatType a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.IntType ds -> GHC.Types.GT
                        Futhark.Representation.Primitive.FloatType b1
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare1 a3 b1 }
                   Futhark.Representation.Primitive.Bool
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.Bool -> GHC.Types.EQ
                        Futhark.Representation.Primitive.Cert -> GHC.Types.LT }
                   Futhark.Representation.Primitive.Cert
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.Cert -> GHC.Types.EQ } }) -}
08b5478bc0825237337ae1c63d391750
  $fOrdCmpOp_$cmax ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.CmpOp
                   y :: Futhark.Representation.Primitive.CmpOp ->
                 case Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
08b5478bc0825237337ae1c63d391750
  $fOrdCmpOp_$cmin ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.CmpOp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.CmpOp
                   y :: Futhark.Representation.Primitive.CmpOp ->
                 case Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
a041089954fcf02181365ea68516096f
  $fOrdConvOp ::
    GHC.Classes.Ord Futhark.Representation.Primitive.ConvOp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.ConvOp
                  Futhark.Representation.Primitive.$fEqConvOp
                  Futhark.Representation.Primitive.$fOrdConvOp_$ccompare
                  Futhark.Representation.Primitive.$fOrdConvOp_$c<
                  Futhark.Representation.Primitive.$fOrdConvOp_$c<=
                  Futhark.Representation.Primitive.$fOrdConvOp_$c>
                  Futhark.Representation.Primitive.$fOrdConvOp_$c>=
                  Futhark.Representation.Primitive.$fOrdConvOp_$cmax
                  Futhark.Representation.Primitive.$fOrdConvOp_$cmin -}
a041089954fcf02181365ea68516096f
  $fOrdConvOp_$c< ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.ConvOp
                   y :: Futhark.Representation.Primitive.ConvOp ->
                 case Futhark.Representation.Primitive.$fOrdConvOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
a041089954fcf02181365ea68516096f
  $fOrdConvOp_$c<= ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.ConvOp
                   y :: Futhark.Representation.Primitive.ConvOp ->
                 case Futhark.Representation.Primitive.$fOrdConvOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
a041089954fcf02181365ea68516096f
  $fOrdConvOp_$c> ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.ConvOp
                   y :: Futhark.Representation.Primitive.ConvOp ->
                 case Futhark.Representation.Primitive.$fOrdConvOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
a041089954fcf02181365ea68516096f
  $fOrdConvOp_$c>= ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.ConvOp
                   y :: Futhark.Representation.Primitive.ConvOp ->
                 case Futhark.Representation.Primitive.$fOrdConvOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
a041089954fcf02181365ea68516096f
  $fOrdConvOp_$ccompare ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
a041089954fcf02181365ea68516096f
  $fOrdConvOp_$cmax ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.ConvOp
                   y :: Futhark.Representation.Primitive.ConvOp ->
                 case Futhark.Representation.Primitive.$fOrdConvOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
a041089954fcf02181365ea68516096f
  $fOrdConvOp_$cmin ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.ConvOp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.ConvOp
                   y :: Futhark.Representation.Primitive.ConvOp ->
                 case Futhark.Representation.Primitive.$fOrdConvOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fOrdFloatType ::
    GHC.Classes.Ord Futhark.Representation.Primitive.FloatType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatType
                  Futhark.Representation.Primitive.$fEqFloatType
                  Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare1
                  Futhark.Representation.Primitive.$fOrdFloatType_$c<
                  Futhark.Representation.Primitive.$fOrdFloatType_$c<=
                  Futhark.Representation.Primitive.$fOrdFloatType_$c>
                  Futhark.Representation.Primitive.$fOrdFloatType_$c>=
                  Futhark.Representation.Primitive.$fOrdFloatType_$cmax
                  Futhark.Representation.Primitive.$fOrdFloatType_$cmin -}
306ea34947128e48fabb2e3ff22f5fb7
  $fOrdFloatType_$c< ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatType
                   b :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.False
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Float64
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fOrdFloatType_$c<= ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatType
                   b :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Futhark.Representation.Primitive.Float64
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.False
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.True } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fOrdFloatType_$c> ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatType
                   b :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Futhark.Representation.Primitive.Float64
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.True
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.False } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fOrdFloatType_$c>= ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatType
                   b :: Futhark.Representation.Primitive.FloatType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32 -> GHC.Types.True
                        Futhark.Representation.Primitive.Float64 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Float64
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fOrdFloatType_$cmax ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.FloatType
                   y :: Futhark.Representation.Primitive.FloatType ->
                 case x of wild {
                   Futhark.Representation.Primitive.Float32 -> y
                   Futhark.Representation.Primitive.Float64
                   -> case y of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Float64 } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fOrdFloatType_$cmin ::
    Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.FloatType
                   y :: Futhark.Representation.Primitive.FloatType ->
                 case x of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case y of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Float32 }
                   Futhark.Representation.Primitive.Float64 -> y }) -}
70b046f18760096ae622b1ade242ee60
  $fOrdFloatValue ::
    GHC.Classes.Ord Futhark.Representation.Primitive.FloatValue
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatValue
                  Futhark.Representation.Primitive.$fEqFloatValue
                  Futhark.Representation.Primitive.$fOrdFloatValue_$ccompare
                  Futhark.Representation.Primitive.$fOrdFloatValue_$c<
                  Futhark.Representation.Primitive.$fOrdFloatValue_$c<=
                  Futhark.Representation.Primitive.$fOrdFloatValue_$c>
                  Futhark.Representation.Primitive.$fOrdFloatValue_$c>=
                  Futhark.Representation.Primitive.$fOrdFloatValue_$cmax
                  Futhark.Representation.Primitive.$fOrdFloatValue_$cmin -}
70b046f18760096ae622b1ade242ee60
  $fOrdFloatValue_$c< ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Futhark.Representation.Primitive.doFCmpLt -}
70b046f18760096ae622b1ade242ee60
  $fOrdFloatValue_$c<= ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Futhark.Representation.Primitive.doFCmpLe -}
70b046f18760096ae622b1ade242ee60
  $fOrdFloatValue_$c> ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatValue
                   b :: Futhark.Representation.Primitive.FloatValue ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.gtFloat# dt dt1)
                        Futhark.Representation.Primitive.Float64Value ipv
                        -> GHC.Types.False }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value ipv -> GHC.Types.True
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>## dt dt1) } }) -}
70b046f18760096ae622b1ade242ee60
  $fOrdFloatValue_$c>= ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatValue
                   b :: Futhark.Representation.Primitive.FloatValue ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.geFloat# dt dt1)
                        Futhark.Representation.Primitive.Float64Value ipv
                        -> GHC.Types.False }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value ipv -> GHC.Types.True
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=## dt dt1) } }) -}
70b046f18760096ae622b1ade242ee60
  $fOrdFloatValue_$ccompare ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.FloatValue
                   b :: Futhark.Representation.Primitive.FloatValue ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.ltFloat# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.eqFloat# dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                             GHC.Types.True -> GHC.Types.LT }
                        Futhark.Representation.Primitive.Float64Value ipv -> GHC.Types.LT }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value ipv -> GHC.Types.GT
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<## dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                             GHC.Types.True -> GHC.Types.LT } } }) -}
70b046f18760096ae622b1ade242ee60
  $fOrdFloatValue_$cmax ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.FloatValue
                   y :: Futhark.Representation.Primitive.FloatValue ->
                 case x of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case y of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.leFloat# dt dt1) of wild2 {
                             GHC.Types.False -> wild GHC.Types.True -> wild1 }
                        Futhark.Representation.Primitive.Float64Value ipv -> wild1 }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case y of wild1 {
                        Futhark.Representation.Primitive.Float32Value ipv -> wild
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## dt dt1) of wild2 {
                             GHC.Types.False -> wild GHC.Types.True -> wild1 } } }) -}
70b046f18760096ae622b1ade242ee60
  $fOrdFloatValue_$cmin ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.FloatValue
                   y :: Futhark.Representation.Primitive.FloatValue ->
                 case x of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case y of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.leFloat# dt dt1) of wild2 {
                             GHC.Types.False -> wild1 GHC.Types.True -> wild }
                        Futhark.Representation.Primitive.Float64Value ipv -> wild }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case y of wild1 {
                        Futhark.Representation.Primitive.Float32Value ipv -> wild1
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## dt dt1) of wild2 {
                             GHC.Types.False -> wild1 GHC.Types.True -> wild } } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fOrdIntType ::
    GHC.Classes.Ord Futhark.Representation.Primitive.IntType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntType
                  Futhark.Representation.Primitive.$fEqIntType
                  Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2
                  Futhark.Representation.Primitive.$fOrdIntType_$c<
                  Futhark.Representation.Primitive.$fOrdIntType_$c<=
                  Futhark.Representation.Primitive.$fOrdIntType_$c>
                  Futhark.Representation.Primitive.$fOrdIntType_$c>=
                  Futhark.Representation.Primitive.$fOrdIntType_$cmax
                  Futhark.Representation.Primitive.$fOrdIntType_$cmin -}
41164198bc42f58dac94bb14a13a0e54
  $fOrdIntType_$c< ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntType
                   b :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Int8 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int16 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int16
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int32
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int64
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fOrdIntType_$c<= ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntType
                   b :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case b of wild1 { DEFAULT -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int16
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Int8 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int16 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int32
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int64
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.True } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fOrdIntType_$c> ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntType
                   b :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case b of wild1 { DEFAULT -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int16
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Int8 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int16 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int32
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int64
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.False } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fOrdIntType_$c>= ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntType
                   b :: Futhark.Representation.Primitive.IntType ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Int8 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int16 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int16
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int32 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int32
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int64
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fOrdIntType_$cmax ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.IntType
                   y :: Futhark.Representation.Primitive.IntType ->
                 case x of wild {
                   Futhark.Representation.Primitive.Int8 -> y
                   Futhark.Representation.Primitive.Int16
                   -> case y of wild1 {
                        DEFAULT -> Futhark.Representation.Primitive.Int16
                        Futhark.Representation.Primitive.Int32
                        -> Futhark.Representation.Primitive.Int32
                        Futhark.Representation.Primitive.Int64
                        -> Futhark.Representation.Primitive.Int64 }
                   Futhark.Representation.Primitive.Int32
                   -> case y of wild1 {
                        DEFAULT -> Futhark.Representation.Primitive.Int32
                        Futhark.Representation.Primitive.Int64
                        -> Futhark.Representation.Primitive.Int64 }
                   Futhark.Representation.Primitive.Int64
                   -> case y of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int64 } }) -}
41164198bc42f58dac94bb14a13a0e54
  $fOrdIntType_$cmin ::
    Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.IntType
                   y :: Futhark.Representation.Primitive.IntType ->
                 case x of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case y of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int8 }
                   Futhark.Representation.Primitive.Int16
                   -> case y of wild1 {
                        Futhark.Representation.Primitive.Int8
                        -> Futhark.Representation.Primitive.Int8
                        Futhark.Representation.Primitive.Int16
                        -> Futhark.Representation.Primitive.Int16
                        Futhark.Representation.Primitive.Int32
                        -> Futhark.Representation.Primitive.Int16
                        Futhark.Representation.Primitive.Int64
                        -> Futhark.Representation.Primitive.Int16 }
                   Futhark.Representation.Primitive.Int32
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Futhark.Representation.Primitive.Int32
                        -> Futhark.Representation.Primitive.Int32
                        Futhark.Representation.Primitive.Int64
                        -> Futhark.Representation.Primitive.Int32 }
                   Futhark.Representation.Primitive.Int64 -> y }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fOrdIntValue ::
    GHC.Classes.Ord Futhark.Representation.Primitive.IntValue
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntValue
                  Futhark.Representation.Primitive.$fEqIntValue
                  Futhark.Representation.Primitive.$fOrdIntValue_$ccompare
                  Futhark.Representation.Primitive.$fOrdIntValue_$c<
                  Futhark.Representation.Primitive.$fOrdIntValue_$c<=
                  Futhark.Representation.Primitive.$fOrdIntValue_$c>
                  Futhark.Representation.Primitive.$fOrdIntValue_$c>=
                  Futhark.Representation.Primitive.$fOrdIntValue_$cmax
                  Futhark.Representation.Primitive.$fOrdIntValue_$cmin -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fOrdIntValue_$c< ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Futhark.Representation.Primitive.doCmpSlt -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fOrdIntValue_$c<= ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Futhark.Representation.Primitive.doCmpSle -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fOrdIntValue_$c> ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.IntValue
                   y :: Futhark.Representation.Primitive.IntValue ->
                 case x of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int8Value dt1 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False }
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False }
                             GHC.Types.True -> GHC.Types.False } } }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fOrdIntValue_$c>= ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.IntValue
                   y :: Futhark.Representation.Primitive.IntValue ->
                 case x of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int8Value dt1 -> GHC.Types.True
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False }
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Types.False }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fOrdIntValue_$ccompare ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.IntValue
                   b :: Futhark.Representation.Primitive.IntValue ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                             GHC.Types.True -> GHC.Types.LT } }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.Int8Value dt1 -> GHC.Types.GT
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                             GHC.Types.True -> GHC.Types.LT } }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                             GHC.Types.True -> GHC.Types.LT }
                        Futhark.Representation.Primitive.Int64Value dt1 -> GHC.Types.LT }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ }
                             GHC.Types.True -> GHC.Types.LT } } }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fOrdIntValue_$cmax ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.IntValue
                   y :: Futhark.Representation.Primitive.IntValue ->
                 case x of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> wild GHC.Types.True -> wild1 }
                             GHC.Types.True -> wild1 } }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Futhark.Representation.Primitive.Int8Value dt1 -> wild
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> wild GHC.Types.True -> wild1 }
                             GHC.Types.True -> wild1 } }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case y of wild1 {
                        DEFAULT -> wild
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> wild GHC.Types.True -> wild1 }
                             GHC.Types.True -> wild1 }
                        Futhark.Representation.Primitive.Int64Value dt1 -> wild1 }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case y of wild1 {
                        DEFAULT -> wild
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> wild GHC.Types.True -> wild1 }
                             GHC.Types.True -> wild1 } } }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fOrdIntValue_$cmin ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.IntValue
                   y :: Futhark.Representation.Primitive.IntValue ->
                 case x of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case y of wild1 {
                        DEFAULT -> wild
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> wild1 GHC.Types.True -> wild }
                             GHC.Types.True -> wild } }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case y of wild1 {
                        DEFAULT -> wild
                        Futhark.Representation.Primitive.Int8Value dt1 -> wild1
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> wild1 GHC.Types.True -> wild }
                             GHC.Types.True -> wild } }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> wild1 GHC.Types.True -> wild }
                             GHC.Types.True -> wild }
                        Futhark.Representation.Primitive.Int64Value dt1 -> wild }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) of wild3 {
                                  GHC.Types.False -> wild1 GHC.Types.True -> wild }
                             GHC.Types.True -> wild } } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fOrdPrimType ::
    GHC.Classes.Ord Futhark.Representation.Primitive.PrimType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimType
                  Futhark.Representation.Primitive.$fEqPrimType
                  Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare3
                  Futhark.Representation.Primitive.$fOrdPrimType_$c<
                  Futhark.Representation.Primitive.$fOrdPrimType_$c<=
                  Futhark.Representation.Primitive.$fOrdPrimType_$c>
                  Futhark.Representation.Primitive.$fOrdPrimType_$c>=
                  Futhark.Representation.Primitive.$fOrdPrimType_$cmax
                  Futhark.Representation.Primitive.$fOrdPrimType_$cmin -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fOrdPrimType_$c< ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.PrimType
                   y :: Futhark.Representation.Primitive.PrimType ->
                 case x of wild {
                   Futhark.Representation.Primitive.IntType a2
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.IntType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Int8
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Int8 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int16 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int32 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                             Futhark.Representation.Primitive.Int16
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int32 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                             Futhark.Representation.Primitive.Int32
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                             Futhark.Representation.Primitive.Int64
                             -> case b1 of wild3 { DEFAULT -> GHC.Types.False } } }
                   Futhark.Representation.Primitive.FloatType a2
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.IntType ds -> GHC.Types.False
                        Futhark.Representation.Primitive.FloatType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Float32
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Float64 -> GHC.Types.True }
                             Futhark.Representation.Primitive.Float64
                             -> case b1 of wild3 { DEFAULT -> GHC.Types.False } } }
                   Futhark.Representation.Primitive.Bool
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Cert -> GHC.Types.True }
                   Futhark.Representation.Primitive.Cert
                   -> case y of wild1 { DEFAULT -> GHC.Types.False } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fOrdPrimType_$c<= ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.PrimType
                   y :: Futhark.Representation.Primitive.PrimType ->
                 case x of wild {
                   Futhark.Representation.Primitive.IntType a2
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.IntType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Int8
                             -> case b1 of wild3 { DEFAULT -> GHC.Types.True }
                             Futhark.Representation.Primitive.Int16
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Int8 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int16 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int32 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                             Futhark.Representation.Primitive.Int32
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int32 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.True }
                             Futhark.Representation.Primitive.Int64
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.True } } }
                   Futhark.Representation.Primitive.FloatType a2
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.IntType ds -> GHC.Types.False
                        Futhark.Representation.Primitive.FloatType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Float32
                             -> case b1 of wild3 { DEFAULT -> GHC.Types.True }
                             Futhark.Representation.Primitive.Float64
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Float64 -> GHC.Types.True } } }
                   Futhark.Representation.Primitive.Bool
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Bool -> GHC.Types.True
                        Futhark.Representation.Primitive.Cert -> GHC.Types.True }
                   Futhark.Representation.Primitive.Cert
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Cert -> GHC.Types.True } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fOrdPrimType_$c> ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.PrimType
                   y :: Futhark.Representation.Primitive.PrimType ->
                 case x of wild {
                   Futhark.Representation.Primitive.IntType a2
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.IntType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Int8
                             -> case b1 of wild3 { DEFAULT -> GHC.Types.False }
                             Futhark.Representation.Primitive.Int16
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Int8 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int16 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int32 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                             Futhark.Representation.Primitive.Int32
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int32 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                             Futhark.Representation.Primitive.Int64
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.False } } }
                   Futhark.Representation.Primitive.FloatType a2
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.IntType ds -> GHC.Types.True
                        Futhark.Representation.Primitive.FloatType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Float32
                             -> case b1 of wild3 { DEFAULT -> GHC.Types.False }
                             Futhark.Representation.Primitive.Float64
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Float64 -> GHC.Types.False } } }
                   Futhark.Representation.Primitive.Bool
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Bool -> GHC.Types.False
                        Futhark.Representation.Primitive.Cert -> GHC.Types.False }
                   Futhark.Representation.Primitive.Cert
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Cert -> GHC.Types.False } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fOrdPrimType_$c>= ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.PrimType
                   y :: Futhark.Representation.Primitive.PrimType ->
                 case x of wild {
                   Futhark.Representation.Primitive.IntType a2
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.IntType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Int8
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Int8 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int16 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int32 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                             Futhark.Representation.Primitive.Int16
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int32 -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                             Futhark.Representation.Primitive.Int32
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.True
                                  Futhark.Representation.Primitive.Int64 -> GHC.Types.False }
                             Futhark.Representation.Primitive.Int64
                             -> case b1 of wild3 { DEFAULT -> GHC.Types.True } } }
                   Futhark.Representation.Primitive.FloatType a2
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.IntType ds -> GHC.Types.True
                        Futhark.Representation.Primitive.FloatType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Float32
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32 -> GHC.Types.True
                                  Futhark.Representation.Primitive.Float64 -> GHC.Types.False }
                             Futhark.Representation.Primitive.Float64
                             -> case b1 of wild3 { DEFAULT -> GHC.Types.True } } }
                   Futhark.Representation.Primitive.Bool
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Cert -> GHC.Types.False }
                   Futhark.Representation.Primitive.Cert
                   -> case y of wild1 { DEFAULT -> GHC.Types.True } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fOrdPrimType_$cmax ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.PrimType
                   y :: Futhark.Representation.Primitive.PrimType ->
                 case x of wild {
                   Futhark.Representation.Primitive.IntType a2
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Futhark.Representation.Primitive.IntType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Int8
                             -> case b1 of wild3 { DEFAULT -> wild1 }
                             Futhark.Representation.Primitive.Int16
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Int8 -> wild
                                  Futhark.Representation.Primitive.Int16 -> wild1
                                  Futhark.Representation.Primitive.Int32 -> wild1
                                  Futhark.Representation.Primitive.Int64 -> wild1 }
                             Futhark.Representation.Primitive.Int32
                             -> case b1 of wild3 {
                                  DEFAULT -> wild
                                  Futhark.Representation.Primitive.Int32 -> wild1
                                  Futhark.Representation.Primitive.Int64 -> wild1 }
                             Futhark.Representation.Primitive.Int64
                             -> case b1 of wild3 {
                                  DEFAULT -> wild
                                  Futhark.Representation.Primitive.Int64 -> wild1 } } }
                   Futhark.Representation.Primitive.FloatType a2
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Futhark.Representation.Primitive.IntType ds -> wild
                        Futhark.Representation.Primitive.FloatType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Float32
                             -> case b1 of wild3 { DEFAULT -> wild1 }
                             Futhark.Representation.Primitive.Float64
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32 -> wild
                                  Futhark.Representation.Primitive.Float64 -> wild1 } } }
                   Futhark.Representation.Primitive.Bool
                   -> case y of wild1 {
                        DEFAULT -> Futhark.Representation.Primitive.Bool
                        Futhark.Representation.Primitive.Cert
                        -> Futhark.Representation.Primitive.Cert }
                   Futhark.Representation.Primitive.Cert
                   -> case y of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Cert } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fOrdPrimType_$cmin ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.PrimType
                   y :: Futhark.Representation.Primitive.PrimType ->
                 case x of wild {
                   Futhark.Representation.Primitive.IntType a2
                   -> case y of wild1 {
                        DEFAULT -> wild
                        Futhark.Representation.Primitive.IntType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Int8
                             -> case b1 of wild3 { DEFAULT -> wild }
                             Futhark.Representation.Primitive.Int16
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Int8 -> wild1
                                  Futhark.Representation.Primitive.Int16 -> wild
                                  Futhark.Representation.Primitive.Int32 -> wild
                                  Futhark.Representation.Primitive.Int64 -> wild }
                             Futhark.Representation.Primitive.Int32
                             -> case b1 of wild3 {
                                  DEFAULT -> wild1
                                  Futhark.Representation.Primitive.Int32 -> wild
                                  Futhark.Representation.Primitive.Int64 -> wild }
                             Futhark.Representation.Primitive.Int64
                             -> case b1 of wild3 {
                                  DEFAULT -> wild1
                                  Futhark.Representation.Primitive.Int64 -> wild } } }
                   Futhark.Representation.Primitive.FloatType a2
                   -> case y of wild1 {
                        DEFAULT -> wild
                        Futhark.Representation.Primitive.IntType ds -> wild1
                        Futhark.Representation.Primitive.FloatType b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Float32
                             -> case b1 of wild3 { DEFAULT -> wild }
                             Futhark.Representation.Primitive.Float64
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32 -> wild1
                                  Futhark.Representation.Primitive.Float64 -> wild } } }
                   Futhark.Representation.Primitive.Bool
                   -> case y of wild1 {
                        DEFAULT -> wild1
                        Futhark.Representation.Primitive.Bool
                        -> Futhark.Representation.Primitive.Bool
                        Futhark.Representation.Primitive.Cert
                        -> Futhark.Representation.Primitive.Bool }
                   Futhark.Representation.Primitive.Cert -> y }) -}
8e822e36076955e40795d9052bbfb8c1
  $fOrdPrimValue ::
    GHC.Classes.Ord Futhark.Representation.Primitive.PrimValue
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimValue
                  Futhark.Representation.Primitive.$fEqPrimValue
                  Futhark.Representation.Primitive.$fOrdPrimValue_$ccompare
                  Futhark.Representation.Primitive.$fOrdPrimValue_$c<
                  Futhark.Representation.Primitive.$fOrdPrimValue_$c<=
                  Futhark.Representation.Primitive.$fOrdPrimValue_$c>
                  Futhark.Representation.Primitive.$fOrdPrimValue_$c>=
                  Futhark.Representation.Primitive.$fOrdPrimValue_$cmax
                  Futhark.Representation.Primitive.$fOrdPrimValue_$cmin -}
8e822e36076955e40795d9052bbfb8c1
  $fOrdPrimValue_$c< ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.PrimValue
                   y :: Futhark.Representation.Primitive.PrimValue ->
                 case Futhark.Representation.Primitive.$fOrdPrimValue_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
8e822e36076955e40795d9052bbfb8c1
  $fOrdPrimValue_$c<= ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.PrimValue
                   y :: Futhark.Representation.Primitive.PrimValue ->
                 case Futhark.Representation.Primitive.$fOrdPrimValue_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
8e822e36076955e40795d9052bbfb8c1
  $fOrdPrimValue_$c> ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.PrimValue
                   y :: Futhark.Representation.Primitive.PrimValue ->
                 case Futhark.Representation.Primitive.$fOrdPrimValue_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
8e822e36076955e40795d9052bbfb8c1
  $fOrdPrimValue_$c>= ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.PrimValue
                   y :: Futhark.Representation.Primitive.PrimValue ->
                 case Futhark.Representation.Primitive.$fOrdPrimValue_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
8e822e36076955e40795d9052bbfb8c1
  $fOrdPrimValue_$ccompare ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.PrimValue
                   b :: Futhark.Representation.Primitive.PrimValue ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.IntValue a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.IntValue b1
                        -> case a3 of wild2 {
                             Futhark.Representation.Primitive.Int8Value dt
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.LT
                                  Futhark.Representation.Primitive.Int8Value dt1
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<# dt dt1) of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==# dt dt1) of wild5 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True -> GHC.Types.EQ }
                                       GHC.Types.True -> GHC.Types.LT } }
                             Futhark.Representation.Primitive.Int16Value dt
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.LT
                                  Futhark.Representation.Primitive.Int8Value dt1 -> GHC.Types.GT
                                  Futhark.Representation.Primitive.Int16Value dt1
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<# dt dt1) of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==# dt dt1) of wild5 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True -> GHC.Types.EQ }
                                       GHC.Types.True -> GHC.Types.LT } }
                             Futhark.Representation.Primitive.Int32Value dt
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.GT
                                  Futhark.Representation.Primitive.Int32Value dt1
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<# dt dt1) of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==# dt dt1) of wild5 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True -> GHC.Types.EQ }
                                       GHC.Types.True -> GHC.Types.LT }
                                  Futhark.Representation.Primitive.Int64Value dt1 -> GHC.Types.LT }
                             Futhark.Representation.Primitive.Int64Value dt
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.GT
                                  Futhark.Representation.Primitive.Int64Value dt1
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<# dt dt1) of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==# dt dt1) of wild5 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True -> GHC.Types.EQ }
                                       GHC.Types.True -> GHC.Types.LT } } } }
                   Futhark.Representation.Primitive.FloatValue a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.IntValue ds -> GHC.Types.GT
                        Futhark.Representation.Primitive.FloatValue b1
                        -> case a3 of wild2 {
                             Futhark.Representation.Primitive.Float32Value dt
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32Value dt1
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.ltFloat# dt dt1) of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.eqFloat# dt dt1) of wild5 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True -> GHC.Types.EQ }
                                       GHC.Types.True -> GHC.Types.LT }
                                  Futhark.Representation.Primitive.Float64Value ipv
                                  -> GHC.Types.LT }
                             Futhark.Representation.Primitive.Float64Value dt
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32Value ipv -> GHC.Types.GT
                                  Futhark.Representation.Primitive.Float64Value dt1
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.<## dt dt1) of wild4 {
                                       GHC.Types.False
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.==## dt dt1) of wild5 {
                                            GHC.Types.False -> GHC.Types.GT
                                            GHC.Types.True -> GHC.Types.EQ }
                                       GHC.Types.True -> GHC.Types.LT } } } }
                   Futhark.Representation.Primitive.BoolValue a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.BoolValue b1
                        -> case a3 of wild2 {
                             GHC.Types.False
                             -> case b1 of wild3 {
                                  GHC.Types.False -> GHC.Types.EQ GHC.Types.True -> GHC.Types.LT }
                             GHC.Types.True
                             -> case b1 of wild3 {
                                  GHC.Types.False -> GHC.Types.GT GHC.Types.True -> GHC.Types.EQ } }
                        Futhark.Representation.Primitive.Checked -> GHC.Types.LT }
                   Futhark.Representation.Primitive.Checked
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.Checked -> GHC.Types.EQ } }) -}
8e822e36076955e40795d9052bbfb8c1
  $fOrdPrimValue_$cmax ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.PrimValue
                   y :: Futhark.Representation.Primitive.PrimValue ->
                 case Futhark.Representation.Primitive.$fOrdPrimValue_$ccompare
                        x
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
8e822e36076955e40795d9052bbfb8c1
  $fOrdPrimValue_$cmin ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.PrimValue
                   y :: Futhark.Representation.Primitive.PrimValue ->
                 case Futhark.Representation.Primitive.$fOrdPrimValue_$ccompare
                        x
                        y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fOrdUnOp :: GHC.Classes.Ord Futhark.Representation.Primitive.UnOp
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.UnOp
                  Futhark.Representation.Primitive.$fEqUnOp
                  Futhark.Representation.Primitive.$fOrdUnOp_$ccompare
                  Futhark.Representation.Primitive.$fOrdUnOp_$c<
                  Futhark.Representation.Primitive.$fOrdUnOp_$c<=
                  Futhark.Representation.Primitive.$fOrdUnOp_$c>
                  Futhark.Representation.Primitive.$fOrdUnOp_$c>=
                  Futhark.Representation.Primitive.$fOrdUnOp_$cmax
                  Futhark.Representation.Primitive.$fOrdUnOp_$cmin -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fOrdUnOp_$c< ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.UnOp
                   y :: Futhark.Representation.Primitive.UnOp ->
                 case Futhark.Representation.Primitive.$fOrdUnOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fOrdUnOp_$c<= ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.UnOp
                   y :: Futhark.Representation.Primitive.UnOp ->
                 case Futhark.Representation.Primitive.$fOrdUnOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fOrdUnOp_$c> ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.UnOp
                   y :: Futhark.Representation.Primitive.UnOp ->
                 case Futhark.Representation.Primitive.$fOrdUnOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fOrdUnOp_$c>= ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.UnOp
                   y :: Futhark.Representation.Primitive.UnOp ->
                 case Futhark.Representation.Primitive.$fOrdUnOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fOrdUnOp_$ccompare ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a2 :: Futhark.Representation.Primitive.UnOp
                   b :: Futhark.Representation.Primitive.UnOp ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Not
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.Not -> GHC.Types.EQ }
                   Futhark.Representation.Primitive.Complement a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        Futhark.Representation.Primitive.Not -> GHC.Types.GT
                        Futhark.Representation.Primitive.Complement b1
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2 a3 b1 }
                   Futhark.Representation.Primitive.Abs a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.Abs ds
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2 a3 ds
                        Futhark.Representation.Primitive.FAbs ds -> GHC.Types.LT
                        Futhark.Representation.Primitive.SSignum ds -> GHC.Types.LT
                        Futhark.Representation.Primitive.USignum ds -> GHC.Types.LT }
                   Futhark.Representation.Primitive.FAbs a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.FAbs ds
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare1 a3 ds
                        Futhark.Representation.Primitive.SSignum ds -> GHC.Types.LT
                        Futhark.Representation.Primitive.USignum ds -> GHC.Types.LT }
                   Futhark.Representation.Primitive.SSignum a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.SSignum b1
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2 a3 b1
                        Futhark.Representation.Primitive.USignum ds -> GHC.Types.LT }
                   Futhark.Representation.Primitive.USignum a3
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        Futhark.Representation.Primitive.USignum b1
                        -> Futhark.Representation.Primitive.$fOrdCmpOp_$ccompare2
                             a3
                             b1 } }) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fOrdUnOp_$cmax ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.UnOp
                   y :: Futhark.Representation.Primitive.UnOp ->
                 case Futhark.Representation.Primitive.$fOrdUnOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fOrdUnOp_$cmin ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.UnOp
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ x :: Futhark.Representation.Primitive.UnOp
                   y :: Futhark.Representation.Primitive.UnOp ->
                 case Futhark.Representation.Primitive.$fOrdUnOp_$ccompare
                        x
                        y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fPrettyFloatType ::
    Text.PrettyPrint.Mainland.Pretty
      Futhark.Representation.Primitive.FloatType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatType
                  Futhark.Representation.Primitive.$fPrettyFloatType_$cppr
                  Futhark.Representation.Primitive.$fPrettyFloatType_$cpprPrec
                  Futhark.Representation.Primitive.$fPrettyFloatType_$cpprList -}
01a168934ec63ffdf89a0d28e85d54b2
  $fPrettyFloatType1 :: Text.PrettyPrint.Mainland.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fPrettyFloatType2
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.Mainland.String
                   ww2
                   Futhark.Representation.Primitive.$fPrettyFloatType2 }) -}
51385734c783673b20640dd4d736cbdf
  $fPrettyFloatType2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "f64"#) -}
047af18b6f3b3bf1d276be574da292f1
  $fPrettyFloatType3 :: Text.PrettyPrint.Mainland.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fPrettyFloatType4
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.Mainland.String
                   ww2
                   Futhark.Representation.Primitive.$fPrettyFloatType4 }) -}
df098dcc882398590402d0c95f94df4d
  $fPrettyFloatType4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "f32"#) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fPrettyFloatType_$cppr ::
    Futhark.Representation.Primitive.FloatType
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Futhark.Representation.Primitive.FloatType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Float32
                   -> Futhark.Representation.Primitive.$fPrettyFloatType3
                   Futhark.Representation.Primitive.Float64
                   -> Futhark.Representation.Primitive.$fPrettyFloatType1 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fPrettyFloatType_$cpprList ::
    [Futhark.Representation.Primitive.FloatType]
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>m9, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Futhark.Representation.Primitive.FloatType] ->
                 case Futhark.Representation.Primitive.$w$cpprList
                        w of ww { (#,#) ww1 ww2 ->
                 Text.PrettyPrint.Mainland.Cat ww1 ww2 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fPrettyFloatType_$cpprPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.FloatType
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Futhark.Representation.Primitive.FloatType ->
                 Futhark.Representation.Primitive.$fPrettyFloatType_$cppr eta) -}
70b046f18760096ae622b1ade242ee60
  $fPrettyFloatValue ::
    Text.PrettyPrint.Mainland.Pretty
      Futhark.Representation.Primitive.FloatValue
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatValue
                  Futhark.Representation.Primitive.$fPrettyFloatValue_$cppr
                  Futhark.Representation.Primitive.$fPrettyFloatValue_$cpprPrec
                  Futhark.Representation.Primitive.$fPrettyFloatValue_$cpprList -}
70b046f18760096ae622b1ade242ee60
  $fPrettyFloatValue_$cppr ::
    Futhark.Representation.Primitive.FloatValue
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Futhark.Representation.Primitive.FloatValue ->
                 case Futhark.Representation.Primitive.$w$cppr
                        w of ww { (#,#) ww1 ww2 ->
                 Text.PrettyPrint.Mainland.String ww1 ww2 }) -}
70b046f18760096ae622b1ade242ee60
  $fPrettyFloatValue_$cpprList ::
    [Futhark.Representation.Primitive.FloatValue]
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>m9, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Futhark.Representation.Primitive.FloatValue] ->
                 case Futhark.Representation.Primitive.$w$cpprList1
                        w of ww { (#,#) ww1 ww2 ->
                 Text.PrettyPrint.Mainland.Cat ww1 ww2 }) -}
70b046f18760096ae622b1ade242ee60
  $fPrettyFloatValue_$cpprPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.FloatValue
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Futhark.Representation.Primitive.FloatValue ->
                 Futhark.Representation.Primitive.$fPrettyFloatValue_$cppr eta) -}
41164198bc42f58dac94bb14a13a0e54
  $fPrettyIntType ::
    Text.PrettyPrint.Mainland.Pretty
      Futhark.Representation.Primitive.IntType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntType
                  Futhark.Representation.Primitive.$fPrettyIntType_$cppr
                  Futhark.Representation.Primitive.$fPrettyIntType_$cpprPrec
                  Futhark.Representation.Primitive.$fPrettyIntType_$cpprList -}
e00ee4edb58838f7c460a09a8304cde0
  $fPrettyIntType1 :: Text.PrettyPrint.Mainland.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fPrettyIntType2
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.Mainland.String
                   ww2
                   Futhark.Representation.Primitive.$fPrettyIntType2 }) -}
7ed9c38002d67ba239b7b41cf3830e9c
  $fPrettyIntType2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "i64"#) -}
813e51447e976dffe2124e0e872ae1f5
  $fPrettyIntType3 :: Text.PrettyPrint.Mainland.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fPrettyIntType4
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.Mainland.String
                   ww2
                   Futhark.Representation.Primitive.$fPrettyIntType4 }) -}
68b2e6a0a568c963dc9c842377d5251d
  $fPrettyIntType4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "i32"#) -}
d8a3bd47970a6a944cb18dc33139901a
  $fPrettyIntType5 :: Text.PrettyPrint.Mainland.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fPrettyIntType6
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.Mainland.String
                   ww2
                   Futhark.Representation.Primitive.$fPrettyIntType6 }) -}
b2ab3bf1a46a4315e0bb431e15002c1b
  $fPrettyIntType6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "i16"#) -}
ff33b7837c93810c24df46be08f8fc72
  $fPrettyIntType7 :: Text.PrettyPrint.Mainland.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fPrettyIntType8
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.Mainland.String
                   ww2
                   Futhark.Representation.Primitive.$fPrettyIntType8 }) -}
ddd4f933810fd50867d37fc32ac13d03
  $fPrettyIntType8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "i8"#) -}
41164198bc42f58dac94bb14a13a0e54
  $fPrettyIntType_$cppr ::
    Futhark.Representation.Primitive.IntType
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Futhark.Representation.Primitive.IntType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Int8
                   -> Futhark.Representation.Primitive.$fPrettyIntType7
                   Futhark.Representation.Primitive.Int16
                   -> Futhark.Representation.Primitive.$fPrettyIntType5
                   Futhark.Representation.Primitive.Int32
                   -> Futhark.Representation.Primitive.$fPrettyIntType3
                   Futhark.Representation.Primitive.Int64
                   -> Futhark.Representation.Primitive.$fPrettyIntType1 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fPrettyIntType_$cpprList ::
    [Futhark.Representation.Primitive.IntType]
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>m9, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Futhark.Representation.Primitive.IntType] ->
                 case Futhark.Representation.Primitive.$w$cpprList2
                        w of ww { (#,#) ww1 ww2 ->
                 Text.PrettyPrint.Mainland.Cat ww1 ww2 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fPrettyIntType_$cpprPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.IntType
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Futhark.Representation.Primitive.IntType ->
                 Futhark.Representation.Primitive.$fPrettyIntType_$cppr eta) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fPrettyIntValue ::
    Text.PrettyPrint.Mainland.Pretty
      Futhark.Representation.Primitive.IntValue
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntValue
                  Futhark.Representation.Primitive.$fPrettyIntValue_$cppr
                  Futhark.Representation.Primitive.$fPrettyIntValue_$cpprPrec
                  Futhark.Representation.Primitive.$fPrettyIntValue_$cpprList -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fPrettyIntValue_$cppr ::
    Futhark.Representation.Primitive.IntValue
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Futhark.Representation.Primitive.IntValue ->
                 case Futhark.Representation.Primitive.$w$cppr1
                        w of ww { (#,#) ww1 ww2 ->
                 Text.PrettyPrint.Mainland.String ww1 ww2 }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fPrettyIntValue_$cpprList ::
    [Futhark.Representation.Primitive.IntValue]
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>m9, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Futhark.Representation.Primitive.IntValue] ->
                 case Futhark.Representation.Primitive.$w$cpprList3
                        w of ww { (#,#) ww1 ww2 ->
                 Text.PrettyPrint.Mainland.Cat ww1 ww2 }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fPrettyIntValue_$cpprPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.IntValue
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Futhark.Representation.Primitive.IntValue ->
                 Futhark.Representation.Primitive.$fPrettyIntValue_$cppr eta) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fPrettyPrimType ::
    Text.PrettyPrint.Mainland.Pretty
      Futhark.Representation.Primitive.PrimType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimType
                  Futhark.Representation.Primitive.$fPrettyPrimType_$cppr
                  Futhark.Representation.Primitive.$fPrettyPrimType_$cpprPrec
                  Futhark.Representation.Primitive.$fPrettyPrimType_$cpprList -}
ce977f56a815a818c8287434db23ebe2
  $fPrettyPrimType1 :: Text.PrettyPrint.Mainland.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fPrettyPrimType_s2
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.Mainland.String
                   ww2
                   Futhark.Representation.Primitive.$fPrettyPrimType_s2 }) -}
8baafd793b0798ce9bf2b38f59ae3b1e
  $fPrettyPrimType2 :: Text.PrettyPrint.Mainland.Doc
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fPrettyPrimType_s1
                        0 of ww2 { DEFAULT ->
                 Text.PrettyPrint.Mainland.String
                   ww2
                   Futhark.Representation.Primitive.$fPrettyPrimType_s1 }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fPrettyPrimType_$cppr ::
    Futhark.Representation.Primitive.PrimType
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Futhark.Representation.Primitive.PrimType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.IntType t
                   -> Futhark.Representation.Primitive.$fPrettyIntType_$cppr t
                   Futhark.Representation.Primitive.FloatType t
                   -> case t of wild1 {
                        Futhark.Representation.Primitive.Float32
                        -> Futhark.Representation.Primitive.$fPrettyFloatType3
                        Futhark.Representation.Primitive.Float64
                        -> Futhark.Representation.Primitive.$fPrettyFloatType1 }
                   Futhark.Representation.Primitive.Bool
                   -> Futhark.Representation.Primitive.$fPrettyPrimType2
                   Futhark.Representation.Primitive.Cert
                   -> Futhark.Representation.Primitive.$fPrettyPrimType1 }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fPrettyPrimType_$cpprList ::
    [Futhark.Representation.Primitive.PrimType]
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>m9, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Futhark.Representation.Primitive.PrimType] ->
                 case Futhark.Representation.Primitive.$w$cpprList4
                        w of ww { (#,#) ww1 ww2 ->
                 Text.PrettyPrint.Mainland.Cat ww1 ww2 }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fPrettyPrimType_$cpprPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.PrimType
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Futhark.Representation.Primitive.PrimType ->
                 Futhark.Representation.Primitive.$fPrettyPrimType_$cppr eta) -}
c5f207c5b865ee87390e814df290cbf8
  $fPrettyPrimType_s1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "bool"#) -}
faeefcd312ca956ab4bf5f8ad38bfb45
  $fPrettyPrimType_s2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "cert"#) -}
8e822e36076955e40795d9052bbfb8c1
  $fPrettyPrimValue ::
    Text.PrettyPrint.Mainland.Pretty
      Futhark.Representation.Primitive.PrimValue
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimValue
                  Futhark.Representation.Primitive.$fPrettyPrimValue_$cppr
                  Futhark.Representation.Primitive.$fPrettyPrimValue_$cpprPrec
                  Futhark.Representation.Primitive.$fPrettyPrimValue_$cpprList -}
8e822e36076955e40795d9052bbfb8c1
  $fPrettyPrimValue_$cppr ::
    Futhark.Representation.Primitive.PrimValue
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U> -}
8e822e36076955e40795d9052bbfb8c1
  $fPrettyPrimValue_$cpprList ::
    [Futhark.Representation.Primitive.PrimValue]
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 1, Strictness: <S,1*U>m9, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Futhark.Representation.Primitive.PrimValue] ->
                 case Futhark.Representation.Primitive.$w$cpprList5
                        w of ww { (#,#) ww1 ww2 ->
                 Text.PrettyPrint.Mainland.Cat ww1 ww2 }) -}
8e822e36076955e40795d9052bbfb8c1
  $fPrettyPrimValue_$cpprPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.PrimValue
    -> Text.PrettyPrint.Mainland.Doc
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds :: GHC.Types.Int
                   eta :: Futhark.Representation.Primitive.PrimValue ->
                 Futhark.Representation.Primitive.$fPrettyPrimValue_$cppr eta) -}
a9973dd6087e3616facc22f23639aca3
  $fShowBinOp :: GHC.Show.Show Futhark.Representation.Primitive.BinOp
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.BinOp
                  Futhark.Representation.Primitive.$fShowBinOp_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowBinOp_$cshow
                  Futhark.Representation.Primitive.$fShowBinOp_$cshowList -}
a9973dd6087e3616facc22f23639aca3
  $fShowBinOp1 ::
    Futhark.Representation.Primitive.BinOp -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Futhark.Representation.Primitive.$fShowBinOp_$cshowsPrec
                   Futhark.Representation.Primitive.$fShowBinOp2) -}
e71f78bdcc7fbfb348abd9a9112e7945
  $fShowBinOp2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
a9973dd6087e3616facc22f23639aca3
  $fShowBinOp_$cshow ::
    Futhark.Representation.Primitive.BinOp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Futhark.Representation.Primitive.BinOp ->
                 Futhark.Representation.Primitive.$fShowBinOp_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a9973dd6087e3616facc22f23639aca3
  $fShowBinOp_$cshowList ::
    [Futhark.Representation.Primitive.BinOp] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.BinOp
                   Futhark.Representation.Primitive.$fShowBinOp1) -}
a9973dd6087e3616facc22f23639aca3
  $fShowBinOp_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.BinOp -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
08b5478bc0825237337ae1c63d391750
  $fShowCmpOp :: GHC.Show.Show Futhark.Representation.Primitive.CmpOp
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.CmpOp
                  Futhark.Representation.Primitive.$fShowCmpOp_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowCmpOp_$cshow
                  Futhark.Representation.Primitive.$fShowCmpOp_$cshowList -}
08b5478bc0825237337ae1c63d391750
  $fShowCmpOp1 ::
    Futhark.Representation.Primitive.CmpOp -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: Futhark.Representation.Primitive.CmpOp
                   w1 :: GHC.Base.String ->
                 Futhark.Representation.Primitive.$w$cshowsPrec 0 w w1) -}
08b5478bc0825237337ae1c63d391750
  $fShowCmpOp_$cshow ::
    Futhark.Representation.Primitive.CmpOp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Futhark.Representation.Primitive.CmpOp ->
                 Futhark.Representation.Primitive.$fShowCmpOp_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
08b5478bc0825237337ae1c63d391750
  $fShowCmpOp_$cshowList ::
    [Futhark.Representation.Primitive.CmpOp] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.CmpOp
                   Futhark.Representation.Primitive.$fShowCmpOp1) -}
08b5478bc0825237337ae1c63d391750
  $fShowCmpOp_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.CmpOp -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: Futhark.Representation.Primitive.CmpOp
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Futhark.Representation.Primitive.$w$cshowsPrec ww1 w1 w2 }) -}
a041089954fcf02181365ea68516096f
  $fShowConvOp ::
    GHC.Show.Show Futhark.Representation.Primitive.ConvOp
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.ConvOp
                  Futhark.Representation.Primitive.$fShowConvOp_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowConvOp_$cshow
                  Futhark.Representation.Primitive.$fShowConvOp_$cshowList -}
a041089954fcf02181365ea68516096f
  $fShowConvOp1 ::
    Futhark.Representation.Primitive.ConvOp -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: Futhark.Representation.Primitive.ConvOp
                   w1 :: GHC.Base.String ->
                 Futhark.Representation.Primitive.$w$cshowsPrec1 0 w w1) -}
a041089954fcf02181365ea68516096f
  $fShowConvOp_$cshow ::
    Futhark.Representation.Primitive.ConvOp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Futhark.Representation.Primitive.ConvOp ->
                 Futhark.Representation.Primitive.$fShowConvOp_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a041089954fcf02181365ea68516096f
  $fShowConvOp_$cshowList ::
    [Futhark.Representation.Primitive.ConvOp] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.ConvOp
                   Futhark.Representation.Primitive.$fShowConvOp1) -}
a041089954fcf02181365ea68516096f
  $fShowConvOp_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.ConvOp -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: Futhark.Representation.Primitive.ConvOp
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Futhark.Representation.Primitive.$w$cshowsPrec1 ww1 w1 w2 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fShowFloatType ::
    GHC.Show.Show Futhark.Representation.Primitive.FloatType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatType
                  Futhark.Representation.Primitive.$fShowFloatType_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowFloatType_$cshow
                  Futhark.Representation.Primitive.$fShowFloatType_$cshowList -}
306ea34947128e48fabb2e3ff22f5fb7
  $fShowFloatType1 ::
    Futhark.Representation.Primitive.FloatType -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: Futhark.Representation.Primitive.FloatType
                   eta :: GHC.Base.String ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Float32
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Futhark.Representation.Primitive.$fShowFloatType3)
                        eta
                   Futhark.Representation.Primitive.Float64
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Futhark.Representation.Primitive.$fShowFloatType2)
                        eta }) -}
18addba26ce13e01b9cbca55c76df466
  $fShowFloatType2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Float64"#) -}
4bdf4ad4fd5a9fa21161f40560ca3959
  $fShowFloatType3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Float32"#) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fShowFloatType_$cshow ::
    Futhark.Representation.Primitive.FloatType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Futhark.Representation.Primitive.FloatType ->
                 case x of wild {
                   Futhark.Representation.Primitive.Float32
                   -> Futhark.Representation.Primitive.$fShowFloatType3
                   Futhark.Representation.Primitive.Float64
                   -> Futhark.Representation.Primitive.$fShowFloatType2 }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fShowFloatType_$cshowList ::
    [Futhark.Representation.Primitive.FloatType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.FloatType
                   Futhark.Representation.Primitive.$fShowFloatType1) -}
306ea34947128e48fabb2e3ff22f5fb7
  $fShowFloatType_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.FloatType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: Futhark.Representation.Primitive.FloatType
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   Futhark.Representation.Primitive.Float32
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Futhark.Representation.Primitive.$fShowFloatType3)
                        eta
                   Futhark.Representation.Primitive.Float64
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c1 :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           Futhark.Representation.Primitive.$fShowFloatType2)
                        eta }) -}
70b046f18760096ae622b1ade242ee60
  $fShowFloatValue ::
    GHC.Show.Show Futhark.Representation.Primitive.FloatValue
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.FloatValue
                  Futhark.Representation.Primitive.$fShowFloatValue_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowFloatValue_$cshow
                  Futhark.Representation.Primitive.$fShowFloatValue_$cshowList -}
70b046f18760096ae622b1ade242ee60
  $fShowFloatValue1 ::
    Futhark.Representation.Primitive.FloatValue -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: Futhark.Representation.Primitive.FloatValue ->
                 Futhark.Representation.Primitive.$w$cshowsPrec2 0 w) -}
56f7356d9c5361bb603ad04d2e35f49f
  $fShowFloatValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Float64Value "#) -}
d71de662a703a8576675f78309a4c9bd
  $fShowFloatValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Float32Value "#) -}
79339d639d836e6ac5b2ef1d197f199d
  $fShowFloatValue4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11) -}
70b046f18760096ae622b1ade242ee60
  $fShowFloatValue_$cshow ::
    Futhark.Representation.Primitive.FloatValue -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.FloatValue ->
                 case x of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fShowFloatValue3
                        (GHC.Float.$w$sshowSignedFloat1
                           GHC.Float.$fShowFloat_$sshowFloat
                           Futhark.Representation.Primitive.$fShowFloatValue4
                           dt
                           (GHC.Types.[] @ GHC.Types.Char))
                   Futhark.Representation.Primitive.Float64Value dt
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fShowFloatValue2
                        (GHC.Float.$w$sshowSignedFloat
                           GHC.Float.$fShowDouble_$sshowFloat
                           Futhark.Representation.Primitive.$fShowFloatValue4
                           dt
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
70b046f18760096ae622b1ade242ee60
  $fShowFloatValue_$cshowList ::
    [Futhark.Representation.Primitive.FloatValue] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.FloatValue
                   Futhark.Representation.Primitive.$fShowFloatValue1) -}
70b046f18760096ae622b1ade242ee60
  $fShowFloatValue_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: Futhark.Representation.Primitive.FloatValue ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Futhark.Representation.Primitive.$w$cshowsPrec2 ww1 w1 }) -}
41164198bc42f58dac94bb14a13a0e54
  $fShowIntType ::
    GHC.Show.Show Futhark.Representation.Primitive.IntType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntType
                  Futhark.Representation.Primitive.$fShowIntType_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowIntType_$cshow
                  Futhark.Representation.Primitive.$fShowIntType_$cshowList -}
0557d2b93cc00510a6654bd34ed83fa6
  $fShowIntType1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Int64"#) -}
f92a97a83aa6477180b3b62c6d4e23ce
  $fShowIntType2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Int32"#) -}
127d8c49a687193d0e91ea7bfbe683ec
  $fShowIntType3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Int16"#) -}
f314d2e74af4970c3521dba5115b8414
  $fShowIntType4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Int8"#) -}
41164198bc42f58dac94bb14a13a0e54
  $fShowIntType_$cshow ::
    Futhark.Representation.Primitive.IntType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Futhark.Representation.Primitive.IntType ->
                 Futhark.Representation.Primitive.$fShowIntType_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
41164198bc42f58dac94bb14a13a0e54
  $fShowIntType_$cshowList ::
    [Futhark.Representation.Primitive.IntType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.IntType
                   Futhark.Representation.Primitive.$w$cshowsPrec3) -}
41164198bc42f58dac94bb14a13a0e54
  $fShowIntType_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.IntType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: Futhark.Representation.Primitive.IntType
                   w2 :: GHC.Base.String ->
                 Futhark.Representation.Primitive.$w$cshowsPrec3 w1 w2) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fShowIntValue ::
    GHC.Show.Show Futhark.Representation.Primitive.IntValue
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.IntValue
                  Futhark.Representation.Primitive.$fShowIntValue_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowIntValue_$cshow
                  Futhark.Representation.Primitive.$fShowIntValue_$cshowList -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fShowIntValue1 ::
    Futhark.Representation.Primitive.IntValue -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: Futhark.Representation.Primitive.IntValue
                   w1 :: GHC.Base.String ->
                 Futhark.Representation.Primitive.$w$cshowsPrec4 0 w w1) -}
148c9ef50dde237346ccd2855efdac27
  $fShowIntValue2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Int64Value "#) -}
5bb327b37bf32b5eeb05c40b6d7dc118
  $fShowIntValue3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Int32Value "#) -}
daf4ff3f61d5aca96fa38fa3b4b62436
  $fShowIntValue4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Int16Value "#) -}
09736c046e9c5a60c51eae241ef6899e
  $fShowIntValue5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Int8Value "#) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fShowIntValue_$cshow ::
    Futhark.Representation.Primitive.IntValue -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Futhark.Representation.Primitive.IntValue ->
                 Futhark.Representation.Primitive.$fShowIntValue_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fShowIntValue_$cshowList ::
    [Futhark.Representation.Primitive.IntValue] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.IntValue
                   Futhark.Representation.Primitive.$fShowIntValue1) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $fShowIntValue_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.IntValue -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: Futhark.Representation.Primitive.IntValue
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Futhark.Representation.Primitive.$w$cshowsPrec4 ww1 w1 w2 }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fShowPrimType ::
    GHC.Show.Show Futhark.Representation.Primitive.PrimType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimType
                  Futhark.Representation.Primitive.$fShowPrimType_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowPrimType_$cshow
                  Futhark.Representation.Primitive.$fShowPrimType_$cshowList -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fShowPrimType1 ::
    Futhark.Representation.Primitive.PrimType -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Futhark.Representation.Primitive.$fShowPrimType_$cshowsPrec
                   Futhark.Representation.Primitive.$fShowBinOp2) -}
145366ad4bb1664d3981cd9e77e4b4b5
  $fShowPrimType2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cert"#) -}
d4b117fb20871c8d6d7ceef21683d7a7
  $fShowPrimType3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Bool"#) -}
846f45fbc8ca2f05edb8715071c6360b
  $fShowPrimType4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FloatType "#) -}
af9c3fce825b32eb8d6599c5c8a7f388
  $fShowPrimType5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IntType "#) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fShowPrimType_$cshow ::
    Futhark.Representation.Primitive.PrimType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Futhark.Representation.Primitive.PrimType ->
                 Futhark.Representation.Primitive.$fShowPrimType_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fShowPrimType_$cshowList ::
    [Futhark.Representation.Primitive.PrimType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.PrimType
                   Futhark.Representation.Primitive.$fShowPrimType1) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $fShowPrimType_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.PrimType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ a2 :: GHC.Types.Int
                   ds :: Futhark.Representation.Primitive.PrimType
                   eta :: GHC.Base.String ->
                 case ds of wild {
                   Futhark.Representation.Primitive.IntType b1
                   -> case a2 of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             Futhark.Representation.Primitive.$fShowPrimType5
                             (Futhark.Representation.Primitive.$w$cshowsPrec3 b1 eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Futhark.Representation.Primitive.$fShowPrimType5
                                (Futhark.Representation.Primitive.$w$cshowsPrec3
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } }
                   Futhark.Representation.Primitive.FloatType b1
                   -> case a2 of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Futhark.Representation.Primitive.$fShowPrimType4
                            (case b1 of wild2 {
                               Futhark.Representation.Primitive.Float32
                               -> GHC.Base.++
                                    @ GHC.Types.Char
                                    Futhark.Representation.Primitive.$fShowFloatType3
                                    x1
                               Futhark.Representation.Primitive.Float64
                               -> GHC.Base.++
                                    @ GHC.Types.Char
                                    Futhark.Representation.Primitive.$fShowFloatType2
                                    x1 })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } }
                   Futhark.Representation.Primitive.Bool
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fShowPrimType3
                        eta
                   Futhark.Representation.Primitive.Cert
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fShowPrimType2
                        eta }) -}
8e822e36076955e40795d9052bbfb8c1
  $fShowPrimValue ::
    GHC.Show.Show Futhark.Representation.Primitive.PrimValue
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.PrimValue
                  Futhark.Representation.Primitive.$fShowPrimValue_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowPrimValue_$cshow
                  Futhark.Representation.Primitive.$fShowPrimValue_$cshowList -}
8e822e36076955e40795d9052bbfb8c1
  $fShowPrimValue1 ::
    Futhark.Representation.Primitive.PrimValue -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Futhark.Representation.Primitive.$fShowPrimValue_$cshowsPrec
                   Futhark.Representation.Primitive.$fShowBinOp2) -}
8e822e36076955e40795d9052bbfb8c1
  $fShowPrimValue_$cshow ::
    Futhark.Representation.Primitive.PrimValue -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Futhark.Representation.Primitive.PrimValue ->
                 Futhark.Representation.Primitive.$fShowPrimValue_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8e822e36076955e40795d9052bbfb8c1
  $fShowPrimValue_$cshowList ::
    [Futhark.Representation.Primitive.PrimValue] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.PrimValue
                   Futhark.Representation.Primitive.$fShowPrimValue1) -}
8e822e36076955e40795d9052bbfb8c1
  $fShowPrimValue_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.PrimValue -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fShowUnOp :: GHC.Show.Show Futhark.Representation.Primitive.UnOp
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Futhark.Representation.Primitive.UnOp
                  Futhark.Representation.Primitive.$fShowUnOp_$cshowsPrec
                  Futhark.Representation.Primitive.$fShowUnOp_$cshow
                  Futhark.Representation.Primitive.$fShowUnOp_$cshowList -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fShowUnOp1 ::
    Futhark.Representation.Primitive.UnOp -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Futhark.Representation.Primitive.$fShowUnOp_$cshowsPrec
                   Futhark.Representation.Primitive.$fShowBinOp2) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fShowUnOp_$cshow ::
    Futhark.Representation.Primitive.UnOp -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Futhark.Representation.Primitive.UnOp ->
                 Futhark.Representation.Primitive.$fShowUnOp_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fShowUnOp_$cshowList ::
    [Futhark.Representation.Primitive.UnOp] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Futhark.Representation.Primitive.UnOp
                   Futhark.Representation.Primitive.$fShowUnOp1) -}
6b070cba6ee772a8601d22cf6c3f1c85
  $fShowUnOp_$cshowsPrec ::
    GHC.Types.Int
    -> Futhark.Representation.Primitive.UnOp -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
3c364ee8cd942aee25f3443b28f50d3a
  $s^1 :: GHC.Int.Int64
  {- Strictness: b -}
786a3eb2323f389c8ee8dda8e566c6a9
  $w$cfromEnum ::
    Futhark.Representation.Primitive.PrimType -> GHC.Prim.Int#
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: Futhark.Representation.Primitive.PrimType ->
                 case w of wild {
                   Futhark.Representation.Primitive.IntType ds
                   -> case ds of wild1 {
                        Futhark.Representation.Primitive.Int8 -> 0
                        Futhark.Representation.Primitive.Int16 -> 1
                        Futhark.Representation.Primitive.Int32 -> 2
                        Futhark.Representation.Primitive.Int64 -> 3 }
                   Futhark.Representation.Primitive.FloatType ds
                   -> case ds of wild1 {
                        Futhark.Representation.Primitive.Float32 -> 4
                        Futhark.Representation.Primitive.Float64 -> 5 }
                   Futhark.Representation.Primitive.Bool -> 6
                   Futhark.Representation.Primitive.Cert -> 7 }) -}
70b046f18760096ae622b1ade242ee60
  $w$cppr ::
    Futhark.Representation.Primitive.FloatValue
    -> (# GHC.Prim.Int#, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: Futhark.Representation.Primitive.FloatValue ->
                 case w of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> let {
                        s2 :: GHC.Base.String
                        = GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Float.$w$sshowSignedFloat1
                               GHC.Float.$fShowFloat_$sshowFloat
                               GHC.Show.shows18
                               dt
                               (GHC.Types.[] @ GHC.Types.Char))
                            Futhark.Representation.Primitive.$fPrettyFloatType4
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char s2 0 of ww2 { DEFAULT ->
                      (# ww2, s2 #) }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> let {
                        s2 :: GHC.Base.String
                        = GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Float.$w$sshowSignedFloat
                               GHC.Float.$fShowDouble_$sshowFloat
                               GHC.Show.shows18
                               dt
                               (GHC.Types.[] @ GHC.Types.Char))
                            Futhark.Representation.Primitive.$fPrettyFloatType2
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char s2 0 of ww2 { DEFAULT ->
                      (# ww2, s2 #) } }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $w$cppr1 ::
    Futhark.Representation.Primitive.IntValue
    -> (# GHC.Prim.Int#, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: Futhark.Representation.Primitive.IntValue ->
                 case w of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case GHC.Show.$wshowSignedInt
                             0
                             dt
                             (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                      let {
                        s2 :: GHC.Base.String
                        = GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                            Futhark.Representation.Primitive.$fPrettyIntType8
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char s2 0 of ww2 { DEFAULT ->
                      (# ww2, s2 #) } }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case GHC.Show.$wshowSignedInt
                             0
                             dt
                             (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                      let {
                        s2 :: GHC.Base.String
                        = GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                            Futhark.Representation.Primitive.$fPrettyIntType6
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char s2 0 of ww2 { DEFAULT ->
                      (# ww2, s2 #) } }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case GHC.Show.$wshowSignedInt
                             0
                             dt
                             (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                      let {
                        s2 :: GHC.Base.String
                        = GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                            Futhark.Representation.Primitive.$fPrettyIntType4
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char s2 0 of ww2 { DEFAULT ->
                      (# ww2, s2 #) } }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case GHC.Show.$wshowSignedInt
                             0
                             dt
                             (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                      let {
                        s2 :: GHC.Base.String
                        = GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                            Futhark.Representation.Primitive.$fPrettyIntType2
                      } in
                      case GHC.List.$wlenAcc @ GHC.Types.Char s2 0 of ww2 { DEFAULT ->
                      (# ww2, s2 #) } } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $w$cpprList ::
    [Futhark.Representation.Primitive.FloatType]
    -> (# Text.PrettyPrint.Mainland.Doc,
          Text.PrettyPrint.Mainland.Doc #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [Futhark.Representation.Primitive.FloatType] ->
                 case GHC.Base.map
                        @ Futhark.Representation.Primitive.FloatType
                        @ Text.PrettyPrint.Mainland.Doc
                        Futhark.Representation.Primitive.$fPrettyFloatType_$cppr
                        w of wild {
                   []
                   -> (# Text.PrettyPrint.Mainland.lbracket,
                         Text.PrettyPrint.Mainland.rbracket #)
                   : d ds
                   -> case ds of wild1 {
                        []
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                d
                                Text.PrettyPrint.Mainland.rbracket #)
                        : ipv ipv1
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                (let {
                                   d1 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.folddoc
                                       Text.PrettyPrint.Mainland.<+/>
                                       (Text.PrettyPrint.Mainland.punctuate
                                          Text.PrettyPrint.Mainland.comma
                                          wild)
                                 } in
                                 let {
                                   a2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.flatten d1
                                 } in
                                 let {
                                   d2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.Alt a2 d1
                                 } in
                                 Text.PrettyPrint.Mainland.Column
                                   (\ k :: GHC.Types.Int ->
                                    Text.PrettyPrint.Mainland.Nesting
                                      (\ i :: GHC.Types.Int ->
                                       case k of wild2 { GHC.Types.I# x ->
                                       case i of wild3 { GHC.Types.I# y ->
                                       Text.PrettyPrint.Mainland.Nest (GHC.Prim.-# x y) d2 } })))
                                Text.PrettyPrint.Mainland.rbracket #) } }) -}
70b046f18760096ae622b1ade242ee60
  $w$cpprList1 ::
    [Futhark.Representation.Primitive.FloatValue]
    -> (# Text.PrettyPrint.Mainland.Doc,
          Text.PrettyPrint.Mainland.Doc #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [Futhark.Representation.Primitive.FloatValue] ->
                 case GHC.Base.map
                        @ Futhark.Representation.Primitive.FloatValue
                        @ Text.PrettyPrint.Mainland.Doc
                        Futhark.Representation.Primitive.$fPrettyFloatValue_$cppr
                        w of wild {
                   []
                   -> (# Text.PrettyPrint.Mainland.lbracket,
                         Text.PrettyPrint.Mainland.rbracket #)
                   : d ds
                   -> case ds of wild1 {
                        []
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                d
                                Text.PrettyPrint.Mainland.rbracket #)
                        : ipv ipv1
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                (let {
                                   d1 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.folddoc
                                       Text.PrettyPrint.Mainland.<+/>
                                       (Text.PrettyPrint.Mainland.punctuate
                                          Text.PrettyPrint.Mainland.comma
                                          wild)
                                 } in
                                 let {
                                   a2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.flatten d1
                                 } in
                                 let {
                                   d2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.Alt a2 d1
                                 } in
                                 Text.PrettyPrint.Mainland.Column
                                   (\ k :: GHC.Types.Int ->
                                    Text.PrettyPrint.Mainland.Nesting
                                      (\ i :: GHC.Types.Int ->
                                       case k of wild2 { GHC.Types.I# x ->
                                       case i of wild3 { GHC.Types.I# y ->
                                       Text.PrettyPrint.Mainland.Nest (GHC.Prim.-# x y) d2 } })))
                                Text.PrettyPrint.Mainland.rbracket #) } }) -}
41164198bc42f58dac94bb14a13a0e54
  $w$cpprList2 ::
    [Futhark.Representation.Primitive.IntType]
    -> (# Text.PrettyPrint.Mainland.Doc,
          Text.PrettyPrint.Mainland.Doc #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [Futhark.Representation.Primitive.IntType] ->
                 case GHC.Base.map
                        @ Futhark.Representation.Primitive.IntType
                        @ Text.PrettyPrint.Mainland.Doc
                        Futhark.Representation.Primitive.$fPrettyIntType_$cppr
                        w of wild {
                   []
                   -> (# Text.PrettyPrint.Mainland.lbracket,
                         Text.PrettyPrint.Mainland.rbracket #)
                   : d ds
                   -> case ds of wild1 {
                        []
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                d
                                Text.PrettyPrint.Mainland.rbracket #)
                        : ipv ipv1
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                (let {
                                   d1 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.folddoc
                                       Text.PrettyPrint.Mainland.<+/>
                                       (Text.PrettyPrint.Mainland.punctuate
                                          Text.PrettyPrint.Mainland.comma
                                          wild)
                                 } in
                                 let {
                                   a2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.flatten d1
                                 } in
                                 let {
                                   d2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.Alt a2 d1
                                 } in
                                 Text.PrettyPrint.Mainland.Column
                                   (\ k :: GHC.Types.Int ->
                                    Text.PrettyPrint.Mainland.Nesting
                                      (\ i :: GHC.Types.Int ->
                                       case k of wild2 { GHC.Types.I# x ->
                                       case i of wild3 { GHC.Types.I# y ->
                                       Text.PrettyPrint.Mainland.Nest (GHC.Prim.-# x y) d2 } })))
                                Text.PrettyPrint.Mainland.rbracket #) } }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $w$cpprList3 ::
    [Futhark.Representation.Primitive.IntValue]
    -> (# Text.PrettyPrint.Mainland.Doc,
          Text.PrettyPrint.Mainland.Doc #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [Futhark.Representation.Primitive.IntValue] ->
                 case GHC.Base.map
                        @ Futhark.Representation.Primitive.IntValue
                        @ Text.PrettyPrint.Mainland.Doc
                        Futhark.Representation.Primitive.$fPrettyIntValue_$cppr
                        w of wild {
                   []
                   -> (# Text.PrettyPrint.Mainland.lbracket,
                         Text.PrettyPrint.Mainland.rbracket #)
                   : d ds
                   -> case ds of wild1 {
                        []
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                d
                                Text.PrettyPrint.Mainland.rbracket #)
                        : ipv ipv1
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                (let {
                                   d1 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.folddoc
                                       Text.PrettyPrint.Mainland.<+/>
                                       (Text.PrettyPrint.Mainland.punctuate
                                          Text.PrettyPrint.Mainland.comma
                                          wild)
                                 } in
                                 let {
                                   a2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.flatten d1
                                 } in
                                 let {
                                   d2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.Alt a2 d1
                                 } in
                                 Text.PrettyPrint.Mainland.Column
                                   (\ k :: GHC.Types.Int ->
                                    Text.PrettyPrint.Mainland.Nesting
                                      (\ i :: GHC.Types.Int ->
                                       case k of wild2 { GHC.Types.I# x ->
                                       case i of wild3 { GHC.Types.I# y ->
                                       Text.PrettyPrint.Mainland.Nest (GHC.Prim.-# x y) d2 } })))
                                Text.PrettyPrint.Mainland.rbracket #) } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $w$cpprList4 ::
    [Futhark.Representation.Primitive.PrimType]
    -> (# Text.PrettyPrint.Mainland.Doc,
          Text.PrettyPrint.Mainland.Doc #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [Futhark.Representation.Primitive.PrimType] ->
                 case GHC.Base.map
                        @ Futhark.Representation.Primitive.PrimType
                        @ Text.PrettyPrint.Mainland.Doc
                        Futhark.Representation.Primitive.$fPrettyPrimType_$cppr
                        w of wild {
                   []
                   -> (# Text.PrettyPrint.Mainland.lbracket,
                         Text.PrettyPrint.Mainland.rbracket #)
                   : d ds
                   -> case ds of wild1 {
                        []
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                d
                                Text.PrettyPrint.Mainland.rbracket #)
                        : ipv ipv1
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                (let {
                                   d1 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.folddoc
                                       Text.PrettyPrint.Mainland.<+/>
                                       (Text.PrettyPrint.Mainland.punctuate
                                          Text.PrettyPrint.Mainland.comma
                                          wild)
                                 } in
                                 let {
                                   a2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.flatten d1
                                 } in
                                 let {
                                   d2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.Alt a2 d1
                                 } in
                                 Text.PrettyPrint.Mainland.Column
                                   (\ k :: GHC.Types.Int ->
                                    Text.PrettyPrint.Mainland.Nesting
                                      (\ i :: GHC.Types.Int ->
                                       case k of wild2 { GHC.Types.I# x ->
                                       case i of wild3 { GHC.Types.I# y ->
                                       Text.PrettyPrint.Mainland.Nest (GHC.Prim.-# x y) d2 } })))
                                Text.PrettyPrint.Mainland.rbracket #) } }) -}
8e822e36076955e40795d9052bbfb8c1
  $w$cpprList5 ::
    [Futhark.Representation.Primitive.PrimValue]
    -> (# Text.PrettyPrint.Mainland.Doc,
          Text.PrettyPrint.Mainland.Doc #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [Futhark.Representation.Primitive.PrimValue] ->
                 case GHC.Base.map
                        @ Futhark.Representation.Primitive.PrimValue
                        @ Text.PrettyPrint.Mainland.Doc
                        Futhark.Representation.Primitive.$fPrettyPrimValue_$cppr
                        w of wild {
                   []
                   -> (# Text.PrettyPrint.Mainland.lbracket,
                         Text.PrettyPrint.Mainland.rbracket #)
                   : d ds
                   -> case ds of wild1 {
                        []
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                d
                                Text.PrettyPrint.Mainland.rbracket #)
                        : ipv ipv1
                        -> (# Text.PrettyPrint.Mainland.lbracket,
                              Text.PrettyPrint.Mainland.Cat
                                (let {
                                   d1 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.folddoc
                                       Text.PrettyPrint.Mainland.<+/>
                                       (Text.PrettyPrint.Mainland.punctuate
                                          Text.PrettyPrint.Mainland.comma
                                          wild)
                                 } in
                                 let {
                                   a2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.flatten d1
                                 } in
                                 let {
                                   d2 :: Text.PrettyPrint.Mainland.Doc
                                   = Text.PrettyPrint.Mainland.Alt a2 d1
                                 } in
                                 Text.PrettyPrint.Mainland.Column
                                   (\ k :: GHC.Types.Int ->
                                    Text.PrettyPrint.Mainland.Nesting
                                      (\ i :: GHC.Types.Int ->
                                       case k of wild2 { GHC.Types.I# x ->
                                       case i of wild3 { GHC.Types.I# y ->
                                       Text.PrettyPrint.Mainland.Nest (GHC.Prim.-# x y) d2 } })))
                                Text.PrettyPrint.Mainland.rbracket #) } }) -}
08b5478bc0825237337ae1c63d391750
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Futhark.Representation.Primitive.CmpOp
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U>, Inline: [0] -}
a041089954fcf02181365ea68516096f
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Futhark.Representation.Primitive.ConvOp
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U>, Inline: [0] -}
70b046f18760096ae622b1ade242ee60
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   w :: Futhark.Representation.Primitive.FloatValue ->
                 case w of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = GHC.Float.$w$sshowSignedFloat1
                            GHC.Float.$fShowFloat_$sshowFloat
                            Futhark.Representation.Primitive.$fShowFloatValue4
                            dt
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11) of wild1 {
                        GHC.Types.False
                        -> \ x :: GHC.Base.String ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Futhark.Representation.Primitive.$fShowFloatValue3
                             (g x)
                        GHC.Types.True
                        -> \ x :: GHC.Base.String ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Futhark.Representation.Primitive.$fShowFloatValue3
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 x))) }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = GHC.Float.$w$sshowSignedFloat
                            GHC.Float.$fShowDouble_$sshowFloat
                            Futhark.Representation.Primitive.$fShowFloatValue4
                            dt
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11) of wild1 {
                        GHC.Types.False
                        -> \ x :: GHC.Base.String ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Futhark.Representation.Primitive.$fShowFloatValue2
                             (g x)
                        GHC.Types.True
                        -> \ x :: GHC.Base.String ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Futhark.Representation.Primitive.$fShowFloatValue2
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 x))) } }) -}
41164198bc42f58dac94bb14a13a0e54
  $w$cshowsPrec3 ::
    Futhark.Representation.Primitive.IntType
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: Futhark.Representation.Primitive.IntType
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   Futhark.Representation.Primitive.Int8
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fShowIntType4
                        w1
                   Futhark.Representation.Primitive.Int16
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fShowIntType3
                        w1
                   Futhark.Representation.Primitive.Int32
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fShowIntType2
                        w1
                   Futhark.Representation.Primitive.Int64
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Futhark.Representation.Primitive.$fShowIntType1
                        w1 }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> Futhark.Representation.Primitive.IntValue
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U><S,1*U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   w :: Futhark.Representation.Primitive.IntValue
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Futhark.Representation.Primitive.$fShowIntValue5
                            (case GHC.Show.$wshowSignedInt 11 dt x of ww4 { (#,#) ww5 ww6 ->
                             GHC.Types.: @ GHC.Types.Char ww5 ww6 })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11) of wild1 {
                        GHC.Types.False -> p w1
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w1)) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Futhark.Representation.Primitive.$fShowIntValue4
                            (case GHC.Show.$wshowSignedInt 11 dt x of ww4 { (#,#) ww5 ww6 ->
                             GHC.Types.: @ GHC.Types.Char ww5 ww6 })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11) of wild1 {
                        GHC.Types.False -> p w1
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w1)) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Futhark.Representation.Primitive.$fShowIntValue3
                            (case GHC.Show.$wshowSignedInt 11 dt x of ww4 { (#,#) ww5 ww6 ->
                             GHC.Types.: @ GHC.Types.Char ww5 ww6 })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11) of wild1 {
                        GHC.Types.False -> p w1
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w1)) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            Futhark.Representation.Primitive.$fShowIntValue2
                            (case GHC.Show.$wshowSignedInt 11 dt x of ww4 { (#,#) ww5 ww6 ->
                             GHC.Types.: @ GHC.Types.Char ww5 ww6 })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11) of wild1 {
                        GHC.Types.False -> p w1
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w1)) } }) -}
306ea34947128e48fabb2e3ff22f5fb7
  $w$ctoEnum ::
    GHC.Prim.Int# -> Futhark.Representation.Primitive.FloatType
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False
                   -> Futhark.Representation.Primitive.$fEnumFloatType1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1) of wild1 {
                        GHC.Types.False
                        -> Futhark.Representation.Primitive.$fEnumFloatType1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ Futhark.Representation.Primitive.FloatType
                             ww } }) -}
41164198bc42f58dac94bb14a13a0e54
  $w$ctoEnum1 ::
    GHC.Prim.Int# -> Futhark.Representation.Primitive.IntType
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0) of wild {
                   GHC.Types.False
                   -> Futhark.Representation.Primitive.$fEnumIntType5 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 3) of wild1 {
                        GHC.Types.False
                        -> Futhark.Representation.Primitive.$fEnumIntType5 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ Futhark.Representation.Primitive.IntType
                             ww } }) -}
786a3eb2323f389c8ee8dda8e566c6a9
  $w$ctoEnum2 ::
    GHC.Prim.Int# -> Futhark.Representation.Primitive.PrimType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# ->
                 case ww of ds {
                   DEFAULT -> Futhark.Representation.Primitive.Cert
                   0 -> Futhark.Representation.Primitive.$fBoundedPrimType1
                   1 -> Futhark.Representation.Primitive.$fEnumPrimType5
                   2 -> Futhark.Representation.Primitive.$fEnumPrimType4
                   3 -> Futhark.Representation.Primitive.$fEnumPrimType3
                   4 -> Futhark.Representation.Primitive.$fEnumPrimType2
                   5 -> Futhark.Representation.Primitive.$fEnumPrimType1
                   6 -> Futhark.Representation.Primitive.Bool }) -}
d6d9d81b75f9404930c6a484edea12a3
  $w$sintValue ::
    Futhark.Representation.Primitive.IntType
    -> GHC.Prim.Word# -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,U>, Inline: [0],
     Unfolding: (\ w :: Futhark.Representation.Primitive.IntType
                   ww :: GHC.Prim.Word# ->
                 case w of wild {
                   Futhark.Representation.Primitive.Int8
                   -> Futhark.Representation.Primitive.Int8Value
                        (GHC.Prim.narrow8Int# (GHC.Prim.word2Int# ww))
                   Futhark.Representation.Primitive.Int16
                   -> Futhark.Representation.Primitive.Int16Value
                        (GHC.Prim.narrow16Int# (GHC.Prim.word2Int# ww))
                   Futhark.Representation.Primitive.Int32
                   -> Futhark.Representation.Primitive.Int32Value
                        (GHC.Prim.narrow32Int# (GHC.Prim.word2Int# ww))
                   Futhark.Representation.Primitive.Int64
                   -> Futhark.Representation.Primitive.Int64Value
                        (GHC.Prim.word2Int# ww) }) -}
04d324f41bd7b3f75d20ba0b99443e9c
  $wf :: GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0] -}
1d4585f7c7d7301089381e88b55107b0
  $wprimBitSize ::
    Futhark.Representation.Primitive.PrimType -> GHC.Prim.Int#
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: Futhark.Representation.Primitive.PrimType ->
                 case w of wild {
                   Futhark.Representation.Primitive.IntType t
                   -> case t of wild1 {
                        Futhark.Representation.Primitive.Int8 -> 8
                        Futhark.Representation.Primitive.Int16 -> 16
                        Futhark.Representation.Primitive.Int32 -> 32
                        Futhark.Representation.Primitive.Int64 -> 64 }
                   Futhark.Representation.Primitive.FloatType t
                   -> case t of wild1 {
                        Futhark.Representation.Primitive.Float32 -> 32
                        Futhark.Representation.Primitive.Float64 -> 64 }
                   Futhark.Representation.Primitive.Bool -> 8
                   Futhark.Representation.Primitive.Cert -> 8 }) -}
a9973dd6087e3616facc22f23639aca3
  data BinOp
    = Add Futhark.Representation.Primitive.IntType
    | FAdd Futhark.Representation.Primitive.FloatType
    | Sub Futhark.Representation.Primitive.IntType
    | FSub Futhark.Representation.Primitive.FloatType
    | Mul Futhark.Representation.Primitive.IntType
    | FMul Futhark.Representation.Primitive.FloatType
    | UDiv Futhark.Representation.Primitive.IntType
    | SDiv Futhark.Representation.Primitive.IntType
    | FDiv Futhark.Representation.Primitive.FloatType
    | UMod Futhark.Representation.Primitive.IntType
    | SMod Futhark.Representation.Primitive.IntType
    | SQuot Futhark.Representation.Primitive.IntType
    | SRem Futhark.Representation.Primitive.IntType
    | Shl Futhark.Representation.Primitive.IntType
    | LShr Futhark.Representation.Primitive.IntType
    | AShr Futhark.Representation.Primitive.IntType
    | And Futhark.Representation.Primitive.IntType
    | Or Futhark.Representation.Primitive.IntType
    | Xor Futhark.Representation.Primitive.IntType
    | Pow Futhark.Representation.Primitive.IntType
    | FPow Futhark.Representation.Primitive.FloatType
    | LogAnd
    | LogOr
    Promotable
08b5478bc0825237337ae1c63d391750
  data CmpOp
    = CmpEq Futhark.Representation.Primitive.PrimType
    | CmpUlt Futhark.Representation.Primitive.IntType
    | CmpUle Futhark.Representation.Primitive.IntType
    | CmpSlt Futhark.Representation.Primitive.IntType
    | CmpSle Futhark.Representation.Primitive.IntType
    | FCmpLt Futhark.Representation.Primitive.FloatType
    | FCmpLe Futhark.Representation.Primitive.FloatType
    Promotable
a041089954fcf02181365ea68516096f
  data ConvOp
    = ZExt Futhark.Representation.Primitive.IntType
           Futhark.Representation.Primitive.IntType
    | SExt Futhark.Representation.Primitive.IntType
           Futhark.Representation.Primitive.IntType
    | FPConv Futhark.Representation.Primitive.FloatType
             Futhark.Representation.Primitive.FloatType
    | FPToUI Futhark.Representation.Primitive.FloatType
             Futhark.Representation.Primitive.IntType
    | FPToSI Futhark.Representation.Primitive.FloatType
             Futhark.Representation.Primitive.IntType
    | UIToFP Futhark.Representation.Primitive.IntType
             Futhark.Representation.Primitive.FloatType
    | SIToFP Futhark.Representation.Primitive.IntType
             Futhark.Representation.Primitive.FloatType
    Promotable
306ea34947128e48fabb2e3ff22f5fb7
  data FloatType = Float32 | Float64
    Promotable
70b046f18760096ae622b1ade242ee60
  data FloatValue
    = Float32Value {-# UNPACK #-}GHC.Types.Float
    | Float64Value {-# UNPACK #-}GHC.Types.Double
41164198bc42f58dac94bb14a13a0e54
  data IntType = Int8 | Int16 | Int32 | Int64
    Promotable
a1ae23b5d330aae7ec0f83454a1112b3
  data IntValue
    = Int8Value {-# UNPACK #-}GHC.Int.Int8
    | Int16Value {-# UNPACK #-}GHC.Int.Int16
    | Int32Value {-# UNPACK #-}GHC.Int.Int32
    | Int64Value {-# UNPACK #-}GHC.Int.Int64
786a3eb2323f389c8ee8dda8e566c6a9
  data PrimType
    = IntType Futhark.Representation.Primitive.IntType
    | FloatType Futhark.Representation.Primitive.FloatType
    | Bool
    | Cert
    Promotable
8e822e36076955e40795d9052bbfb8c1
  data PrimValue
    = IntValue !Futhark.Representation.Primitive.IntValue
    | FloatValue !Futhark.Representation.Primitive.FloatValue
    | BoolValue !GHC.Types.Bool
    | Checked
6b070cba6ee772a8601d22cf6c3f1c85
  data UnOp
    = Not
    | Complement Futhark.Representation.Primitive.IntType
    | Abs Futhark.Representation.Primitive.IntType
    | FAbs Futhark.Representation.Primitive.FloatType
    | SSignum Futhark.Representation.Primitive.IntType
    | USignum Futhark.Representation.Primitive.IntType
    Promotable
76d06d8794b30299c9ca8b9d7205f96e
  binOpType ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.PrimType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.BinOp ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Add t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.FAdd t
                   -> Futhark.Representation.Primitive.FloatType t
                   Futhark.Representation.Primitive.Sub t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.FSub t
                   -> Futhark.Representation.Primitive.FloatType t
                   Futhark.Representation.Primitive.Mul t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.FMul t
                   -> Futhark.Representation.Primitive.FloatType t
                   Futhark.Representation.Primitive.UDiv t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.SDiv t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.FDiv t
                   -> Futhark.Representation.Primitive.FloatType t
                   Futhark.Representation.Primitive.UMod t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.SMod t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.SQuot t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.SRem t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.Shl t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.LShr t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.AShr t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.And t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.Or t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.Xor t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.Pow t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.FPow t
                   -> Futhark.Representation.Primitive.FloatType t
                   Futhark.Representation.Primitive.LogAnd
                   -> Futhark.Representation.Primitive.Bool
                   Futhark.Representation.Primitive.LogOr
                   -> Futhark.Representation.Primitive.Bool }) -}
388f0f07aca78923c0192280dedd8f6c
  blankPrimValue ::
    Futhark.Representation.Primitive.PrimType
    -> Futhark.Representation.Primitive.PrimValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.PrimType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.IntType ds1
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Int8
                        -> Futhark.Representation.Primitive.blankPrimValue12
                        Futhark.Representation.Primitive.Int16
                        -> Futhark.Representation.Primitive.blankPrimValue10
                        Futhark.Representation.Primitive.Int32
                        -> Futhark.Representation.Primitive.blankPrimValue8
                        Futhark.Representation.Primitive.Int64
                        -> Futhark.Representation.Primitive.blankPrimValue6 }
                   Futhark.Representation.Primitive.FloatType ds1
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Float32
                        -> Futhark.Representation.Primitive.blankPrimValue4
                        Futhark.Representation.Primitive.Float64
                        -> Futhark.Representation.Primitive.blankPrimValue2 }
                   Futhark.Representation.Primitive.Bool
                   -> Futhark.Representation.Primitive.blankPrimValue1
                   Futhark.Representation.Primitive.Cert
                   -> Futhark.Representation.Primitive.Checked }) -}
39cb0071e2948299513353c0d14883f1
  blankPrimValue1 :: Futhark.Representation.Primitive.PrimValue
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Futhark.Representation.Primitive.BoolValue
                   GHC.Types.False) -}
23ef5817041156e8f3c5c5b135f35a67
  blankPrimValue10 :: Futhark.Representation.Primitive.PrimValue
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.IntValue
                   Futhark.Representation.Primitive.blankPrimValue11) -}
6b9afe8a29d7b2635197cc8201a080aa
  blankPrimValue11 :: Futhark.Representation.Primitive.IntValue
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Futhark.Representation.Primitive.Int16Value 0) -}
6eb57933f5fc552adb846922377f028e
  blankPrimValue12 :: Futhark.Representation.Primitive.PrimValue
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.IntValue
                   Futhark.Representation.Primitive.blankPrimValue13) -}
c3d0a30eacc0ef922b008162594f6fdb
  blankPrimValue13 :: Futhark.Representation.Primitive.IntValue
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.Int8Value 0) -}
8f67caca73bf6882d58ba2094d1ce92b
  blankPrimValue2 :: Futhark.Representation.Primitive.PrimValue
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Futhark.Representation.Primitive.FloatValue
                   Futhark.Representation.Primitive.blankPrimValue3) -}
86de935b9aac4df1fdf78caec6718afc
  blankPrimValue3 :: Futhark.Representation.Primitive.FloatValue
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Futhark.Representation.Primitive.Float64Value 0.0) -}
bb37446242ee868ec447a115fa3d6f87
  blankPrimValue4 :: Futhark.Representation.Primitive.PrimValue
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Futhark.Representation.Primitive.FloatValue
                   Futhark.Representation.Primitive.blankPrimValue5) -}
7459730e77c8f5e0c6f14fe08fb9f90f
  blankPrimValue5 :: Futhark.Representation.Primitive.FloatValue
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.Float32Value
                   __float 0.0) -}
c0d7bdd44cb353a19dcd5b0a1ae5193d
  blankPrimValue6 :: Futhark.Representation.Primitive.PrimValue
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.IntValue
                   Futhark.Representation.Primitive.blankPrimValue7) -}
817956871364f569850228507008f258
  blankPrimValue7 :: Futhark.Representation.Primitive.IntValue
  {- HasNoCafRefs, Strictness: m4,
     Unfolding: (Futhark.Representation.Primitive.Int64Value 0) -}
5da23f622a9049e1153022d8af9ebbf4
  blankPrimValue8 :: Futhark.Representation.Primitive.PrimValue
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Futhark.Representation.Primitive.IntValue
                   Futhark.Representation.Primitive.blankPrimValue9) -}
1c5616811dd2674bb2e6f2fea6e0ab6c
  blankPrimValue9 :: Futhark.Representation.Primitive.IntValue
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Futhark.Representation.Primitive.Int32Value 0) -}
67de6684ec005887e3af02f04b067001
  convTypes ::
    Futhark.Representation.Primitive.ConvOp
    -> (Futhark.Representation.Primitive.PrimType,
        Futhark.Representation.Primitive.PrimType)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Futhark.Representation.Primitive.ConvOp ->
                 case w of wild {
                   Futhark.Representation.Primitive.ZExt t1 t2
                   -> (Futhark.Representation.Primitive.IntType t1,
                       Futhark.Representation.Primitive.IntType t2)
                   Futhark.Representation.Primitive.SExt t1 t2
                   -> (Futhark.Representation.Primitive.IntType t1,
                       Futhark.Representation.Primitive.IntType t2)
                   Futhark.Representation.Primitive.FPConv t1 t2
                   -> (Futhark.Representation.Primitive.FloatType t1,
                       Futhark.Representation.Primitive.FloatType t2)
                   Futhark.Representation.Primitive.FPToUI t1 t2
                   -> (Futhark.Representation.Primitive.FloatType t1,
                       Futhark.Representation.Primitive.IntType t2)
                   Futhark.Representation.Primitive.FPToSI t1 t2
                   -> (Futhark.Representation.Primitive.FloatType t1,
                       Futhark.Representation.Primitive.IntType t2)
                   Futhark.Representation.Primitive.UIToFP t1 t2
                   -> (Futhark.Representation.Primitive.IntType t1,
                       Futhark.Representation.Primitive.FloatType t2)
                   Futhark.Representation.Primitive.SIToFP t1 t2
                   -> (Futhark.Representation.Primitive.IntType t1,
                       Futhark.Representation.Primitive.FloatType t2) }) -}
be119386b0017dab9f0190230c2ff4d9
  doAShr ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Int# -> Futhark.Representation.Primitive.IntValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Int#[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> Futhark.Representation.Primitive.IntValue
                         {- Arity: 1 -}
                       = \ ww1 :: GHC.Prim.Int#[OneShot] ->
                         case v1 of wild {
                           Futhark.Representation.Primitive.Int8Value dt
                           -> Futhark.Representation.Primitive.Int8Value
                                (GHC.Prim.narrow8Int# ww1)
                           Futhark.Representation.Primitive.Int16Value dt
                           -> Futhark.Representation.Primitive.Int16Value
                                (GHC.Prim.narrow16Int# ww1)
                           Futhark.Representation.Primitive.Int32Value dt
                           -> Futhark.Representation.Primitive.Int32Value
                                (GHC.Prim.narrow32Int# ww1)
                           Futhark.Representation.Primitive.Int64Value dt
                           -> Futhark.Representation.Primitive.Int64Value ww1 }
                     } in
                     case v1 of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# ww 64) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.Int8Value
                                 (GHC.Prim.narrow8Int# (GHC.Prim.uncheckedIShiftRA# dt ww))
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# dt 0) of wild2 {
                                 GHC.Types.False -> $j1 0 GHC.Types.True -> $j1 (-1) } }
                       Futhark.Representation.Primitive.Int16Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# ww 64) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.Int16Value
                                 (GHC.Prim.narrow16Int# (GHC.Prim.uncheckedIShiftRA# dt ww))
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# dt 0) of wild2 {
                                 GHC.Types.False -> $j1 0 GHC.Types.True -> $j1 (-1) } }
                       Futhark.Representation.Primitive.Int32Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# ww 64) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.Int32Value
                                 (GHC.Prim.narrow32Int# (GHC.Prim.uncheckedIShiftRA# dt ww))
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# dt 0) of wild2 {
                                 GHC.Types.False -> $j1 0 GHC.Types.True -> $j1 (-1) } }
                       Futhark.Representation.Primitive.Int64Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# ww 64) of wild1 {
                            GHC.Types.False
                            -> Futhark.Representation.Primitive.Int64Value
                                 (GHC.Prim.uncheckedIShiftRA# dt ww)
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# dt 0) of wild2 {
                                 GHC.Types.False -> $j1 0 GHC.Types.True -> $j1 (-1) } } }
                 } in
                 case v2 of wild {
                   Futhark.Representation.Primitive.Int8Value dt -> $j dt
                   Futhark.Representation.Primitive.Int16Value dt -> $j dt
                   Futhark.Representation.Primitive.Int32Value dt -> $j dt
                   Futhark.Representation.Primitive.Int64Value dt -> $j dt }) -}
96a545a90a0975ce657eaeca4ec27d7e
  doAbs ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ v :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Int# -> Futhark.Representation.Primitive.IntValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Int#[OneShot] ->
                     case v of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> Futhark.Representation.Primitive.Int8Value
                            (GHC.Prim.narrow8Int# ww)
                       Futhark.Representation.Primitive.Int16Value dt
                       -> Futhark.Representation.Primitive.Int16Value
                            (GHC.Prim.narrow16Int# ww)
                       Futhark.Representation.Primitive.Int32Value dt
                       -> Futhark.Representation.Primitive.Int32Value
                            (GHC.Prim.narrow32Int# ww)
                       Futhark.Representation.Primitive.Int64Value dt
                       -> Futhark.Representation.Primitive.Int64Value ww }
                 } in
                 case v of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# dt 0) of wild1 {
                        GHC.Types.False
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.negateInt# dt))
                        GHC.Types.True -> $j dt }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# dt 0) of wild1 {
                        GHC.Types.False
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.negateInt# dt))
                        GHC.Types.True -> $j dt }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# dt 0) of wild1 {
                        GHC.Types.False
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.negateInt# dt))
                        GHC.Types.True -> $j dt }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# dt 0) of wild1 {
                        GHC.Types.False
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.negateInt# dt)
                        GHC.Types.True -> $j dt } }) -}
5826521a83475a4a8af172f264f9c2c1
  doAdd ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.+# dt dt1))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.+# dt dt1))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.+# dt dt1))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.+# dt dt1)) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.+# dt dt1))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.+# dt dt1))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.+# dt dt1))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.+# dt dt1)) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.+# dt dt1))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.+# dt dt1))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.+# dt dt1))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.+# dt dt1)) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int64Value (GHC.Prim.+# dt dt1)
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int64Value (GHC.Prim.+# dt dt1)
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int64Value (GHC.Prim.+# dt dt1)
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.+# dt dt1) } }) -}
304ccf55234457a6e7f2b8b84392076e
  doAnd ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.int2Word# dt1)))) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.int2Word# dt1)))) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.and#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.int2Word# dt1)))) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.and#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.and#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.and#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.and#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.int2Word# dt1))) } }) -}
fa4c00d452192048d54349bfd80e1f95
  doBinOp ::
    Futhark.Representation.Primitive.BinOp
    -> Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue
    -> GHC.Base.Maybe Futhark.Representation.Primitive.PrimValue
  {- Arity: 3, Strictness: <S,1*U><S,1*U><L,1*U> -}
8e822e36076955e40795d9052bbfb8c1
  doCmpEq ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.PrimValue
                   ds1 :: Futhark.Representation.Primitive.PrimValue ->
                 case ds of wild {
                   Futhark.Representation.Primitive.IntValue a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.IntValue b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Int8Value dt
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int8Value dt1
                                  -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1) }
                             Futhark.Representation.Primitive.Int16Value dt
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int16Value dt1
                                  -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1) }
                             Futhark.Representation.Primitive.Int32Value dt
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int32Value dt1
                                  -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1) }
                             Futhark.Representation.Primitive.Int64Value dt
                             -> case b1 of wild3 {
                                  DEFAULT -> GHC.Types.False
                                  Futhark.Representation.Primitive.Int64Value dt1
                                  -> GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt dt1) } } }
                   Futhark.Representation.Primitive.FloatValue a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.FloatValue b1
                        -> case a2 of wild2 {
                             Futhark.Representation.Primitive.Float32Value dt
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32Value dt1
                                  -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.eqFloat# dt dt1)
                                  Futhark.Representation.Primitive.Float64Value ipv
                                  -> GHC.Types.False }
                             Futhark.Representation.Primitive.Float64Value dt
                             -> case b1 of wild3 {
                                  Futhark.Representation.Primitive.Float32Value ipv
                                  -> GHC.Types.False
                                  Futhark.Representation.Primitive.Float64Value dt1
                                  -> GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## dt dt1) } } }
                   Futhark.Representation.Primitive.BoolValue a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.BoolValue b1
                        -> case a2 of wild2 {
                             GHC.Types.False
                             -> case b1 of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False }
                             GHC.Types.True -> b1 } }
                   Futhark.Representation.Primitive.Checked
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Checked -> GHC.Types.True } }) -}
ffd54478907bf09cd0909b367fc3248c
  doCmpOp ::
    Futhark.Representation.Primitive.CmpOp
    -> Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimValue
    -> GHC.Base.Maybe GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,1*U><L,1*U> -}
a1ae23b5d330aae7ec0f83454a1112b3
  doCmpSle ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.IntValue
                   y :: Futhark.Representation.Primitive.IntValue ->
                 case x of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1)
                             GHC.Types.True -> GHC.Types.True } }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int8Value dt1 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1)
                             GHC.Types.True -> GHC.Types.True } }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1)
                             GHC.Types.True -> GHC.Types.True }
                        Futhark.Representation.Primitive.Int64Value dt1 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<# dt dt1) of wild2 {
                             GHC.Types.False
                             -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# dt dt1)
                             GHC.Types.True -> GHC.Types.True } } }) -}
a1ae23b5d330aae7ec0f83454a1112b3
  doCmpSlt ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ x :: Futhark.Representation.Primitive.IntValue
                   y :: Futhark.Representation.Primitive.IntValue ->
                 case x of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# dt dt1) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.True
                        Futhark.Representation.Primitive.Int8Value dt1 -> GHC.Types.False
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# dt dt1) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# dt dt1)
                        Futhark.Representation.Primitive.Int64Value dt1 -> GHC.Types.True }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case y of wild1 {
                        DEFAULT -> GHC.Types.False
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# dt dt1) } }) -}
6a0ee095d1aae255c79b2326651f1ade
  doCmpUle ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.int2Word# dt1)) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.int2Word# dt1)) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.int2Word# dt1)) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.int2Word# dt)
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.int2Word# dt)
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.int2Word# dt)
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord#
                                (GHC.Prim.int2Word# dt)
                                (GHC.Prim.int2Word# dt1)) } }) -}
7e58b4e305c43f573d1bf34365485392
  doCmpUlt ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.int2Word# dt1)) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.int2Word# dt1)) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                (GHC.Prim.int2Word# dt1)) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.int2Word# dt)
                                (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.int2Word# dt)
                                (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.int2Word# dt)
                                (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord#
                                (GHC.Prim.int2Word# dt)
                                (GHC.Prim.int2Word# dt1)) } }) -}
ddee4b5e3edda097d518630a883140da
  doComplement ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ v :: Futhark.Representation.Primitive.IntValue ->
                 case v of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> Futhark.Representation.Primitive.Int8Value
                        (GHC.Prim.narrow8Int#
                           (GHC.Prim.word2Int#
                              (GHC.Prim.xor#
                                 (GHC.Prim.int2Word# dt)
                                 __word 18446744073709551615)))
                   Futhark.Representation.Primitive.Int16Value dt
                   -> Futhark.Representation.Primitive.Int16Value
                        (GHC.Prim.narrow16Int#
                           (GHC.Prim.word2Int#
                              (GHC.Prim.xor#
                                 (GHC.Prim.int2Word# dt)
                                 __word 18446744073709551615)))
                   Futhark.Representation.Primitive.Int32Value dt
                   -> Futhark.Representation.Primitive.Int32Value
                        (GHC.Prim.narrow32Int#
                           (GHC.Prim.word2Int#
                              (GHC.Prim.xor#
                                 (GHC.Prim.int2Word# dt)
                                 __word 18446744073709551615)))
                   Futhark.Representation.Primitive.Int64Value dt
                   -> Futhark.Representation.Primitive.Int64Value
                        (GHC.Prim.word2Int#
                           (GHC.Prim.xor#
                              (GHC.Prim.int2Word# dt)
                              __word 18446744073709551615)) }) -}
bf0d10ddf9aa53ad6a532d7593e196e4
  doConvOp ::
    Futhark.Representation.Primitive.ConvOp
    -> Futhark.Representation.Primitive.PrimValue
    -> GHC.Base.Maybe Futhark.Representation.Primitive.PrimValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
cd732fbbcb85e3be0dbe020e9d5bf31d
  doFAbs ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ v :: Futhark.Representation.Primitive.FloatValue ->
                 let {
                   $j :: GHC.Prim.Double#
                         -> Futhark.Representation.Primitive.FloatValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Double#[OneShot] ->
                     case v of wild {
                       Futhark.Representation.Primitive.Float32Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToFloat ww3 ww4 of dt1 { GHC.Types.F# dt2 ->
                          Futhark.Representation.Primitive.Float32Value dt2 } }
                       Futhark.Representation.Primitive.Float64Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToDouble
                                 ww3
                                 ww4 of dt1 { GHC.Types.D# dt2 ->
                          Futhark.Representation.Primitive.Float64Value dt2 } } }
                 } in
                 case v of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case GHC.Float.$w$ctoRational1 dt of ww2 { (#,#) ww3 ww4 ->
                      case GHC.Float.rationalToDouble
                             ww3
                             ww4 of wild1 { GHC.Types.D# x1 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## x1 0.0) of wild2 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>## x1 0.0) of wild3 {
                             GHC.Types.False -> $j (GHC.Prim.negateDouble# x1)
                             GHC.Types.True -> $j x1 }
                        GHC.Types.True -> $j 0.0 } } }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==## dt 0.0) of wild1 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>## dt 0.0) of wild2 {
                             GHC.Types.False -> $j (GHC.Prim.negateDouble# dt)
                             GHC.Types.True -> $j dt }
                        GHC.Types.True -> $j 0.0 } }) -}
6291457380d2465f615cfb350d75a2ab
  doFAdd ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.FloatValue
                   v2 :: Futhark.Representation.Primitive.FloatValue ->
                 let {
                   $j :: GHC.Prim.Double#
                         -> Futhark.Representation.Primitive.FloatValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Double#[OneShot] ->
                     case v1 of wild {
                       Futhark.Representation.Primitive.Float32Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToFloat ww3 ww4 of dt1 { GHC.Types.F# dt2 ->
                          Futhark.Representation.Primitive.Float32Value dt2 } }
                       Futhark.Representation.Primitive.Float64Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToDouble
                                 ww3
                                 ww4 of dt1 { GHC.Types.D# dt2 ->
                          Futhark.Representation.Primitive.Float64Value dt2 } } }
                 } in
                 case v1 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case GHC.Float.$w$ctoRational1 dt of ww2 { (#,#) ww3 ww4 ->
                      case GHC.Float.rationalToDouble
                             ww3
                             ww4 of wild1 { GHC.Types.D# x ->
                      case v2 of wild2 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww1 { (#,#) ww5 ww6 ->
                           case GHC.Float.rationalToDouble
                                  ww5
                                  ww6 of wild3 { GHC.Types.D# y ->
                           $j (GHC.Prim.+## x y) } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> $j (GHC.Prim.+## x dt1) } } }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww2 { (#,#) ww3 ww4 ->
                           case GHC.Float.rationalToDouble
                                  ww3
                                  ww4 of wild2 { GHC.Types.D# y ->
                           $j (GHC.Prim.+## dt y) } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> $j (GHC.Prim.+## dt dt1) } }) -}
70b046f18760096ae622b1ade242ee60
  doFCmpLe ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatValue
                   b :: Futhark.Representation.Primitive.FloatValue ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.leFloat# dt dt1)
                        Futhark.Representation.Primitive.Float64Value ipv
                        -> GHC.Types.True }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value ipv
                        -> GHC.Types.False
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=## dt dt1) } }) -}
70b046f18760096ae622b1ade242ee60
  doFCmpLt ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a2 :: Futhark.Representation.Primitive.FloatValue
                   b :: Futhark.Representation.Primitive.FloatValue ->
                 case a2 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.ltFloat# dt dt1)
                        Futhark.Representation.Primitive.Float64Value ipv
                        -> GHC.Types.True }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case b of wild1 {
                        Futhark.Representation.Primitive.Float32Value ipv
                        -> GHC.Types.False
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<## dt dt1) } }) -}
be3ce58060afa42ad685d65615465ec4
  doFDiv ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.FloatValue
                   v2 :: Futhark.Representation.Primitive.FloatValue ->
                 let {
                   $j :: GHC.Prim.Double#
                         -> Futhark.Representation.Primitive.FloatValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Double#[OneShot] ->
                     case v1 of wild {
                       Futhark.Representation.Primitive.Float32Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToFloat ww3 ww4 of dt1 { GHC.Types.F# dt2 ->
                          Futhark.Representation.Primitive.Float32Value dt2 } }
                       Futhark.Representation.Primitive.Float64Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToDouble
                                 ww3
                                 ww4 of dt1 { GHC.Types.D# dt2 ->
                          Futhark.Representation.Primitive.Float64Value dt2 } } }
                 } in
                 case v1 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case GHC.Float.$w$ctoRational1 dt of ww2 { (#,#) ww3 ww4 ->
                      case GHC.Float.rationalToDouble
                             ww3
                             ww4 of wild1 { GHC.Types.D# x ->
                      case v2 of wild2 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww1 { (#,#) ww5 ww6 ->
                           case GHC.Float.rationalToDouble
                                  ww5
                                  ww6 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim./## x y of wild4 { DEFAULT -> $j wild4 } } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> case GHC.Prim./## x dt1 of wild3 { DEFAULT -> $j wild3 } } } }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww2 { (#,#) ww3 ww4 ->
                           case GHC.Float.rationalToDouble
                                  ww3
                                  ww4 of wild2 { GHC.Types.D# y ->
                           case GHC.Prim./## dt y of wild3 { DEFAULT -> $j wild3 } } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> case GHC.Prim./## dt dt1 of wild2 { DEFAULT ->
                           $j wild2 } } }) -}
06384dd4faacbe91619fd4101b23f5b3
  doFMul ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.FloatValue
                   v2 :: Futhark.Representation.Primitive.FloatValue ->
                 let {
                   $j :: GHC.Prim.Double#
                         -> Futhark.Representation.Primitive.FloatValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Double#[OneShot] ->
                     case v1 of wild {
                       Futhark.Representation.Primitive.Float32Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToFloat ww3 ww4 of dt1 { GHC.Types.F# dt2 ->
                          Futhark.Representation.Primitive.Float32Value dt2 } }
                       Futhark.Representation.Primitive.Float64Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToDouble
                                 ww3
                                 ww4 of dt1 { GHC.Types.D# dt2 ->
                          Futhark.Representation.Primitive.Float64Value dt2 } } }
                 } in
                 case v1 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case GHC.Float.$w$ctoRational1 dt of ww2 { (#,#) ww3 ww4 ->
                      case GHC.Float.rationalToDouble
                             ww3
                             ww4 of wild1 { GHC.Types.D# x ->
                      case v2 of wild2 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww1 { (#,#) ww5 ww6 ->
                           case GHC.Float.rationalToDouble
                                  ww5
                                  ww6 of wild3 { GHC.Types.D# y ->
                           $j (GHC.Prim.*## x y) } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> $j (GHC.Prim.*## x dt1) } } }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww2 { (#,#) ww3 ww4 ->
                           case GHC.Float.rationalToDouble
                                  ww3
                                  ww4 of wild2 { GHC.Types.D# y ->
                           $j (GHC.Prim.*## dt y) } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> $j (GHC.Prim.*## dt dt1) } }) -}
e9d125e9f91f303bfe61b02b2848d93d
  doFPConv ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.FloatValue
                   ds1 :: Futhark.Representation.Primitive.FloatType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Float32 -> wild
                        Futhark.Representation.Primitive.Float64
                        -> case GHC.Float.$w$ctoRational1 dt of ww2 { (#,#) ww3 ww4 ->
                           case GHC.Float.rationalToDouble
                                  ww3
                                  ww4 of dt1 { GHC.Types.D# dt2 ->
                           Futhark.Representation.Primitive.Float64Value dt2 } } }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Float32
                        -> case GHC.Float.$w$ctoRational dt of ww2 { (#,#) ww3 ww4 ->
                           case GHC.Float.rationalToFloat ww3 ww4 of dt1 { GHC.Types.F# dt2 ->
                           Futhark.Representation.Primitive.Float32Value dt2 } }
                        Futhark.Representation.Primitive.Float64 -> wild } }) -}
5b213cba8996eb861d2a0aa5501340a6
  doFPToSI ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ v :: Futhark.Representation.Primitive.FloatValue
                   t :: Futhark.Representation.Primitive.IntType ->
                 case v of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case GHC.Float.$w$ctoRational1 dt of ww2 { (#,#) ww3 ww4 ->
                      case GHC.Float.rationalToDouble ww3 ww4 of ww { GHC.Types.D# ww1 ->
                      case GHC.Float.$w$cproperFraction
                             @ GHC.Word.Word64
                             GHC.Word.$fIntegralWord64
                             ww1 of ww7 { (#,#) ww8 ww9 ->
                      case ww8 of ww10 { GHC.Word.W64# ww11 ->
                      Futhark.Representation.Primitive.$w$sintValue t ww11 } } } }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case GHC.Float.$w$cproperFraction
                             @ GHC.Word.Word64
                             GHC.Word.$fIntegralWord64
                             dt of ww2 { (#,#) ww3 ww4 ->
                      case ww3 of ww { GHC.Word.W64# ww1 ->
                      Futhark.Representation.Primitive.$w$sintValue t ww1 } } }) -}
9e35165644e0244891a5c56066f34bf2
  doFPToUI ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (Futhark.Representation.Primitive.doFPToSI) -}
39d27634b9964a744d1aa60e9f3b747b
  doFPow ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.FloatValue
                   v2 :: Futhark.Representation.Primitive.FloatValue ->
                 let {
                   $j :: GHC.Prim.Double#
                         -> Futhark.Representation.Primitive.FloatValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Double#[OneShot] ->
                     case v1 of wild {
                       Futhark.Representation.Primitive.Float32Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToFloat ww3 ww4 of dt1 { GHC.Types.F# dt2 ->
                          Futhark.Representation.Primitive.Float32Value dt2 } }
                       Futhark.Representation.Primitive.Float64Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToDouble
                                 ww3
                                 ww4 of dt1 { GHC.Types.D# dt2 ->
                          Futhark.Representation.Primitive.Float64Value dt2 } } }
                 } in
                 case v1 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case GHC.Float.$w$ctoRational1 dt of ww2 { (#,#) ww3 ww4 ->
                      case GHC.Float.rationalToDouble
                             ww3
                             ww4 of wild1 { GHC.Types.D# x ->
                      case v2 of wild2 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww1 { (#,#) ww5 ww6 ->
                           case GHC.Float.rationalToDouble
                                  ww5
                                  ww6 of wild3 { GHC.Types.D# y ->
                           $j (GHC.Prim.**## x y) } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> $j (GHC.Prim.**## x dt1) } } }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww2 { (#,#) ww3 ww4 ->
                           case GHC.Float.rationalToDouble
                                  ww3
                                  ww4 of wild2 { GHC.Types.D# y ->
                           $j (GHC.Prim.**## dt y) } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> $j (GHC.Prim.**## dt dt1) } }) -}
6664bee70a2a5285f78694630c15ab5e
  doFSub ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.FloatValue
                   v2 :: Futhark.Representation.Primitive.FloatValue ->
                 let {
                   $j :: GHC.Prim.Double#
                         -> Futhark.Representation.Primitive.FloatValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Double#[OneShot] ->
                     case v1 of wild {
                       Futhark.Representation.Primitive.Float32Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToFloat ww3 ww4 of dt1 { GHC.Types.F# dt2 ->
                          Futhark.Representation.Primitive.Float32Value dt2 } }
                       Futhark.Representation.Primitive.Float64Value dt
                       -> case GHC.Float.$w$ctoRational ww of ww2 { (#,#) ww3 ww4 ->
                          case GHC.Float.rationalToDouble
                                 ww3
                                 ww4 of dt1 { GHC.Types.D# dt2 ->
                          Futhark.Representation.Primitive.Float64Value dt2 } } }
                 } in
                 case v1 of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> case GHC.Float.$w$ctoRational1 dt of ww2 { (#,#) ww3 ww4 ->
                      case GHC.Float.rationalToDouble
                             ww3
                             ww4 of wild1 { GHC.Types.D# x ->
                      case v2 of wild2 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww1 { (#,#) ww5 ww6 ->
                           case GHC.Float.rationalToDouble
                                  ww5
                                  ww6 of wild3 { GHC.Types.D# y ->
                           $j (GHC.Prim.-## x y) } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> $j (GHC.Prim.-## x dt1) } } }
                   Futhark.Representation.Primitive.Float64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt1
                        -> case GHC.Float.$w$ctoRational1 dt1 of ww2 { (#,#) ww3 ww4 ->
                           case GHC.Float.rationalToDouble
                                  ww3
                                  ww4 of wild2 { GHC.Types.D# y ->
                           $j (GHC.Prim.-## dt y) } }
                        Futhark.Representation.Primitive.Float64Value dt1
                        -> $j (GHC.Prim.-## dt dt1) } }) -}
bfd796f24121e99a0af9c34c57369787
  doLShr ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Word# -> Futhark.Representation.Primitive.IntValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Word#[OneShot] ->
                     case v1 of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> Futhark.Representation.Primitive.Int8Value
                            (GHC.Prim.narrow8Int# (GHC.Prim.word2Int# ww))
                       Futhark.Representation.Primitive.Int16Value dt
                       -> Futhark.Representation.Primitive.Int16Value
                            (GHC.Prim.narrow16Int# (GHC.Prim.word2Int# ww))
                       Futhark.Representation.Primitive.Int32Value dt
                       -> Futhark.Representation.Primitive.Int32Value
                            (GHC.Prim.narrow32Int# (GHC.Prim.word2Int# ww))
                       Futhark.Representation.Primitive.Int64Value dt
                       -> Futhark.Representation.Primitive.Int64Value
                            (GHC.Prim.word2Int# ww) }
                 } in
                 let {
                   $w$j :: GHC.Prim.Word# -> GHC.Prim.Word#
                     {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                   = \ w :: GHC.Prim.Word#[OneShot] ->
                     case v2 of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# dt 64) of wild2 {
                            GHC.Types.False -> GHC.Prim.uncheckedShiftRL# w dt
                            GHC.Types.True -> __word 0 }
                       Futhark.Representation.Primitive.Int16Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# dt 64) of wild2 {
                            GHC.Types.False -> GHC.Prim.uncheckedShiftRL# w dt
                            GHC.Types.True -> __word 0 }
                       Futhark.Representation.Primitive.Int32Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# dt 64) of wild2 {
                            GHC.Types.False -> GHC.Prim.uncheckedShiftRL# w dt
                            GHC.Types.True -> __word 0 }
                       Futhark.Representation.Primitive.Int64Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# dt 64) of wild2 {
                            GHC.Types.False -> GHC.Prim.uncheckedShiftRL# w dt
                            GHC.Types.True -> __word 0 } }
                 } in
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case $w$j
                             (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt)) of ww { DEFAULT ->
                      $j ww }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case $w$j
                             (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt)) of ww { DEFAULT ->
                      $j ww }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case $w$j
                             (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt)) of ww { DEFAULT ->
                      $j ww }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case $w$j (GHC.Prim.int2Word# dt) of ww { DEFAULT ->
                      $j ww } }) -}
5e1d74ab2077dcc160a2bc6fbbe547c7
  doMul ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.*# dt dt1))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.*# dt dt1))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.*# dt dt1))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.*# dt dt1)) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.*# dt dt1))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.*# dt dt1))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.*# dt dt1))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.*# dt dt1)) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.*# dt dt1))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.*# dt dt1))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.*# dt dt1))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.*# dt dt1)) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int64Value (GHC.Prim.*# dt dt1)
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int64Value (GHC.Prim.*# dt dt1)
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int64Value (GHC.Prim.*# dt dt1)
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.*# dt dt1) } }) -}
c24995506b6a1073225f394036fc4f59
  doOr ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.int2Word# dt1)))) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.int2Word# dt1)))) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.or#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.int2Word# dt1)))) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.or#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.or#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.or#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.or#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.int2Word# dt1))) } }) -}
4e99283344b050089f8872a42532b7a3
  doPow ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Int# -> Futhark.Representation.Primitive.IntValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Int#[OneShot] ->
                     case v1 of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> Futhark.Representation.Primitive.Int8Value
                            (GHC.Prim.narrow8Int# ww)
                       Futhark.Representation.Primitive.Int16Value dt
                       -> Futhark.Representation.Primitive.Int16Value
                            (GHC.Prim.narrow16Int# ww)
                       Futhark.Representation.Primitive.Int32Value dt
                       -> Futhark.Representation.Primitive.Int32Value
                            (GHC.Prim.narrow32Int# ww)
                       Futhark.Representation.Primitive.Int64Value dt
                       -> Futhark.Representation.Primitive.Int64Value ww }
                 } in
                 let {
                   $w$j :: GHC.Prim.Int# -> GHC.Int.Int64 -> GHC.Prim.Int#
                     {- Arity: 2, Strictness: <S,U><L,U(U)>, Inline: [0] -}
                   = \ w :: GHC.Prim.Int#[OneShot] w1 :: GHC.Int.Int64[OneShot] ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<# w 0) of wild {
                       GHC.Types.False
                       -> case w of wild1 {
                            DEFAULT
                            -> case v1 of wild2 {
                                 Futhark.Representation.Primitive.Int8Value dt
                                 -> case w1 of ww { GHC.Int.I64# ww1 ->
                                    Futhark.Representation.Primitive.$wf dt ww1 }
                                 Futhark.Representation.Primitive.Int16Value dt
                                 -> case w1 of ww { GHC.Int.I64# ww1 ->
                                    Futhark.Representation.Primitive.$wf dt ww1 }
                                 Futhark.Representation.Primitive.Int32Value dt
                                 -> case w1 of ww { GHC.Int.I64# ww1 ->
                                    Futhark.Representation.Primitive.$wf dt ww1 }
                                 Futhark.Representation.Primitive.Int64Value dt
                                 -> case w1 of ww { GHC.Int.I64# ww1 ->
                                    Futhark.Representation.Primitive.$wf dt ww1 } }
                            0 -> 1 }
                       GHC.Types.True
                       -> case Futhark.Representation.Primitive.$s^1
                          ret_ty GHC.Prim.Int#
                          of {} }
                 } in
                 case v2 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case $w$j dt (GHC.Int.I64# dt) of ww { DEFAULT -> $j ww }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case $w$j dt (GHC.Int.I64# dt) of ww { DEFAULT -> $j ww }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case $w$j dt (GHC.Int.I64# dt) of ww { DEFAULT -> $j ww }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case $w$j dt (GHC.Int.I64# dt) of ww { DEFAULT -> $j ww } }) -}
35c1ba9a3e569d77c7b03d901a466cd3
  doSDiv ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Void#
                         -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ w :: GHC.Prim.Void#[OneShot] ->
                     GHC.Base.Just
                       @ Futhark.Representation.Primitive.IntValue
                       (let {
                          $j1 :: GHC.Prim.Int# -> Futhark.Representation.Primitive.IntValue
                            {- Arity: 1 -}
                          = \ ww :: GHC.Prim.Int#[OneShot] ->
                            let {
                              $j2 :: GHC.Prim.Int# -> Futhark.Representation.Primitive.IntValue
                                {- Arity: 1 -}
                              = \ ww1 :: GHC.Prim.Int#[OneShot] ->
                                case v1 of wild {
                                  Futhark.Representation.Primitive.Int8Value dt
                                  -> Futhark.Representation.Primitive.Int8Value
                                       (GHC.Prim.narrow8Int# ww1)
                                  Futhark.Representation.Primitive.Int16Value dt
                                  -> Futhark.Representation.Primitive.Int16Value
                                       (GHC.Prim.narrow16Int# ww1)
                                  Futhark.Representation.Primitive.Int32Value dt
                                  -> Futhark.Representation.Primitive.Int32Value
                                       (GHC.Prim.narrow32Int# ww1)
                                  Futhark.Representation.Primitive.Int64Value dt
                                  -> Futhark.Representation.Primitive.Int64Value ww1 }
                            } in
                            case v1 of wild {
                              Futhark.Representation.Primitive.Int8Value dt
                              -> case GHC.Int.$w$cdiv2 dt ww of ww4 { DEFAULT -> $j2 ww4 }
                              Futhark.Representation.Primitive.Int16Value dt
                              -> case GHC.Int.$w$cdiv2 dt ww of ww4 { DEFAULT -> $j2 ww4 }
                              Futhark.Representation.Primitive.Int32Value dt
                              -> case GHC.Int.$w$cdiv2 dt ww of ww4 { DEFAULT -> $j2 ww4 }
                              Futhark.Representation.Primitive.Int64Value dt
                              -> case GHC.Int.$w$cdiv2 dt ww of ww4 { DEFAULT -> $j2 ww4 } }
                        } in
                        case v2 of wild {
                          Futhark.Representation.Primitive.Int8Value dt -> $j1 dt
                          Futhark.Representation.Primitive.Int16Value dt -> $j1 dt
                          Futhark.Representation.Primitive.Int32Value dt -> $j1 dt
                          Futhark.Representation.Primitive.Int64Value dt -> $j1 dt })
                 } in
                 case v2 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0
                        -> GHC.Base.Nothing
                             @ Futhark.Representation.Primitive.IntValue } }) -}
2afc0471888f9a4d72f62d2841a2e274
  doSExt ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.IntValue
                   t :: Futhark.Representation.Primitive.IntType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> Futhark.Representation.Primitive.doSExt_$sintValue
                        t
                        (GHC.Integer.Type.smallInteger dt)
                   Futhark.Representation.Primitive.Int16Value dt
                   -> Futhark.Representation.Primitive.doSExt_$sintValue
                        t
                        (GHC.Integer.Type.smallInteger dt)
                   Futhark.Representation.Primitive.Int32Value dt
                   -> Futhark.Representation.Primitive.doSExt_$sintValue
                        t
                        (GHC.Integer.Type.smallInteger dt)
                   Futhark.Representation.Primitive.Int64Value dt
                   -> Futhark.Representation.Primitive.doSExt_$sintValue
                        t
                        (GHC.Integer.Type.smallInteger dt) }) -}
f8242050dc86c7446569dde2e560977b
  doSExt_$sintValue ::
    Futhark.Representation.Primitive.IntType
    -> GHC.Integer.Type.Integer
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.IntType
                   eta :: GHC.Integer.Type.Integer ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case GHC.Integer.Type.integerToInt eta of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int8Value
                        (GHC.Prim.narrow8Int# wild1) }
                   Futhark.Representation.Primitive.Int16
                   -> case GHC.Integer.Type.integerToInt eta of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int16Value
                        (GHC.Prim.narrow16Int# wild1) }
                   Futhark.Representation.Primitive.Int32
                   -> case GHC.Integer.Type.integerToInt eta of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int32Value
                        (GHC.Prim.narrow32Int# wild1) }
                   Futhark.Representation.Primitive.Int64
                   -> case GHC.Integer.Type.integerToInt eta of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int64Value wild1 } }) -}
b443bc237c24fd3678e0214c6637dbea
  doSIToFP ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, Strictness: <L,1*U><S,1*U>,
     Unfolding: (\ v :: Futhark.Representation.Primitive.IntValue
                   t :: Futhark.Representation.Primitive.FloatType ->
                 let {
                   eta :: GHC.Int.Int64
                   = case v of wild {
                       Futhark.Representation.Primitive.Int8Value dt -> GHC.Int.I64# dt
                       Futhark.Representation.Primitive.Int16Value dt -> GHC.Int.I64# dt
                       Futhark.Representation.Primitive.Int32Value dt -> GHC.Int.I64# dt
                       Futhark.Representation.Primitive.Int64Value dt -> GHC.Int.I64# dt }
                 } in
                 case t of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case GHC.Int.$w$ctoRational2 eta of ww { (#,#) ww1 ww2 ->
                      case GHC.Float.rationalToFloat ww1 ww2 of dt { GHC.Types.F# dt1 ->
                      Futhark.Representation.Primitive.Float32Value dt1 } }
                   Futhark.Representation.Primitive.Float64
                   -> case GHC.Int.$w$ctoRational2 eta of ww { (#,#) ww1 ww2 ->
                      case GHC.Float.rationalToDouble ww1 ww2 of dt { GHC.Types.D# dt1 ->
                      Futhark.Representation.Primitive.Float64Value dt1 } } }) -}
aa8a2cc64f6e2a0676aa30cf326637ef
  doSMod ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <L,U><S,U> -}
577ec0539aeb63ae531d22e80290e8e3
  doSQuot ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <L,U><S,U> -}
521da9e967625e00d0642579808e3d78
  doSRem ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Void#
                         -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ w :: GHC.Prim.Void#[OneShot] ->
                     GHC.Base.Just
                       @ Futhark.Representation.Primitive.IntValue
                       (let {
                          $j1 :: GHC.Prim.Int# -> Futhark.Representation.Primitive.IntValue
                            {- Arity: 1 -}
                          = \ ww :: GHC.Prim.Int#[OneShot] ->
                            case v1 of wild {
                              Futhark.Representation.Primitive.Int8Value dt
                              -> Futhark.Representation.Primitive.Int8Value
                                   (GHC.Prim.narrow8Int# ww)
                              Futhark.Representation.Primitive.Int16Value dt
                              -> Futhark.Representation.Primitive.Int16Value
                                   (GHC.Prim.narrow16Int# ww)
                              Futhark.Representation.Primitive.Int32Value dt
                              -> Futhark.Representation.Primitive.Int32Value
                                   (GHC.Prim.narrow32Int# ww)
                              Futhark.Representation.Primitive.Int64Value dt
                              -> Futhark.Representation.Primitive.Int64Value ww }
                        } in
                        let {
                          $w$j :: GHC.Prim.Int# -> GHC.Prim.Int#
                            {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                          = \ w1 :: GHC.Prim.Int#[OneShot] ->
                            case v2 of wild {
                              Futhark.Representation.Primitive.Int8Value dt
                              -> case dt of wild2 {
                                   DEFAULT -> GHC.Prim.remInt# w1 wild2
                                   (-1) -> 0
                                   0 -> case GHC.Real.divZeroError ret_ty GHC.Prim.Int# of {} }
                              Futhark.Representation.Primitive.Int16Value dt
                              -> case dt of wild2 {
                                   DEFAULT -> GHC.Prim.remInt# w1 wild2
                                   (-1) -> 0
                                   0 -> case GHC.Real.divZeroError ret_ty GHC.Prim.Int# of {} }
                              Futhark.Representation.Primitive.Int32Value dt
                              -> case dt of wild2 {
                                   DEFAULT -> GHC.Prim.remInt# w1 wild2
                                   (-1) -> 0
                                   0 -> case GHC.Real.divZeroError ret_ty GHC.Prim.Int# of {} }
                              Futhark.Representation.Primitive.Int64Value dt
                              -> case dt of wild2 {
                                   DEFAULT -> GHC.Prim.remInt# w1 wild2
                                   (-1) -> 0
                                   0 -> case GHC.Real.divZeroError ret_ty GHC.Prim.Int# of {} } }
                        } in
                        case v1 of wild {
                          Futhark.Representation.Primitive.Int8Value dt
                          -> case $w$j dt of ww { DEFAULT -> $j1 ww }
                          Futhark.Representation.Primitive.Int16Value dt
                          -> case $w$j dt of ww { DEFAULT -> $j1 ww }
                          Futhark.Representation.Primitive.Int32Value dt
                          -> case $w$j dt of ww { DEFAULT -> $j1 ww }
                          Futhark.Representation.Primitive.Int64Value dt
                          -> case $w$j dt of ww { DEFAULT -> $j1 ww } })
                 } in
                 case v2 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0
                        -> GHC.Base.Nothing
                             @ Futhark.Representation.Primitive.IntValue } }) -}
f18230bed502a35ec6d7ba7daa3ad83f
  doSSignum ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ v :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Int# -> Futhark.Representation.Primitive.IntValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Int#[OneShot] ->
                     case v of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> Futhark.Representation.Primitive.Int8Value
                            (GHC.Prim.narrow8Int# ww)
                       Futhark.Representation.Primitive.Int16Value dt
                       -> Futhark.Representation.Primitive.Int16Value
                            (GHC.Prim.narrow16Int# ww)
                       Futhark.Representation.Primitive.Int32Value dt
                       -> Futhark.Representation.Primitive.Int32Value
                            (GHC.Prim.narrow32Int# ww)
                       Futhark.Representation.Primitive.Int64Value dt
                       -> Futhark.Representation.Primitive.Int64Value ww }
                 } in
                 case v of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># dt 0) of wild1 {
                        GHC.Types.False
                        -> case dt of wild2 { DEFAULT -> $j (-1) 0 -> $j 0 }
                        GHC.Types.True -> $j 1 }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># dt 0) of wild1 {
                        GHC.Types.False
                        -> case dt of wild2 { DEFAULT -> $j (-1) 0 -> $j 0 }
                        GHC.Types.True -> $j 1 }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># dt 0) of wild1 {
                        GHC.Types.False
                        -> case dt of wild2 { DEFAULT -> $j (-1) 0 -> $j 0 }
                        GHC.Types.True -> $j 1 }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># dt 0) of wild1 {
                        GHC.Types.False
                        -> case dt of wild2 { DEFAULT -> $j (-1) 0 -> $j 0 }
                        GHC.Types.True -> $j 1 } }) -}
0214536e9c0f4f73a59ed5e3633f7510
  doShl ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Int# -> Futhark.Representation.Primitive.IntValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Int#[OneShot] ->
                     case v1 of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> Futhark.Representation.Primitive.Int8Value
                            (GHC.Prim.narrow8Int# ww)
                       Futhark.Representation.Primitive.Int16Value dt
                       -> Futhark.Representation.Primitive.Int16Value
                            (GHC.Prim.narrow16Int# ww)
                       Futhark.Representation.Primitive.Int32Value dt
                       -> Futhark.Representation.Primitive.Int32Value
                            (GHC.Prim.narrow32Int# ww)
                       Futhark.Representation.Primitive.Int64Value dt
                       -> Futhark.Representation.Primitive.Int64Value ww }
                 } in
                 let {
                   $w$j :: GHC.Prim.Int# -> GHC.Prim.Int#
                     {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                   = \ w :: GHC.Prim.Int#[OneShot] ->
                     case v2 of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# dt 64) of wild2 {
                            GHC.Types.False -> GHC.Prim.uncheckedIShiftL# w dt
                            GHC.Types.True -> 0 }
                       Futhark.Representation.Primitive.Int16Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# dt 64) of wild2 {
                            GHC.Types.False -> GHC.Prim.uncheckedIShiftL# w dt
                            GHC.Types.True -> 0 }
                       Futhark.Representation.Primitive.Int32Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# dt 64) of wild2 {
                            GHC.Types.False -> GHC.Prim.uncheckedIShiftL# w dt
                            GHC.Types.True -> 0 }
                       Futhark.Representation.Primitive.Int64Value dt
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# dt 64) of wild2 {
                            GHC.Types.False -> GHC.Prim.uncheckedIShiftL# w dt
                            GHC.Types.True -> 0 } }
                 } in
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case $w$j dt of ww { DEFAULT -> $j ww }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case $w$j dt of ww { DEFAULT -> $j ww }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case $w$j dt of ww { DEFAULT -> $j ww }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case $w$j dt of ww { DEFAULT -> $j ww } }) -}
38b69d950c879ae394a0ee70dfd1150a
  doSub ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.-# dt dt1))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.-# dt dt1))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.-# dt dt1))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int# (GHC.Prim.-# dt dt1)) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.-# dt dt1))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.-# dt dt1))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.-# dt dt1))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int# (GHC.Prim.-# dt dt1)) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.-# dt dt1))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.-# dt dt1))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.-# dt dt1))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int# (GHC.Prim.-# dt dt1)) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int64Value (GHC.Prim.-# dt dt1)
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int64Value (GHC.Prim.-# dt dt1)
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int64Value (GHC.Prim.-# dt dt1)
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.-# dt dt1) } }) -}
bb9be04d8ad3530942d0bbd7ceb9aa3f
  doUDiv ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Void#
                         -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ w :: GHC.Prim.Void#[OneShot] ->
                     GHC.Base.Just
                       @ Futhark.Representation.Primitive.IntValue
                       (let {
                          $j1 :: GHC.Prim.Word# -> Futhark.Representation.Primitive.IntValue
                            {- Arity: 1 -}
                          = \ ww :: GHC.Prim.Word#[OneShot] ->
                            case v1 of wild {
                              Futhark.Representation.Primitive.Int8Value dt
                              -> Futhark.Representation.Primitive.Int8Value
                                   (GHC.Prim.narrow8Int# (GHC.Prim.word2Int# ww))
                              Futhark.Representation.Primitive.Int16Value dt
                              -> Futhark.Representation.Primitive.Int16Value
                                   (GHC.Prim.narrow16Int# (GHC.Prim.word2Int# ww))
                              Futhark.Representation.Primitive.Int32Value dt
                              -> Futhark.Representation.Primitive.Int32Value
                                   (GHC.Prim.narrow32Int# (GHC.Prim.word2Int# ww))
                              Futhark.Representation.Primitive.Int64Value dt
                              -> Futhark.Representation.Primitive.Int64Value
                                   (GHC.Prim.word2Int# ww) }
                        } in
                        let {
                          $w$j :: GHC.Prim.Word# -> GHC.Prim.Word#
                            {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                          = \ w1 :: GHC.Prim.Word#[OneShot] ->
                            case v2 of wild {
                              Futhark.Representation.Primitive.Int8Value dt
                              -> case GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt) of wild2 {
                                   DEFAULT -> GHC.Prim.quotWord# w1 wild2
                                   __word 0
                                   -> case GHC.Real.divZeroError ret_ty GHC.Prim.Word# of {} }
                              Futhark.Representation.Primitive.Int16Value dt
                              -> case GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt) of wild2 {
                                   DEFAULT -> GHC.Prim.quotWord# w1 wild2
                                   __word 0
                                   -> case GHC.Real.divZeroError ret_ty GHC.Prim.Word# of {} }
                              Futhark.Representation.Primitive.Int32Value dt
                              -> case GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt) of wild2 {
                                   DEFAULT -> GHC.Prim.quotWord# w1 wild2
                                   __word 0
                                   -> case GHC.Real.divZeroError ret_ty GHC.Prim.Word# of {} }
                              Futhark.Representation.Primitive.Int64Value dt
                              -> case GHC.Prim.int2Word# dt of wild2 {
                                   DEFAULT -> GHC.Prim.quotWord# w1 wild2
                                   __word 0
                                   -> case GHC.Real.divZeroError ret_ty GHC.Prim.Word# of {} } }
                        } in
                        case v1 of wild {
                          Futhark.Representation.Primitive.Int8Value dt
                          -> case $w$j
                                    (GHC.Prim.narrow8Word#
                                       (GHC.Prim.int2Word# dt)) of ww { DEFAULT ->
                             $j1 ww }
                          Futhark.Representation.Primitive.Int16Value dt
                          -> case $w$j
                                    (GHC.Prim.narrow16Word#
                                       (GHC.Prim.int2Word# dt)) of ww { DEFAULT ->
                             $j1 ww }
                          Futhark.Representation.Primitive.Int32Value dt
                          -> case $w$j
                                    (GHC.Prim.narrow32Word#
                                       (GHC.Prim.int2Word# dt)) of ww { DEFAULT ->
                             $j1 ww }
                          Futhark.Representation.Primitive.Int64Value dt
                          -> case $w$j (GHC.Prim.int2Word# dt) of ww { DEFAULT -> $j1 ww } })
                 } in
                 case v2 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0
                        -> GHC.Base.Nothing
                             @ Futhark.Representation.Primitive.IntValue } }) -}
da5d13cb2c536b7174d79a807dd7a568
  doUIToFP ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.FloatType
    -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 2, Strictness: <L,1*U><S,1*U>,
     Unfolding: (\ v :: Futhark.Representation.Primitive.IntValue
                   t :: Futhark.Representation.Primitive.FloatType ->
                 let {
                   eta :: GHC.Word.Word64
                   = case v of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> GHC.Word.W64# (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                       Futhark.Representation.Primitive.Int16Value dt
                       -> GHC.Word.W64# (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                       Futhark.Representation.Primitive.Int32Value dt
                       -> GHC.Word.W64# (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                       Futhark.Representation.Primitive.Int64Value dt
                       -> GHC.Word.W64# (GHC.Prim.int2Word# dt) }
                 } in
                 case t of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case GHC.Word.$w$ctoRational2 eta of ww { (#,#) ww1 ww2 ->
                      case GHC.Float.rationalToFloat ww1 ww2 of dt { GHC.Types.F# dt1 ->
                      Futhark.Representation.Primitive.Float32Value dt1 } }
                   Futhark.Representation.Primitive.Float64
                   -> case GHC.Word.$w$ctoRational2 eta of ww { (#,#) ww1 ww2 ->
                      case GHC.Float.rationalToDouble ww1 ww2 of dt { GHC.Types.D# dt1 ->
                      Futhark.Representation.Primitive.Float64Value dt1 } } }) -}
e031776313e0c0896dab61883db9c2d1
  doUMod ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Void#
                         -> GHC.Base.Maybe Futhark.Representation.Primitive.IntValue
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ w :: GHC.Prim.Void#[OneShot] ->
                     GHC.Base.Just
                       @ Futhark.Representation.Primitive.IntValue
                       (let {
                          $j1 :: GHC.Prim.Word# -> Futhark.Representation.Primitive.IntValue
                            {- Arity: 1 -}
                          = \ ww :: GHC.Prim.Word#[OneShot] ->
                            case v1 of wild {
                              Futhark.Representation.Primitive.Int8Value dt
                              -> Futhark.Representation.Primitive.Int8Value
                                   (GHC.Prim.narrow8Int# (GHC.Prim.word2Int# ww))
                              Futhark.Representation.Primitive.Int16Value dt
                              -> Futhark.Representation.Primitive.Int16Value
                                   (GHC.Prim.narrow16Int# (GHC.Prim.word2Int# ww))
                              Futhark.Representation.Primitive.Int32Value dt
                              -> Futhark.Representation.Primitive.Int32Value
                                   (GHC.Prim.narrow32Int# (GHC.Prim.word2Int# ww))
                              Futhark.Representation.Primitive.Int64Value dt
                              -> Futhark.Representation.Primitive.Int64Value
                                   (GHC.Prim.word2Int# ww) }
                        } in
                        let {
                          $w$j :: GHC.Prim.Word# -> GHC.Prim.Word#
                            {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                          = \ w1 :: GHC.Prim.Word#[OneShot] ->
                            case v2 of wild {
                              Futhark.Representation.Primitive.Int8Value dt
                              -> case GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt) of wild2 {
                                   DEFAULT -> GHC.Prim.remWord# w1 wild2
                                   __word 0
                                   -> case GHC.Real.divZeroError ret_ty GHC.Prim.Word# of {} }
                              Futhark.Representation.Primitive.Int16Value dt
                              -> case GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt) of wild2 {
                                   DEFAULT -> GHC.Prim.remWord# w1 wild2
                                   __word 0
                                   -> case GHC.Real.divZeroError ret_ty GHC.Prim.Word# of {} }
                              Futhark.Representation.Primitive.Int32Value dt
                              -> case GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt) of wild2 {
                                   DEFAULT -> GHC.Prim.remWord# w1 wild2
                                   __word 0
                                   -> case GHC.Real.divZeroError ret_ty GHC.Prim.Word# of {} }
                              Futhark.Representation.Primitive.Int64Value dt
                              -> case GHC.Prim.int2Word# dt of wild2 {
                                   DEFAULT -> GHC.Prim.remWord# w1 wild2
                                   __word 0
                                   -> case GHC.Real.divZeroError ret_ty GHC.Prim.Word# of {} } }
                        } in
                        case v1 of wild {
                          Futhark.Representation.Primitive.Int8Value dt
                          -> case $w$j
                                    (GHC.Prim.narrow8Word#
                                       (GHC.Prim.int2Word# dt)) of ww { DEFAULT ->
                             $j1 ww }
                          Futhark.Representation.Primitive.Int16Value dt
                          -> case $w$j
                                    (GHC.Prim.narrow16Word#
                                       (GHC.Prim.int2Word# dt)) of ww { DEFAULT ->
                             $j1 ww }
                          Futhark.Representation.Primitive.Int32Value dt
                          -> case $w$j
                                    (GHC.Prim.narrow32Word#
                                       (GHC.Prim.int2Word# dt)) of ww { DEFAULT ->
                             $j1 ww }
                          Futhark.Representation.Primitive.Int64Value dt
                          -> case $w$j (GHC.Prim.int2Word# dt) of ww { DEFAULT -> $j1 ww } })
                 } in
                 case v2 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0 -> GHC.Base.Nothing @ Futhark.Representation.Primitive.IntValue }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case dt of wild1 {
                        DEFAULT -> $j GHC.Prim.void#
                        0
                        -> GHC.Base.Nothing
                             @ Futhark.Representation.Primitive.IntValue } }) -}
d42b698af4f298c7670c7b692bd856b8
  doUSignum ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ v :: Futhark.Representation.Primitive.IntValue ->
                 let {
                   $j :: GHC.Prim.Word# -> Futhark.Representation.Primitive.IntValue
                     {- Arity: 1 -}
                   = \ ww :: GHC.Prim.Word#[OneShot] ->
                     case v of wild {
                       Futhark.Representation.Primitive.Int8Value dt
                       -> Futhark.Representation.Primitive.Int8Value
                            (GHC.Prim.narrow8Int# (GHC.Prim.word2Int# ww))
                       Futhark.Representation.Primitive.Int16Value dt
                       -> Futhark.Representation.Primitive.Int16Value
                            (GHC.Prim.narrow16Int# (GHC.Prim.word2Int# ww))
                       Futhark.Representation.Primitive.Int32Value dt
                       -> Futhark.Representation.Primitive.Int32Value
                            (GHC.Prim.narrow32Int# (GHC.Prim.word2Int# ww))
                       Futhark.Representation.Primitive.Int64Value dt
                       -> Futhark.Representation.Primitive.Int64Value
                            (GHC.Prim.word2Int# ww) }
                 } in
                 case v of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt) of wild1 {
                        DEFAULT -> $j __word 1 __word 0 -> $j __word 0 }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt) of wild1 {
                        DEFAULT -> $j __word 1 __word 0 -> $j __word 0 }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt) of wild1 {
                        DEFAULT -> $j __word 1 __word 0 -> $j __word 0 }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case GHC.Prim.int2Word# dt of wild1 {
                        DEFAULT -> $j __word 1 __word 0 -> $j __word 0 } }) -}
cf5bb1c0b0134ae12300102ded7c7b01
  doUnOp ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.PrimValue
    -> GHC.Base.Maybe Futhark.Representation.Primitive.PrimValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
91bec8e9892256d63d02b87f87bd1c80
  doXor ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U>,
     Unfolding: (\ v1 :: Futhark.Representation.Primitive.IntValue
                   v2 :: Futhark.Representation.Primitive.IntValue ->
                 case v1 of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int8Value
                             (GHC.Prim.narrow8Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.int2Word# dt1)))) }
                   Futhark.Representation.Primitive.Int16Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int16Value
                             (GHC.Prim.narrow16Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.int2Word# dt1)))) }
                   Futhark.Representation.Primitive.Int32Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1)))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int32Value
                             (GHC.Prim.narrow32Int#
                                (GHC.Prim.word2Int#
                                   (GHC.Prim.xor#
                                      (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))
                                      (GHC.Prim.int2Word# dt1)))) }
                   Futhark.Representation.Primitive.Int64Value dt
                   -> case v2 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.xor#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt1))))
                        Futhark.Representation.Primitive.Int16Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.xor#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt1))))
                        Futhark.Representation.Primitive.Int32Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.xor#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt1))))
                        Futhark.Representation.Primitive.Int64Value dt1
                        -> Futhark.Representation.Primitive.Int64Value
                             (GHC.Prim.word2Int#
                                (GHC.Prim.xor#
                                   (GHC.Prim.int2Word# dt)
                                   (GHC.Prim.int2Word# dt1))) } }) -}
8905904c93d9638f6412709cd4bec480
  doZExt ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntType
    -> Futhark.Representation.Primitive.IntValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.IntValue
                   t :: Futhark.Representation.Primitive.IntType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> Futhark.Representation.Primitive.doSExt_$sintValue
                        t
                        (GHC.Integer.Type.smallInteger
                           (GHC.Prim.word2Int#
                              (GHC.Prim.narrow8Word# (GHC.Prim.int2Word# dt))))
                   Futhark.Representation.Primitive.Int16Value dt
                   -> Futhark.Representation.Primitive.doSExt_$sintValue
                        t
                        (GHC.Integer.Type.smallInteger
                           (GHC.Prim.word2Int#
                              (GHC.Prim.narrow16Word# (GHC.Prim.int2Word# dt))))
                   Futhark.Representation.Primitive.Int32Value dt
                   -> Futhark.Representation.Primitive.doSExt_$sintValue
                        t
                        (GHC.Integer.Type.smallInteger
                           (GHC.Prim.word2Int#
                              (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# dt))))
                   Futhark.Representation.Primitive.Int64Value dt
                   -> let {
                        x# :: GHC.Prim.Word# = GHC.Prim.int2Word# dt
                      } in
                      let {
                        i# :: GHC.Prim.Int# = GHC.Prim.word2Int# x#
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# i# 0) of wild1 {
                        GHC.Types.False
                        -> Futhark.Representation.Primitive.doSExt_$sintValue
                             t
                             (GHC.Integer.Type.wordToInteger x#)
                        GHC.Types.True
                        -> Futhark.Representation.Primitive.doSExt_$sintValue
                             t
                             (GHC.Integer.Type.smallInteger i#) } }) -}
04b92986bcdbc76ab4c43d5b938aff13
  floatValue ::
    GHC.Real.Real num =>
    Futhark.Representation.Primitive.FloatType
    -> num -> Futhark.Representation.Primitive.FloatValue
  {- Arity: 3,
     Strictness: <S(LLC(S(SS))),1*U(A,A,1*C1(U(U,U)))><S,1*U><L,U>,
     Unfolding: (\ @ num
                   $dReal :: GHC.Real.Real num
                   ds :: Futhark.Representation.Primitive.FloatType
                   eta :: num ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Float32
                   -> case GHC.Real.toRational
                             @ num
                             $dReal
                             eta of wild1 { GHC.Real.:% n d ->
                      case GHC.Float.rationalToFloat n d of dt { GHC.Types.F# dt1 ->
                      Futhark.Representation.Primitive.Float32Value dt1 } }
                   Futhark.Representation.Primitive.Float64
                   -> case GHC.Real.toRational
                             @ num
                             $dReal
                             eta of wild1 { GHC.Real.:% n d ->
                      case GHC.Float.rationalToDouble n d of dt { GHC.Types.D# dt1 ->
                      Futhark.Representation.Primitive.Float64Value dt1 } } }) -}
efc63156d1dcb32da2b760573354d8de
  floatValueType ::
    Futhark.Representation.Primitive.FloatValue
    -> Futhark.Representation.Primitive.FloatType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Futhark.Representation.Primitive.FloatValue ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Float32Value dt
                   -> Futhark.Representation.Primitive.Float32
                   Futhark.Representation.Primitive.Float64Value dt
                   -> Futhark.Representation.Primitive.Float64 }) -}
25205216425e8ddd11209478a03512dd
  intValue ::
    GHC.Real.Integral int =>
    Futhark.Representation.Primitive.IntType
    -> int -> Futhark.Representation.Primitive.IntValue
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),1*U(A,A,A,A,A,A,A,A,1*C1(U))><S,1*U><L,U>,
     Unfolding: (\ @ int
                   $dIntegral :: GHC.Real.Integral int
                   ds :: Futhark.Representation.Primitive.IntType
                   eta :: int ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Int8
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Real.toInteger @ int $dIntegral eta) of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int8Value
                        (GHC.Prim.narrow8Int# wild1) }
                   Futhark.Representation.Primitive.Int16
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Real.toInteger @ int $dIntegral eta) of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int16Value
                        (GHC.Prim.narrow16Int# wild1) }
                   Futhark.Representation.Primitive.Int32
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Real.toInteger @ int $dIntegral eta) of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int32Value
                        (GHC.Prim.narrow32Int# wild1) }
                   Futhark.Representation.Primitive.Int64
                   -> case GHC.Integer.Type.integerToInt
                             (GHC.Real.toInteger @ int $dIntegral eta) of wild1 { DEFAULT ->
                      Futhark.Representation.Primitive.Int64Value wild1 } }) -}
2e8010b24e69ab34906103eb82dfa4d1
  intValueType ::
    Futhark.Representation.Primitive.IntValue
    -> Futhark.Representation.Primitive.IntType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Futhark.Representation.Primitive.IntValue ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Int8Value dt
                   -> Futhark.Representation.Primitive.Int8
                   Futhark.Representation.Primitive.Int16Value dt
                   -> Futhark.Representation.Primitive.Int16
                   Futhark.Representation.Primitive.Int32Value dt
                   -> Futhark.Representation.Primitive.Int32
                   Futhark.Representation.Primitive.Int64Value dt
                   -> Futhark.Representation.Primitive.Int64 }) -}
5bd6391fdd1b5f78ebd31cfa30bccf91
  oneIsh ::
    Futhark.Representation.Primitive.PrimValue -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.PrimValue ->
                 case ds of wild {
                   Futhark.Representation.Primitive.IntValue ds1
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt
                        -> case dt of wild2 {
                             DEFAULT -> GHC.Types.False 1 -> GHC.Types.True }
                        Futhark.Representation.Primitive.Int16Value dt
                        -> case dt of wild2 {
                             DEFAULT -> GHC.Types.False 1 -> GHC.Types.True }
                        Futhark.Representation.Primitive.Int32Value dt
                        -> case dt of wild2 {
                             DEFAULT -> GHC.Types.False 1 -> GHC.Types.True }
                        Futhark.Representation.Primitive.Int64Value dt
                        -> case dt of wild2 {
                             DEFAULT -> GHC.Types.False 1 -> GHC.Types.True } }
                   Futhark.Representation.Primitive.FloatValue ds1
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqFloat# dt __float 1.0)
                        Futhark.Representation.Primitive.Float64Value dt
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==## dt 1.0) }
                   Futhark.Representation.Primitive.BoolValue ds1 -> ds1
                   Futhark.Representation.Primitive.Checked -> GHC.Types.False }) -}
dc0d28d3b16cf9951b59b7e7d9c59de6
  primBitSize ::
    Futhark.Representation.Primitive.PrimType -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Futhark.Representation.Primitive.PrimType ->
                 case Futhark.Representation.Primitive.$wprimBitSize
                        w of ww { DEFAULT ->
                 GHC.Types.I# ww }) -}
bbe43682251b0599bc097332a90482e1
  primByteSize ::
    GHC.Num.Num a => Futhark.Representation.Primitive.PrimType -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><S,1*U>,
     Unfolding: (\ @ a2
                   $dNum :: GHC.Num.Num a2
                   ds :: Futhark.Representation.Primitive.PrimType ->
                 case ds of wild {
                   Futhark.Representation.Primitive.IntType t
                   -> case t of wild1 {
                        Futhark.Representation.Primitive.Int8
                        -> GHC.Num.fromInteger
                             @ a2
                             $dNum
                             Futhark.Representation.Primitive.primByteSize4
                        Futhark.Representation.Primitive.Int16
                        -> GHC.Num.fromInteger
                             @ a2
                             $dNum
                             Futhark.Representation.Primitive.primByteSize3
                        Futhark.Representation.Primitive.Int32
                        -> GHC.Num.fromInteger
                             @ a2
                             $dNum
                             Futhark.Representation.Primitive.primByteSize2
                        Futhark.Representation.Primitive.Int64
                        -> GHC.Num.fromInteger
                             @ a2
                             $dNum
                             Futhark.Representation.Primitive.primByteSize1 }
                   Futhark.Representation.Primitive.FloatType t
                   -> case t of wild1 {
                        Futhark.Representation.Primitive.Float32
                        -> GHC.Num.fromInteger
                             @ a2
                             $dNum
                             Futhark.Representation.Primitive.primByteSize2
                        Futhark.Representation.Primitive.Float64
                        -> GHC.Num.fromInteger
                             @ a2
                             $dNum
                             Futhark.Representation.Primitive.primByteSize1 }
                   Futhark.Representation.Primitive.Bool
                   -> GHC.Num.fromInteger
                        @ a2
                        $dNum
                        Futhark.Representation.Primitive.primByteSize4
                   Futhark.Representation.Primitive.Cert
                   -> GHC.Num.fromInteger
                        @ a2
                        $dNum
                        Futhark.Representation.Primitive.primByteSize4 }) -}
92104dbcc0fe419789b5bdbdd31d1f2f
  primByteSize1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 8) -}
079b2169f146ca99c552a00a457ec3ba
  primByteSize2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 4) -}
835d5d05fe179fd5673dae8439a27d64
  primByteSize3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 2) -}
d055122f199d16dc6c76ab1a00601e2d
  primByteSize4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1) -}
b9de529f2da4895fe06b9c1e9d1ffe10
  primValueType ::
    Futhark.Representation.Primitive.PrimValue
    -> Futhark.Representation.Primitive.PrimType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.PrimValue ->
                 case ds of wild {
                   Futhark.Representation.Primitive.IntValue v
                   -> Futhark.Representation.Primitive.IntType
                        (case v of wild1 {
                           Futhark.Representation.Primitive.Int8Value dt
                           -> Futhark.Representation.Primitive.Int8
                           Futhark.Representation.Primitive.Int16Value dt
                           -> Futhark.Representation.Primitive.Int16
                           Futhark.Representation.Primitive.Int32Value dt
                           -> Futhark.Representation.Primitive.Int32
                           Futhark.Representation.Primitive.Int64Value dt
                           -> Futhark.Representation.Primitive.Int64 })
                   Futhark.Representation.Primitive.FloatValue v
                   -> Futhark.Representation.Primitive.FloatType
                        (case v of wild1 {
                           Futhark.Representation.Primitive.Float32Value dt
                           -> Futhark.Representation.Primitive.Float32
                           Futhark.Representation.Primitive.Float64Value dt
                           -> Futhark.Representation.Primitive.Float64 })
                   Futhark.Representation.Primitive.BoolValue ds1
                   -> Futhark.Representation.Primitive.Bool
                   Futhark.Representation.Primitive.Checked
                   -> Futhark.Representation.Primitive.Cert }) -}
363307190c6403fddf6fd8039a09fe84
  unOpType ::
    Futhark.Representation.Primitive.UnOp
    -> Futhark.Representation.Primitive.PrimType
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.UnOp ->
                 case ds of wild {
                   Futhark.Representation.Primitive.Not
                   -> Futhark.Representation.Primitive.Bool
                   Futhark.Representation.Primitive.Complement t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.Abs t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.FAbs t
                   -> Futhark.Representation.Primitive.FloatType t
                   Futhark.Representation.Primitive.SSignum t
                   -> Futhark.Representation.Primitive.IntType t
                   Futhark.Representation.Primitive.USignum t
                   -> Futhark.Representation.Primitive.IntType t }) -}
796e3cff016ddb4181a31dc8c4907daf
  zeroIsh ::
    Futhark.Representation.Primitive.PrimValue -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: (\ ds :: Futhark.Representation.Primitive.PrimValue ->
                 case ds of wild {
                   Futhark.Representation.Primitive.IntValue ds1
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Int8Value dt
                        -> case dt of wild2 {
                             DEFAULT -> GHC.Types.False 0 -> GHC.Types.True }
                        Futhark.Representation.Primitive.Int16Value dt
                        -> case dt of wild2 {
                             DEFAULT -> GHC.Types.False 0 -> GHC.Types.True }
                        Futhark.Representation.Primitive.Int32Value dt
                        -> case dt of wild2 {
                             DEFAULT -> GHC.Types.False 0 -> GHC.Types.True }
                        Futhark.Representation.Primitive.Int64Value dt
                        -> case dt of wild2 {
                             DEFAULT -> GHC.Types.False 0 -> GHC.Types.True } }
                   Futhark.Representation.Primitive.FloatValue ds1
                   -> case ds1 of wild1 {
                        Futhark.Representation.Primitive.Float32Value dt
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqFloat# dt __float 0.0)
                        Futhark.Representation.Primitive.Float64Value dt
                        -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==## dt 0.0) }
                   Futhark.Representation.Primitive.BoolValue ds1
                   -> case ds1 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False }
                   Futhark.Representation.Primitive.Checked -> GHC.Types.False }) -}
instance GHC.Enum.Bounded [Futhark.Representation.Primitive.FloatType]
  = Futhark.Representation.Primitive.$fBoundedFloatType
instance GHC.Enum.Bounded [Futhark.Representation.Primitive.IntType]
  = Futhark.Representation.Primitive.$fBoundedIntType
instance GHC.Enum.Bounded [Futhark.Representation.Primitive.PrimType]
  = Futhark.Representation.Primitive.$fBoundedPrimType
instance GHC.Enum.Enum [Futhark.Representation.Primitive.FloatType]
  = Futhark.Representation.Primitive.$fEnumFloatType
instance GHC.Enum.Enum [Futhark.Representation.Primitive.IntType]
  = Futhark.Representation.Primitive.$fEnumIntType
instance GHC.Enum.Enum [Futhark.Representation.Primitive.PrimType]
  = Futhark.Representation.Primitive.$fEnumPrimType
instance GHC.Classes.Eq [Futhark.Representation.Primitive.BinOp]
  = Futhark.Representation.Primitive.$fEqBinOp
instance GHC.Classes.Eq [Futhark.Representation.Primitive.CmpOp]
  = Futhark.Representation.Primitive.$fEqCmpOp
instance GHC.Classes.Eq [Futhark.Representation.Primitive.ConvOp]
  = Futhark.Representation.Primitive.$fEqConvOp
instance GHC.Classes.Eq [Futhark.Representation.Primitive.FloatType]
  = Futhark.Representation.Primitive.$fEqFloatType
instance GHC.Classes.Eq [Futhark.Representation.Primitive.FloatValue]
  = Futhark.Representation.Primitive.$fEqFloatValue
instance GHC.Classes.Eq [Futhark.Representation.Primitive.IntType]
  = Futhark.Representation.Primitive.$fEqIntType
instance GHC.Classes.Eq [Futhark.Representation.Primitive.IntValue]
  = Futhark.Representation.Primitive.$fEqIntValue
instance GHC.Classes.Eq [Futhark.Representation.Primitive.PrimType]
  = Futhark.Representation.Primitive.$fEqPrimType
instance GHC.Classes.Eq [Futhark.Representation.Primitive.PrimValue]
  = Futhark.Representation.Primitive.$fEqPrimValue
instance GHC.Classes.Eq [Futhark.Representation.Primitive.UnOp]
  = Futhark.Representation.Primitive.$fEqUnOp
instance Data.Hashable.Class.Hashable [Futhark.Representation.Primitive.FloatType]
  = Futhark.Representation.Primitive.$fHashableFloatType
instance Data.Hashable.Class.Hashable [Futhark.Representation.Primitive.IntType]
  = Futhark.Representation.Primitive.$fHashableIntType
instance Data.Hashable.Class.Hashable [Futhark.Representation.Primitive.PrimType]
  = Futhark.Representation.Primitive.$fHashablePrimType
instance GHC.Classes.Ord [Futhark.Representation.Primitive.BinOp]
  = Futhark.Representation.Primitive.$fOrdBinOp
instance GHC.Classes.Ord [Futhark.Representation.Primitive.CmpOp]
  = Futhark.Representation.Primitive.$fOrdCmpOp
instance GHC.Classes.Ord [Futhark.Representation.Primitive.ConvOp]
  = Futhark.Representation.Primitive.$fOrdConvOp
instance GHC.Classes.Ord [Futhark.Representation.Primitive.FloatType]
  = Futhark.Representation.Primitive.$fOrdFloatType
instance GHC.Classes.Ord [Futhark.Representation.Primitive.FloatValue]
  = Futhark.Representation.Primitive.$fOrdFloatValue
instance GHC.Classes.Ord [Futhark.Representation.Primitive.IntType]
  = Futhark.Representation.Primitive.$fOrdIntType
instance GHC.Classes.Ord [Futhark.Representation.Primitive.IntValue]
  = Futhark.Representation.Primitive.$fOrdIntValue
instance GHC.Classes.Ord [Futhark.Representation.Primitive.PrimType]
  = Futhark.Representation.Primitive.$fOrdPrimType
instance GHC.Classes.Ord [Futhark.Representation.Primitive.PrimValue]
  = Futhark.Representation.Primitive.$fOrdPrimValue
instance GHC.Classes.Ord [Futhark.Representation.Primitive.UnOp]
  = Futhark.Representation.Primitive.$fOrdUnOp
instance Text.PrettyPrint.Mainland.Pretty [Futhark.Representation.Primitive.FloatType]
  = Futhark.Representation.Primitive.$fPrettyFloatType
instance Text.PrettyPrint.Mainland.Pretty [Futhark.Representation.Primitive.FloatValue]
  = Futhark.Representation.Primitive.$fPrettyFloatValue
instance Text.PrettyPrint.Mainland.Pretty [Futhark.Representation.Primitive.IntType]
  = Futhark.Representation.Primitive.$fPrettyIntType
instance Text.PrettyPrint.Mainland.Pretty [Futhark.Representation.Primitive.IntValue]
  = Futhark.Representation.Primitive.$fPrettyIntValue
instance Text.PrettyPrint.Mainland.Pretty [Futhark.Representation.Primitive.PrimType]
  = Futhark.Representation.Primitive.$fPrettyPrimType
instance Text.PrettyPrint.Mainland.Pretty [Futhark.Representation.Primitive.PrimValue]
  = Futhark.Representation.Primitive.$fPrettyPrimValue
instance GHC.Show.Show [Futhark.Representation.Primitive.BinOp]
  = Futhark.Representation.Primitive.$fShowBinOp
instance GHC.Show.Show [Futhark.Representation.Primitive.CmpOp]
  = Futhark.Representation.Primitive.$fShowCmpOp
instance GHC.Show.Show [Futhark.Representation.Primitive.ConvOp]
  = Futhark.Representation.Primitive.$fShowConvOp
instance GHC.Show.Show [Futhark.Representation.Primitive.FloatType]
  = Futhark.Representation.Primitive.$fShowFloatType
instance GHC.Show.Show [Futhark.Representation.Primitive.FloatValue]
  = Futhark.Representation.Primitive.$fShowFloatValue
instance GHC.Show.Show [Futhark.Representation.Primitive.IntType]
  = Futhark.Representation.Primitive.$fShowIntType
instance GHC.Show.Show [Futhark.Representation.Primitive.IntValue]
  = Futhark.Representation.Primitive.$fShowIntValue
instance GHC.Show.Show [Futhark.Representation.Primitive.PrimType]
  = Futhark.Representation.Primitive.$fShowPrimType
instance GHC.Show.Show [Futhark.Representation.Primitive.PrimValue]
  = Futhark.Representation.Primitive.$fShowPrimValue
instance GHC.Show.Show [Futhark.Representation.Primitive.UnOp]
  = Futhark.Representation.Primitive.$fShowUnOp
"SPEC intValue @ Integer" [ALWAYS] forall $dIntegral :: GHC.Real.Integral
                                                          GHC.Integer.Type.Integer
  Futhark.Representation.Primitive.intValue @ GHC.Integer.Type.Integer
                                            $dIntegral
  = Futhark.Representation.Primitive.doSExt_$sintValue
"SPEC/Futhark.Representation.Primitive $dmpred @ PrimType" [ALWAYS] forall $dEnum :: GHC.Enum.Enum
                                                                                       Futhark.Representation.Primitive.PrimType
  GHC.Enum.$dmpred @ Futhark.Representation.Primitive.PrimType $dEnum
  = Futhark.Representation.Primitive.$fEnumPrimType_$s$dmpred
"SPEC/Futhark.Representation.Primitive $dmsucc @ PrimType" [ALWAYS] forall $dEnum :: GHC.Enum.Enum
                                                                                       Futhark.Representation.Primitive.PrimType
  GHC.Enum.$dmsucc @ Futhark.Representation.Primitive.PrimType $dEnum
  = Futhark.Representation.Primitive.$fEnumPrimType_$s$dmsucc
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

